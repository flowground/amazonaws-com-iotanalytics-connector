{
    "openapi": "3.0.0",
    "servers": [
        {
            "url": "https://iotanalytics.amazonaws.com/"
        },
        {
            "url": "http://iotanalytics.amazonaws.com/"
        }
    ],
    "x-hasEquivalentPaths": true,
    "info": {
        "contact": {
            "email": "mike.ralphson@gmail.com",
            "name": "Mike Ralphson",
            "url": "https://github.com/mermade/aws2openapi",
            "x-twitter": "PermittedSoc"
        },
        "description": "<p>AWS IoT Analytics allows you to collect large amounts of device data, process messages, and store them. You can then query the data and run sophisticated analytics on it. AWS IoT Analytics enables advanced data exploration through integration with Jupyter Notebooks and data visualization through integration with Amazon QuickSight.</p> <p>Traditional analytics and business intelligence tools are designed to process structured data. IoT data often comes from devices that record noisy processes (such as temperature, motion, or sound). As a result the data from these devices can have significant gaps, corrupted messages, and false readings that must be cleaned up before analysis can occur. Also, IoT data is often only meaningful in the context of other data from external sources. </p> <p>AWS IoT Analytics automates the steps required to analyze data from IoT devices. AWS IoT Analytics filters, transforms, and enriches IoT data before storing it in a time-series data store for analysis. You can set up the service to collect only the data you need from your devices, apply mathematical transforms to process the data, and enrich the data with device-specific metadata such as device type and location before storing it. Then, you can analyze your data by running queries using the built-in SQL query engine, or perform more complex analytics and machine learning inference. AWS IoT Analytics includes pre-built models for common IoT use cases so you can answer questions like which devices are about to fail or which customers are at risk of abandoning their wearable devices.</p>",
        "license": {
            "name": "Apache 2.0 License",
            "url": "http://www.apache.org/licenses/"
        },
        "termsOfService": "https://aws.amazon.com/service-terms/",
        "title": "AWS IoT Analytics",
        "version": "2017-11-27",
        "x-apiClientRegistration": {
            "url": "https://portal.aws.amazon.com/gp/aws/developer/registration/index.html?nc2=h_ct"
        },
        "x-apisguru-categories": [
            "cloud"
        ],
        "x-logo": {
            "backgroundColor": "#FFFFFF",
            "url": "https://api.apis.guru/v2/cache/logo/https_twitter.com_awscloud_profile_image.jpeg"
        },
        "x-origin": [
            {
                "contentType": "application/json",
                "converter": {
                    "url": "https://github.com/mermade/aws2openapi",
                    "version": "1.0.0"
                },
                "url": "https://raw.githubusercontent.com/aws/aws-sdk-js/master/apis/iotanalytics-2017-11-27.normal.json",
                "x-apisguru-direct": true
            }
        ],
        "x-preferred": true,
        "x-providerName": "amazonaws.com",
        "x-release": "v4",
        "x-serviceName": "iotanalytics"
    },
    "externalDocs": {
        "description": "Amazon Web Services documentation",
        "url": "https://aws.amazon.com/iotanalytics/"
    },
    "security": [
        {
            "hmac": []
        }
    ],
    "paths": {
        "/channels": {
            "get": {
                "description": "Retrieves a list of channels.",
                "operationId": "ListChannels",
                "parameters": [
                    {
                        "description": "Pagination limit",
                        "in": "query",
                        "name": "maxResults",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "Pagination token",
                        "in": "query",
                        "name": "nextToken",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "channelSummaries": {
                                            "description": "A list of \"ChannelSummary\" objects.",
                                            "items": {
                                                "description": "A summary of information about a channel.",
                                                "properties": {
                                                    "channelName": {
                                                        "description": "The name of the channel.",
                                                        "maxLength": 128,
                                                        "minLength": 1,
                                                        "pattern": "^[a-zA-Z0-9_]+$",
                                                        "type": "string"
                                                    },
                                                    "creationTime": {
                                                        "description": "When the channel was created.",
                                                        "format": "date-time",
                                                        "type": "string"
                                                    },
                                                    "lastUpdateTime": {
                                                        "description": "The last time the channel was updated.",
                                                        "format": "date-time",
                                                        "type": "string"
                                                    },
                                                    "status": {
                                                        "description": "The status of the channel.",
                                                        "enum": [
                                                            "CREATING",
                                                            "ACTIVE",
                                                            "DELETING"
                                                        ],
                                                        "type": "string"
                                                    }
                                                },
                                                "type": "object"
                                            },
                                            "type": "array"
                                        },
                                        "nextToken": {
                                            "description": "The token to retrieve the next set of results, or <code>null</code> if there are no more results.",
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "480": {
                        "description": "InvalidRequestException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "481": {
                        "description": "InternalFailureException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "482": {
                        "description": "ServiceUnavailableException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "483": {
                        "description": "ThrottlingException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {},
                                "type": "object"
                            }
                        }
                    },
                    "required": true
                }
            },
            "parameters": [
                {
                    "in": "query",
                    "name": "Action",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "query",
                    "name": "Version",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Content-Sha256",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Date",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Algorithm",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Credential",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Security-Token",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Signature",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-SignedHeaders",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                }
            ],
            "post": {
                "description": "Creates a channel. A channel collects data from an MQTT topic and archives the raw, unprocessed messages before publishing the data to a pipeline.",
                "operationId": "CreateChannel",
                "responses": {
                    "201": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "channelArn": {
                                            "description": "The ARN of the channel.",
                                            "type": "string"
                                        },
                                        "channelName": {
                                            "description": "The name of the channel.",
                                            "maxLength": 128,
                                            "minLength": 1,
                                            "pattern": "^[a-zA-Z0-9_]+$",
                                            "type": "string"
                                        },
                                        "retentionPeriod": {
                                            "description": "How long, in days, message data is kept for the channel.",
                                            "properties": {
                                                "numberOfDays": {
                                                    "description": "The number of days that message data is kept. The \"unlimited\" parameter must be false.",
                                                    "minimum": 1,
                                                    "type": "integer"
                                                },
                                                "unlimited": {
                                                    "description": "If true, message data is kept indefinitely.",
                                                    "type": "boolean"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "480": {
                        "description": "InvalidRequestException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "481": {
                        "description": "ResourceAlreadyExistsException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "482": {
                        "description": "InternalFailureException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "483": {
                        "description": "ServiceUnavailableException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "484": {
                        "description": "ThrottlingException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "485": {
                        "description": "LimitExceededException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "channelName": {
                                        "description": "The name of the channel.",
                                        "maxLength": 128,
                                        "minLength": 1,
                                        "pattern": "^[a-zA-Z0-9_]+$",
                                        "type": "string"
                                    },
                                    "retentionPeriod": {
                                        "description": "How long, in days, message data is kept for the channel.",
                                        "properties": {
                                            "numberOfDays": {
                                                "description": "The number of days that message data is kept. The \"unlimited\" parameter must be false.",
                                                "minimum": 1,
                                                "type": "integer"
                                            },
                                            "unlimited": {
                                                "description": "If true, message data is kept indefinitely.",
                                                "type": "boolean"
                                            }
                                        },
                                        "type": "object"
                                    },
                                    "tags": {
                                        "description": "Metadata which can be used to manage the channel.",
                                        "items": {
                                            "description": "A set of key/value pairs which are used to manage the resource.",
                                            "properties": {
                                                "key": {
                                                    "description": "The tag's key.",
                                                    "maxLength": 256,
                                                    "minLength": 1,
                                                    "type": "string"
                                                },
                                                "value": {
                                                    "description": "The tag's value.",
                                                    "maxLength": 256,
                                                    "minLength": 1,
                                                    "type": "string"
                                                }
                                            },
                                            "required": [
                                                "key",
                                                "value"
                                            ],
                                            "type": "object"
                                        },
                                        "maxItems": 50,
                                        "minItems": 1,
                                        "type": "array"
                                    }
                                },
                                "required": [
                                    "channelName"
                                ],
                                "type": "object"
                            }
                        }
                    },
                    "required": true
                }
            }
        },
        "/channels/{channelName}": {
            "delete": {
                "description": "Deletes the specified channel.",
                "operationId": "DeleteChannel",
                "parameters": [
                    {
                        "in": "path",
                        "name": "channelName",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Success"
                    },
                    "480": {
                        "description": "InvalidRequestException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "481": {
                        "description": "ResourceNotFoundException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "482": {
                        "description": "InternalFailureException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "483": {
                        "description": "ServiceUnavailableException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "484": {
                        "description": "ThrottlingException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {},
                                "type": "object"
                            }
                        }
                    },
                    "required": true
                }
            },
            "get": {
                "description": "Retrieves information about a channel.",
                "operationId": "DescribeChannel",
                "parameters": [
                    {
                        "in": "path",
                        "name": "channelName",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "channel": {
                                            "description": "An object that contains information about the channel.",
                                            "properties": {
                                                "arn": {
                                                    "description": "The ARN of the channel.",
                                                    "type": "string"
                                                },
                                                "creationTime": {
                                                    "description": "When the channel was created.",
                                                    "format": "date-time",
                                                    "type": "string"
                                                },
                                                "lastUpdateTime": {
                                                    "description": "When the channel was last updated.",
                                                    "format": "date-time",
                                                    "type": "string"
                                                },
                                                "name": {
                                                    "description": "The name of the channel.",
                                                    "maxLength": 128,
                                                    "minLength": 1,
                                                    "pattern": "^[a-zA-Z0-9_]+$",
                                                    "type": "string"
                                                },
                                                "retentionPeriod": {
                                                    "description": "How long, in days, message data is kept for the channel.",
                                                    "properties": {
                                                        "numberOfDays": {
                                                            "description": "The number of days that message data is kept. The \"unlimited\" parameter must be false.",
                                                            "minimum": 1,
                                                            "type": "integer"
                                                        },
                                                        "unlimited": {
                                                            "description": "If true, message data is kept indefinitely.",
                                                            "type": "boolean"
                                                        }
                                                    },
                                                    "type": "object"
                                                },
                                                "status": {
                                                    "description": "The status of the channel.",
                                                    "enum": [
                                                        "CREATING",
                                                        "ACTIVE",
                                                        "DELETING"
                                                    ],
                                                    "type": "string"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "statistics": {
                                            "description": "Statistics about the channel. Included if the 'includeStatistics' parameter is set to true in the request.",
                                            "properties": {
                                                "size": {
                                                    "description": "The estimated size of the channel.",
                                                    "properties": {
                                                        "estimatedOn": {
                                                            "description": "The time when the estimate of the size of the resource was made.",
                                                            "format": "date-time",
                                                            "type": "string"
                                                        },
                                                        "estimatedSizeInBytes": {
                                                            "description": "The estimated size of the resource in bytes.",
                                                            "format": "double",
                                                            "type": "number"
                                                        }
                                                    },
                                                    "type": "object"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "480": {
                        "description": "InvalidRequestException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "481": {
                        "description": "ResourceNotFoundException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "482": {
                        "description": "InternalFailureException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "483": {
                        "description": "ServiceUnavailableException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "484": {
                        "description": "ThrottlingException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {},
                                "type": "object"
                            }
                        }
                    },
                    "required": true
                }
            },
            "parameters": [
                {
                    "in": "query",
                    "name": "Action",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "query",
                    "name": "Version",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Content-Sha256",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Date",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Algorithm",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Credential",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Security-Token",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Signature",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-SignedHeaders",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                }
            ],
            "put": {
                "description": "Updates the settings of a channel.",
                "operationId": "UpdateChannel",
                "parameters": [
                    {
                        "in": "path",
                        "name": "channelName",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success"
                    },
                    "480": {
                        "description": "InvalidRequestException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "481": {
                        "description": "ResourceNotFoundException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "482": {
                        "description": "InternalFailureException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "483": {
                        "description": "ServiceUnavailableException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "484": {
                        "description": "ThrottlingException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "retentionPeriod": {
                                        "description": "How long, in days, message data is kept for the channel.",
                                        "properties": {
                                            "numberOfDays": {
                                                "description": "The number of days that message data is kept. The \"unlimited\" parameter must be false.",
                                                "minimum": 1,
                                                "type": "integer"
                                            },
                                            "unlimited": {
                                                "description": "If true, message data is kept indefinitely.",
                                                "type": "boolean"
                                            }
                                        },
                                        "type": "object"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    },
                    "required": true
                }
            }
        },
        "/channels/{channelName}/sample": {
            "get": {
                "description": "Retrieves a sample of messages from the specified channel ingested during the specified timeframe. Up to 10 messages can be retrieved.",
                "operationId": "SampleChannelData",
                "parameters": [
                    {
                        "in": "path",
                        "name": "channelName",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "payloads": {
                                            "description": "The list of message samples. Each sample message is returned as a base64-encoded string.",
                                            "items": {
                                                "type": "string"
                                            },
                                            "maxItems": 10,
                                            "minItems": 1,
                                            "type": "array"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "480": {
                        "description": "InvalidRequestException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "481": {
                        "description": "ResourceNotFoundException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "482": {
                        "description": "InternalFailureException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "483": {
                        "description": "ServiceUnavailableException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "484": {
                        "description": "ThrottlingException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {},
                                "type": "object"
                            }
                        }
                    },
                    "required": true
                }
            },
            "parameters": [
                {
                    "in": "query",
                    "name": "Action",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "query",
                    "name": "Version",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Content-Sha256",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Date",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Algorithm",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Credential",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Security-Token",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Signature",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-SignedHeaders",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                }
            ]
        },
        "/datasets": {
            "get": {
                "description": "Retrieves information about data sets.",
                "operationId": "ListDatasets",
                "parameters": [
                    {
                        "description": "Pagination limit",
                        "in": "query",
                        "name": "maxResults",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "Pagination token",
                        "in": "query",
                        "name": "nextToken",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "datasetSummaries": {
                                            "description": "A list of \"DatasetSummary\" objects.",
                                            "items": {
                                                "description": "A summary of information about a data set.",
                                                "properties": {
                                                    "actions": {
                                                        "description": "A list of \"DataActionSummary\" objects.",
                                                        "items": {
                                                            "description": "<p/>",
                                                            "properties": {
                                                                "actionName": {
                                                                    "description": "The name of the action which automatically creates the data set's contents.",
                                                                    "maxLength": 128,
                                                                    "minLength": 1,
                                                                    "pattern": "^[a-zA-Z0-9_]+$",
                                                                    "type": "string"
                                                                },
                                                                "actionType": {
                                                                    "description": "The type of action by which the data set's contents are automatically created.",
                                                                    "enum": [
                                                                        "QUERY",
                                                                        "CONTAINER"
                                                                    ],
                                                                    "type": "string"
                                                                }
                                                            },
                                                            "type": "object"
                                                        },
                                                        "maxItems": 1,
                                                        "minItems": 1,
                                                        "type": "array"
                                                    },
                                                    "creationTime": {
                                                        "description": "The time the data set was created.",
                                                        "format": "date-time",
                                                        "type": "string"
                                                    },
                                                    "datasetName": {
                                                        "description": "The name of the data set.",
                                                        "maxLength": 128,
                                                        "minLength": 1,
                                                        "pattern": "^[a-zA-Z0-9_]+$",
                                                        "type": "string"
                                                    },
                                                    "lastUpdateTime": {
                                                        "description": "The last time the data set was updated.",
                                                        "format": "date-time",
                                                        "type": "string"
                                                    },
                                                    "status": {
                                                        "description": "The status of the data set.",
                                                        "enum": [
                                                            "CREATING",
                                                            "ACTIVE",
                                                            "DELETING"
                                                        ],
                                                        "type": "string"
                                                    },
                                                    "triggers": {
                                                        "description": "A list of triggers. A trigger causes data set content to be populated at a specified time interval or when another data set is populated. The list of triggers can be empty or contain up to five DataSetTrigger objects",
                                                        "items": {
                                                            "description": "The \"DatasetTrigger\" that specifies when the data set is automatically updated.",
                                                            "properties": {
                                                                "dataset": {
                                                                    "description": "The data set whose content creation triggers the creation of this data set's contents.",
                                                                    "properties": {
                                                                        "name": {
                                                                            "description": "The name of the data set whose content generation triggers the new data set content generation.",
                                                                            "maxLength": 128,
                                                                            "minLength": 1,
                                                                            "pattern": "^[a-zA-Z0-9_]+$",
                                                                            "type": "string"
                                                                        }
                                                                    },
                                                                    "required": [
                                                                        "name"
                                                                    ],
                                                                    "type": "object"
                                                                },
                                                                "schedule": {
                                                                    "description": "The \"Schedule\" when the trigger is initiated.",
                                                                    "properties": {
                                                                        "expression": {
                                                                            "description": "The expression that defines when to trigger an update. For more information, see <a href=\"https://docs.aws.amazon.com/AmazonCloudWatch/latest/events/ScheduledEvents.html\"> Schedule Expressions for Rules</a> in the Amazon CloudWatch documentation.",
                                                                            "type": "string"
                                                                        }
                                                                    },
                                                                    "type": "object"
                                                                }
                                                            },
                                                            "type": "object"
                                                        },
                                                        "maxItems": 5,
                                                        "minItems": 0,
                                                        "type": "array"
                                                    }
                                                },
                                                "type": "object"
                                            },
                                            "type": "array"
                                        },
                                        "nextToken": {
                                            "description": "The token to retrieve the next set of results, or <code>null</code> if there are no more results.",
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "480": {
                        "description": "InvalidRequestException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "481": {
                        "description": "InternalFailureException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "482": {
                        "description": "ServiceUnavailableException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "483": {
                        "description": "ThrottlingException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {},
                                "type": "object"
                            }
                        }
                    },
                    "required": true
                }
            },
            "parameters": [
                {
                    "in": "query",
                    "name": "Action",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "query",
                    "name": "Version",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Content-Sha256",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Date",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Algorithm",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Credential",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Security-Token",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Signature",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-SignedHeaders",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                }
            ],
            "post": {
                "description": "Creates a data set. A data set stores data retrieved from a data store by applying a \"queryAction\" (a SQL query) or a \"containerAction\" (executing a containerized application). This operation creates the skeleton of a data set. The data set can be populated manually by calling \"CreateDatasetContent\" or automatically according to a \"trigger\" you specify.",
                "operationId": "CreateDataset",
                "responses": {
                    "201": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "datasetArn": {
                                            "description": "The ARN of the data set.",
                                            "type": "string"
                                        },
                                        "datasetName": {
                                            "description": "The name of the data set.",
                                            "maxLength": 128,
                                            "minLength": 1,
                                            "pattern": "^[a-zA-Z0-9_]+$",
                                            "type": "string"
                                        },
                                        "retentionPeriod": {
                                            "description": "How long, in days, message data is kept for the data set.",
                                            "properties": {
                                                "numberOfDays": {
                                                    "description": "The number of days that message data is kept. The \"unlimited\" parameter must be false.",
                                                    "minimum": 1,
                                                    "type": "integer"
                                                },
                                                "unlimited": {
                                                    "description": "If true, message data is kept indefinitely.",
                                                    "type": "boolean"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "480": {
                        "description": "InvalidRequestException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "481": {
                        "description": "ResourceAlreadyExistsException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "482": {
                        "description": "InternalFailureException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "483": {
                        "description": "ServiceUnavailableException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "484": {
                        "description": "ThrottlingException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "485": {
                        "description": "LimitExceededException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "actions": {
                                        "description": "A list of actions that create the data set contents.",
                                        "items": {
                                            "description": "A \"DatasetAction\" object that specifies how data set contents are automatically created.",
                                            "properties": {
                                                "actionName": {
                                                    "description": "The name of the data set action by which data set contents are automatically created.",
                                                    "maxLength": 128,
                                                    "minLength": 1,
                                                    "pattern": "^[a-zA-Z0-9_]+$",
                                                    "type": "string"
                                                },
                                                "containerAction": {
                                                    "description": "Information which allows the system to run a containerized application in order to create the data set contents. The application must be in a Docker container along with any needed support libraries.",
                                                    "properties": {
                                                        "executionRoleArn": {
                                                            "description": "The ARN of the role which gives permission to the system to access needed resources in order to run the \"containerAction\". This includes, at minimum, permission to retrieve the data set contents which are the input to the containerized application.",
                                                            "maxLength": 2048,
                                                            "minLength": 20,
                                                            "type": "string"
                                                        },
                                                        "image": {
                                                            "description": "The ARN of the Docker container stored in your account. The Docker container contains an application and needed support libraries and is used to generate data set contents.",
                                                            "maxLength": 255,
                                                            "type": "string"
                                                        },
                                                        "resourceConfiguration": {
                                                            "description": "Configuration of the resource which executes the \"containerAction\".",
                                                            "properties": {
                                                                "computeType": {
                                                                    "description": "The type of the compute resource used to execute the \"containerAction\". Possible values are: ACU_1 (vCPU=4, memory=16GiB) or ACU_2 (vCPU=8, memory=32GiB).",
                                                                    "enum": [
                                                                        "ACU_1",
                                                                        "ACU_2"
                                                                    ],
                                                                    "type": "string"
                                                                },
                                                                "volumeSizeInGB": {
                                                                    "description": "The size (in GB) of the persistent storage available to the resource instance used to execute the \"containerAction\" (min: 1, max: 50).",
                                                                    "maximum": 50,
                                                                    "minimum": 1,
                                                                    "type": "integer"
                                                                }
                                                            },
                                                            "required": [
                                                                "computeType",
                                                                "volumeSizeInGB"
                                                            ],
                                                            "type": "object"
                                                        },
                                                        "variables": {
                                                            "description": "The values of variables used within the context of the execution of the containerized application (basically, parameters passed to the application). Each variable must have a name and a value given by one of \"stringValue\", \"datasetContentVersionValue\", or \"outputFileUriValue\".",
                                                            "items": {
                                                                "description": "An instance of a variable to be passed to the \"containerAction\" execution. Each variable must have a name and a value given by one of \"stringValue\", \"datasetContentVersionValue\", or \"outputFileUriValue\".",
                                                                "properties": {
                                                                    "datasetContentVersionValue": {
                                                                        "description": "The value of the variable as a structure that specifies a data set content version.",
                                                                        "properties": {
                                                                            "datasetName": {
                                                                                "description": "The name of the data set whose latest contents are used as input to the notebook or application.",
                                                                                "maxLength": 128,
                                                                                "minLength": 1,
                                                                                "pattern": "^[a-zA-Z0-9_]+$",
                                                                                "type": "string"
                                                                            }
                                                                        },
                                                                        "required": [
                                                                            "datasetName"
                                                                        ],
                                                                        "type": "object"
                                                                    },
                                                                    "doubleValue": {
                                                                        "description": "The value of the variable as a double (numeric).",
                                                                        "format": "double",
                                                                        "type": "number"
                                                                    },
                                                                    "name": {
                                                                        "description": "The name of the variable.",
                                                                        "maxLength": 256,
                                                                        "minLength": 1,
                                                                        "type": "string"
                                                                    },
                                                                    "outputFileUriValue": {
                                                                        "description": "The value of the variable as a structure that specifies an output file URI.",
                                                                        "properties": {
                                                                            "fileName": {
                                                                                "description": "The URI of the location where data set contents are stored, usually the URI of a file in an S3 bucket.",
                                                                                "pattern": "[\\w\\.-]{1,255}",
                                                                                "type": "string"
                                                                            }
                                                                        },
                                                                        "required": [
                                                                            "fileName"
                                                                        ],
                                                                        "type": "object"
                                                                    },
                                                                    "stringValue": {
                                                                        "description": "The value of the variable as a string.",
                                                                        "maxLength": 1024,
                                                                        "minLength": 0,
                                                                        "type": "string"
                                                                    }
                                                                },
                                                                "required": [
                                                                    "name"
                                                                ],
                                                                "type": "object"
                                                            },
                                                            "maxItems": 50,
                                                            "minItems": 0,
                                                            "type": "array"
                                                        }
                                                    },
                                                    "required": [
                                                        "image",
                                                        "executionRoleArn",
                                                        "resourceConfiguration"
                                                    ],
                                                    "type": "object"
                                                },
                                                "queryAction": {
                                                    "description": "An \"SqlQueryDatasetAction\" object that uses an SQL query to automatically create data set contents.",
                                                    "properties": {
                                                        "filters": {
                                                            "description": "Pre-filters applied to message data.",
                                                            "items": {
                                                                "description": "Information which is used to filter message data, to segregate it according to the time frame in which it arrives.",
                                                                "properties": {
                                                                    "deltaTime": {
                                                                        "description": "Used to limit data to that which has arrived since the last execution of the action.",
                                                                        "properties": {
                                                                            "offsetSeconds": {
                                                                                "description": "The number of seconds of estimated \"in flight\" lag time of message data. When you create data set contents using message data from a specified time frame, some message data may still be \"in flight\" when processing begins, and so will not arrive in time to be processed. Use this field to make allowances for the \"in flight\" time of your message data, so that data not processed from a previous time frame will be included with the next time frame. Without this, missed message data would be excluded from processing during the next time frame as well, because its timestamp places it within the previous time frame.",
                                                                                "type": "integer"
                                                                            },
                                                                            "timeExpression": {
                                                                                "description": "An expression by which the time of the message data may be determined. This may be the name of a timestamp field, or a SQL expression which is used to derive the time the message data was generated.",
                                                                                "type": "string"
                                                                            }
                                                                        },
                                                                        "required": [
                                                                            "offsetSeconds",
                                                                            "timeExpression"
                                                                        ],
                                                                        "type": "object"
                                                                    }
                                                                },
                                                                "type": "object"
                                                            },
                                                            "maxItems": 1,
                                                            "minItems": 0,
                                                            "type": "array"
                                                        },
                                                        "sqlQuery": {
                                                            "description": "A SQL query string.",
                                                            "type": "string"
                                                        }
                                                    },
                                                    "required": [
                                                        "sqlQuery"
                                                    ],
                                                    "type": "object"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "maxItems": 1,
                                        "minItems": 1,
                                        "type": "array"
                                    },
                                    "contentDeliveryRules": {
                                        "description": "When data set contents are created they are delivered to destinations specified here.",
                                        "items": {
                                            "description": "When data set contents are created they are delivered to destination specified here.",
                                            "properties": {
                                                "destination": {
                                                    "description": "The destination to which data set contents are delivered.",
                                                    "properties": {
                                                        "iotEventsDestinationConfiguration": {
                                                            "description": "Configuration information for delivery of data set contents to AWS IoT Events.",
                                                            "properties": {
                                                                "inputName": {
                                                                    "description": "The name of the AWS IoT Events input to which data set contents are delivered.",
                                                                    "maxLength": 128,
                                                                    "minLength": 1,
                                                                    "pattern": "^[a-zA-Z][a-zA-Z0-9_]*$",
                                                                    "type": "string"
                                                                },
                                                                "roleArn": {
                                                                    "description": "The ARN of the role which grants AWS IoT Analytics permission to deliver data set contents to an AWS IoT Events input.",
                                                                    "maxLength": 2048,
                                                                    "minLength": 20,
                                                                    "type": "string"
                                                                }
                                                            },
                                                            "required": [
                                                                "inputName",
                                                                "roleArn"
                                                            ],
                                                            "type": "object"
                                                        }
                                                    },
                                                    "type": "object"
                                                },
                                                "entryName": {
                                                    "description": "The name of the data set content delivery rules entry.",
                                                    "type": "string"
                                                }
                                            },
                                            "required": [
                                                "destination"
                                            ],
                                            "type": "object"
                                        },
                                        "maxItems": 20,
                                        "minItems": 0,
                                        "type": "array"
                                    },
                                    "datasetName": {
                                        "description": "The name of the data set.",
                                        "maxLength": 128,
                                        "minLength": 1,
                                        "pattern": "^[a-zA-Z0-9_]+$",
                                        "type": "string"
                                    },
                                    "retentionPeriod": {
                                        "description": "[Optional] How long, in days, message data is kept for the data set. If not given or set to null, the latest version of the dataset content plus the latest succeeded version (if they are different) are retained for at most 90 days.",
                                        "properties": {
                                            "numberOfDays": {
                                                "description": "The number of days that message data is kept. The \"unlimited\" parameter must be false.",
                                                "minimum": 1,
                                                "type": "integer"
                                            },
                                            "unlimited": {
                                                "description": "If true, message data is kept indefinitely.",
                                                "type": "boolean"
                                            }
                                        },
                                        "type": "object"
                                    },
                                    "tags": {
                                        "description": "Metadata which can be used to manage the data set.",
                                        "items": {
                                            "description": "A set of key/value pairs which are used to manage the resource.",
                                            "properties": {
                                                "key": {
                                                    "description": "The tag's key.",
                                                    "maxLength": 256,
                                                    "minLength": 1,
                                                    "type": "string"
                                                },
                                                "value": {
                                                    "description": "The tag's value.",
                                                    "maxLength": 256,
                                                    "minLength": 1,
                                                    "type": "string"
                                                }
                                            },
                                            "required": [
                                                "key",
                                                "value"
                                            ],
                                            "type": "object"
                                        },
                                        "maxItems": 50,
                                        "minItems": 1,
                                        "type": "array"
                                    },
                                    "triggers": {
                                        "description": "A list of triggers. A trigger causes data set contents to be populated at a specified time interval or when another data set's contents are created. The list of triggers can be empty or contain up to five <b>DataSetTrigger</b> objects.",
                                        "items": {
                                            "description": "The \"DatasetTrigger\" that specifies when the data set is automatically updated.",
                                            "properties": {
                                                "dataset": {
                                                    "description": "The data set whose content creation triggers the creation of this data set's contents.",
                                                    "properties": {
                                                        "name": {
                                                            "description": "The name of the data set whose content generation triggers the new data set content generation.",
                                                            "maxLength": 128,
                                                            "minLength": 1,
                                                            "pattern": "^[a-zA-Z0-9_]+$",
                                                            "type": "string"
                                                        }
                                                    },
                                                    "required": [
                                                        "name"
                                                    ],
                                                    "type": "object"
                                                },
                                                "schedule": {
                                                    "description": "The \"Schedule\" when the trigger is initiated.",
                                                    "properties": {
                                                        "expression": {
                                                            "description": "The expression that defines when to trigger an update. For more information, see <a href=\"https://docs.aws.amazon.com/AmazonCloudWatch/latest/events/ScheduledEvents.html\"> Schedule Expressions for Rules</a> in the Amazon CloudWatch documentation.",
                                                            "type": "string"
                                                        }
                                                    },
                                                    "type": "object"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "maxItems": 5,
                                        "minItems": 0,
                                        "type": "array"
                                    }
                                },
                                "required": [
                                    "datasetName",
                                    "actions"
                                ],
                                "type": "object"
                            }
                        }
                    },
                    "required": true
                }
            }
        },
        "/datasets/{datasetName}": {
            "delete": {
                "description": "<p>Deletes the specified data set.</p> <p>You do not have to delete the content of the data set before you perform this operation.</p>",
                "operationId": "DeleteDataset",
                "parameters": [
                    {
                        "in": "path",
                        "name": "datasetName",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Success"
                    },
                    "480": {
                        "description": "InvalidRequestException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "481": {
                        "description": "ResourceNotFoundException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "482": {
                        "description": "InternalFailureException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "483": {
                        "description": "ServiceUnavailableException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "484": {
                        "description": "ThrottlingException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {},
                                "type": "object"
                            }
                        }
                    },
                    "required": true
                }
            },
            "get": {
                "description": "Retrieves information about a data set.",
                "operationId": "DescribeDataset",
                "parameters": [
                    {
                        "in": "path",
                        "name": "datasetName",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "dataset": {
                                            "description": "An object that contains information about the data set.",
                                            "properties": {
                                                "actions": {
                                                    "description": "The \"DatasetAction\" objects that automatically create the data set contents.",
                                                    "items": {
                                                        "description": "A \"DatasetAction\" object that specifies how data set contents are automatically created.",
                                                        "properties": {
                                                            "actionName": {
                                                                "description": "The name of the data set action by which data set contents are automatically created.",
                                                                "maxLength": 128,
                                                                "minLength": 1,
                                                                "pattern": "^[a-zA-Z0-9_]+$",
                                                                "type": "string"
                                                            },
                                                            "containerAction": {
                                                                "description": "Information which allows the system to run a containerized application in order to create the data set contents. The application must be in a Docker container along with any needed support libraries.",
                                                                "properties": {
                                                                    "executionRoleArn": {
                                                                        "description": "The ARN of the role which gives permission to the system to access needed resources in order to run the \"containerAction\". This includes, at minimum, permission to retrieve the data set contents which are the input to the containerized application.",
                                                                        "maxLength": 2048,
                                                                        "minLength": 20,
                                                                        "type": "string"
                                                                    },
                                                                    "image": {
                                                                        "description": "The ARN of the Docker container stored in your account. The Docker container contains an application and needed support libraries and is used to generate data set contents.",
                                                                        "maxLength": 255,
                                                                        "type": "string"
                                                                    },
                                                                    "resourceConfiguration": {
                                                                        "description": "Configuration of the resource which executes the \"containerAction\".",
                                                                        "properties": {
                                                                            "computeType": {
                                                                                "description": "The type of the compute resource used to execute the \"containerAction\". Possible values are: ACU_1 (vCPU=4, memory=16GiB) or ACU_2 (vCPU=8, memory=32GiB).",
                                                                                "enum": [
                                                                                    "ACU_1",
                                                                                    "ACU_2"
                                                                                ],
                                                                                "type": "string"
                                                                            },
                                                                            "volumeSizeInGB": {
                                                                                "description": "The size (in GB) of the persistent storage available to the resource instance used to execute the \"containerAction\" (min: 1, max: 50).",
                                                                                "maximum": 50,
                                                                                "minimum": 1,
                                                                                "type": "integer"
                                                                            }
                                                                        },
                                                                        "required": [
                                                                            "computeType",
                                                                            "volumeSizeInGB"
                                                                        ],
                                                                        "type": "object"
                                                                    },
                                                                    "variables": {
                                                                        "description": "The values of variables used within the context of the execution of the containerized application (basically, parameters passed to the application). Each variable must have a name and a value given by one of \"stringValue\", \"datasetContentVersionValue\", or \"outputFileUriValue\".",
                                                                        "items": {
                                                                            "description": "An instance of a variable to be passed to the \"containerAction\" execution. Each variable must have a name and a value given by one of \"stringValue\", \"datasetContentVersionValue\", or \"outputFileUriValue\".",
                                                                            "properties": {
                                                                                "datasetContentVersionValue": {
                                                                                    "description": "The value of the variable as a structure that specifies a data set content version.",
                                                                                    "properties": {
                                                                                        "datasetName": {
                                                                                            "description": "The name of the data set whose latest contents are used as input to the notebook or application.",
                                                                                            "maxLength": 128,
                                                                                            "minLength": 1,
                                                                                            "pattern": "^[a-zA-Z0-9_]+$",
                                                                                            "type": "string"
                                                                                        }
                                                                                    },
                                                                                    "required": [
                                                                                        "datasetName"
                                                                                    ],
                                                                                    "type": "object"
                                                                                },
                                                                                "doubleValue": {
                                                                                    "description": "The value of the variable as a double (numeric).",
                                                                                    "format": "double",
                                                                                    "type": "number"
                                                                                },
                                                                                "name": {
                                                                                    "description": "The name of the variable.",
                                                                                    "maxLength": 256,
                                                                                    "minLength": 1,
                                                                                    "type": "string"
                                                                                },
                                                                                "outputFileUriValue": {
                                                                                    "description": "The value of the variable as a structure that specifies an output file URI.",
                                                                                    "properties": {
                                                                                        "fileName": {
                                                                                            "description": "The URI of the location where data set contents are stored, usually the URI of a file in an S3 bucket.",
                                                                                            "pattern": "[\\w\\.-]{1,255}",
                                                                                            "type": "string"
                                                                                        }
                                                                                    },
                                                                                    "required": [
                                                                                        "fileName"
                                                                                    ],
                                                                                    "type": "object"
                                                                                },
                                                                                "stringValue": {
                                                                                    "description": "The value of the variable as a string.",
                                                                                    "maxLength": 1024,
                                                                                    "minLength": 0,
                                                                                    "type": "string"
                                                                                }
                                                                            },
                                                                            "required": [
                                                                                "name"
                                                                            ],
                                                                            "type": "object"
                                                                        },
                                                                        "maxItems": 50,
                                                                        "minItems": 0,
                                                                        "type": "array"
                                                                    }
                                                                },
                                                                "required": [
                                                                    "image",
                                                                    "executionRoleArn",
                                                                    "resourceConfiguration"
                                                                ],
                                                                "type": "object"
                                                            },
                                                            "queryAction": {
                                                                "description": "An \"SqlQueryDatasetAction\" object that uses an SQL query to automatically create data set contents.",
                                                                "properties": {
                                                                    "filters": {
                                                                        "description": "Pre-filters applied to message data.",
                                                                        "items": {
                                                                            "description": "Information which is used to filter message data, to segregate it according to the time frame in which it arrives.",
                                                                            "properties": {
                                                                                "deltaTime": {
                                                                                    "description": "Used to limit data to that which has arrived since the last execution of the action.",
                                                                                    "properties": {
                                                                                        "offsetSeconds": {
                                                                                            "description": "The number of seconds of estimated \"in flight\" lag time of message data. When you create data set contents using message data from a specified time frame, some message data may still be \"in flight\" when processing begins, and so will not arrive in time to be processed. Use this field to make allowances for the \"in flight\" time of your message data, so that data not processed from a previous time frame will be included with the next time frame. Without this, missed message data would be excluded from processing during the next time frame as well, because its timestamp places it within the previous time frame.",
                                                                                            "type": "integer"
                                                                                        },
                                                                                        "timeExpression": {
                                                                                            "description": "An expression by which the time of the message data may be determined. This may be the name of a timestamp field, or a SQL expression which is used to derive the time the message data was generated.",
                                                                                            "type": "string"
                                                                                        }
                                                                                    },
                                                                                    "required": [
                                                                                        "offsetSeconds",
                                                                                        "timeExpression"
                                                                                    ],
                                                                                    "type": "object"
                                                                                }
                                                                            },
                                                                            "type": "object"
                                                                        },
                                                                        "maxItems": 1,
                                                                        "minItems": 0,
                                                                        "type": "array"
                                                                    },
                                                                    "sqlQuery": {
                                                                        "description": "A SQL query string.",
                                                                        "type": "string"
                                                                    }
                                                                },
                                                                "required": [
                                                                    "sqlQuery"
                                                                ],
                                                                "type": "object"
                                                            }
                                                        },
                                                        "type": "object"
                                                    },
                                                    "maxItems": 1,
                                                    "minItems": 1,
                                                    "type": "array"
                                                },
                                                "arn": {
                                                    "description": "The ARN of the data set.",
                                                    "type": "string"
                                                },
                                                "contentDeliveryRules": {
                                                    "description": "When data set contents are created they are delivered to destinations specified here.",
                                                    "items": {
                                                        "description": "When data set contents are created they are delivered to destination specified here.",
                                                        "properties": {
                                                            "destination": {
                                                                "description": "The destination to which data set contents are delivered.",
                                                                "properties": {
                                                                    "iotEventsDestinationConfiguration": {
                                                                        "description": "Configuration information for delivery of data set contents to AWS IoT Events.",
                                                                        "properties": {
                                                                            "inputName": {
                                                                                "description": "The name of the AWS IoT Events input to which data set contents are delivered.",
                                                                                "maxLength": 128,
                                                                                "minLength": 1,
                                                                                "pattern": "^[a-zA-Z][a-zA-Z0-9_]*$",
                                                                                "type": "string"
                                                                            },
                                                                            "roleArn": {
                                                                                "description": "The ARN of the role which grants AWS IoT Analytics permission to deliver data set contents to an AWS IoT Events input.",
                                                                                "maxLength": 2048,
                                                                                "minLength": 20,
                                                                                "type": "string"
                                                                            }
                                                                        },
                                                                        "required": [
                                                                            "inputName",
                                                                            "roleArn"
                                                                        ],
                                                                        "type": "object"
                                                                    }
                                                                },
                                                                "type": "object"
                                                            },
                                                            "entryName": {
                                                                "description": "The name of the data set content delivery rules entry.",
                                                                "type": "string"
                                                            }
                                                        },
                                                        "required": [
                                                            "destination"
                                                        ],
                                                        "type": "object"
                                                    },
                                                    "maxItems": 20,
                                                    "minItems": 0,
                                                    "type": "array"
                                                },
                                                "creationTime": {
                                                    "description": "When the data set was created.",
                                                    "format": "date-time",
                                                    "type": "string"
                                                },
                                                "lastUpdateTime": {
                                                    "description": "The last time the data set was updated.",
                                                    "format": "date-time",
                                                    "type": "string"
                                                },
                                                "name": {
                                                    "description": "The name of the data set.",
                                                    "maxLength": 128,
                                                    "minLength": 1,
                                                    "pattern": "^[a-zA-Z0-9_]+$",
                                                    "type": "string"
                                                },
                                                "retentionPeriod": {
                                                    "description": "[Optional] How long, in days, message data is kept for the data set.",
                                                    "properties": {
                                                        "numberOfDays": {
                                                            "description": "The number of days that message data is kept. The \"unlimited\" parameter must be false.",
                                                            "minimum": 1,
                                                            "type": "integer"
                                                        },
                                                        "unlimited": {
                                                            "description": "If true, message data is kept indefinitely.",
                                                            "type": "boolean"
                                                        }
                                                    },
                                                    "type": "object"
                                                },
                                                "status": {
                                                    "description": "The status of the data set.",
                                                    "enum": [
                                                        "CREATING",
                                                        "ACTIVE",
                                                        "DELETING"
                                                    ],
                                                    "type": "string"
                                                },
                                                "triggers": {
                                                    "description": "The \"DatasetTrigger\" objects that specify when the data set is automatically updated.",
                                                    "items": {
                                                        "description": "The \"DatasetTrigger\" that specifies when the data set is automatically updated.",
                                                        "properties": {
                                                            "dataset": {
                                                                "description": "The data set whose content creation triggers the creation of this data set's contents.",
                                                                "properties": {
                                                                    "name": {
                                                                        "description": "The name of the data set whose content generation triggers the new data set content generation.",
                                                                        "maxLength": 128,
                                                                        "minLength": 1,
                                                                        "pattern": "^[a-zA-Z0-9_]+$",
                                                                        "type": "string"
                                                                    }
                                                                },
                                                                "required": [
                                                                    "name"
                                                                ],
                                                                "type": "object"
                                                            },
                                                            "schedule": {
                                                                "description": "The \"Schedule\" when the trigger is initiated.",
                                                                "properties": {
                                                                    "expression": {
                                                                        "description": "The expression that defines when to trigger an update. For more information, see <a href=\"https://docs.aws.amazon.com/AmazonCloudWatch/latest/events/ScheduledEvents.html\"> Schedule Expressions for Rules</a> in the Amazon CloudWatch documentation.",
                                                                        "type": "string"
                                                                    }
                                                                },
                                                                "type": "object"
                                                            }
                                                        },
                                                        "type": "object"
                                                    },
                                                    "maxItems": 5,
                                                    "minItems": 0,
                                                    "type": "array"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "480": {
                        "description": "InvalidRequestException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "481": {
                        "description": "ResourceNotFoundException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "482": {
                        "description": "InternalFailureException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "483": {
                        "description": "ServiceUnavailableException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "484": {
                        "description": "ThrottlingException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {},
                                "type": "object"
                            }
                        }
                    },
                    "required": true
                }
            },
            "parameters": [
                {
                    "in": "query",
                    "name": "Action",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "query",
                    "name": "Version",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Content-Sha256",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Date",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Algorithm",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Credential",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Security-Token",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Signature",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-SignedHeaders",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                }
            ],
            "put": {
                "description": "Updates the settings of a data set.",
                "operationId": "UpdateDataset",
                "parameters": [
                    {
                        "in": "path",
                        "name": "datasetName",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success"
                    },
                    "480": {
                        "description": "InvalidRequestException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "481": {
                        "description": "ResourceNotFoundException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "482": {
                        "description": "InternalFailureException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "483": {
                        "description": "ServiceUnavailableException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "484": {
                        "description": "ThrottlingException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "actions": {
                                        "description": "A list of \"DatasetAction\" objects.",
                                        "items": {
                                            "description": "A \"DatasetAction\" object that specifies how data set contents are automatically created.",
                                            "properties": {
                                                "actionName": {
                                                    "description": "The name of the data set action by which data set contents are automatically created.",
                                                    "maxLength": 128,
                                                    "minLength": 1,
                                                    "pattern": "^[a-zA-Z0-9_]+$",
                                                    "type": "string"
                                                },
                                                "containerAction": {
                                                    "description": "Information which allows the system to run a containerized application in order to create the data set contents. The application must be in a Docker container along with any needed support libraries.",
                                                    "properties": {
                                                        "executionRoleArn": {
                                                            "description": "The ARN of the role which gives permission to the system to access needed resources in order to run the \"containerAction\". This includes, at minimum, permission to retrieve the data set contents which are the input to the containerized application.",
                                                            "maxLength": 2048,
                                                            "minLength": 20,
                                                            "type": "string"
                                                        },
                                                        "image": {
                                                            "description": "The ARN of the Docker container stored in your account. The Docker container contains an application and needed support libraries and is used to generate data set contents.",
                                                            "maxLength": 255,
                                                            "type": "string"
                                                        },
                                                        "resourceConfiguration": {
                                                            "description": "Configuration of the resource which executes the \"containerAction\".",
                                                            "properties": {
                                                                "computeType": {
                                                                    "description": "The type of the compute resource used to execute the \"containerAction\". Possible values are: ACU_1 (vCPU=4, memory=16GiB) or ACU_2 (vCPU=8, memory=32GiB).",
                                                                    "enum": [
                                                                        "ACU_1",
                                                                        "ACU_2"
                                                                    ],
                                                                    "type": "string"
                                                                },
                                                                "volumeSizeInGB": {
                                                                    "description": "The size (in GB) of the persistent storage available to the resource instance used to execute the \"containerAction\" (min: 1, max: 50).",
                                                                    "maximum": 50,
                                                                    "minimum": 1,
                                                                    "type": "integer"
                                                                }
                                                            },
                                                            "required": [
                                                                "computeType",
                                                                "volumeSizeInGB"
                                                            ],
                                                            "type": "object"
                                                        },
                                                        "variables": {
                                                            "description": "The values of variables used within the context of the execution of the containerized application (basically, parameters passed to the application). Each variable must have a name and a value given by one of \"stringValue\", \"datasetContentVersionValue\", or \"outputFileUriValue\".",
                                                            "items": {
                                                                "description": "An instance of a variable to be passed to the \"containerAction\" execution. Each variable must have a name and a value given by one of \"stringValue\", \"datasetContentVersionValue\", or \"outputFileUriValue\".",
                                                                "properties": {
                                                                    "datasetContentVersionValue": {
                                                                        "description": "The value of the variable as a structure that specifies a data set content version.",
                                                                        "properties": {
                                                                            "datasetName": {
                                                                                "description": "The name of the data set whose latest contents are used as input to the notebook or application.",
                                                                                "maxLength": 128,
                                                                                "minLength": 1,
                                                                                "pattern": "^[a-zA-Z0-9_]+$",
                                                                                "type": "string"
                                                                            }
                                                                        },
                                                                        "required": [
                                                                            "datasetName"
                                                                        ],
                                                                        "type": "object"
                                                                    },
                                                                    "doubleValue": {
                                                                        "description": "The value of the variable as a double (numeric).",
                                                                        "format": "double",
                                                                        "type": "number"
                                                                    },
                                                                    "name": {
                                                                        "description": "The name of the variable.",
                                                                        "maxLength": 256,
                                                                        "minLength": 1,
                                                                        "type": "string"
                                                                    },
                                                                    "outputFileUriValue": {
                                                                        "description": "The value of the variable as a structure that specifies an output file URI.",
                                                                        "properties": {
                                                                            "fileName": {
                                                                                "description": "The URI of the location where data set contents are stored, usually the URI of a file in an S3 bucket.",
                                                                                "pattern": "[\\w\\.-]{1,255}",
                                                                                "type": "string"
                                                                            }
                                                                        },
                                                                        "required": [
                                                                            "fileName"
                                                                        ],
                                                                        "type": "object"
                                                                    },
                                                                    "stringValue": {
                                                                        "description": "The value of the variable as a string.",
                                                                        "maxLength": 1024,
                                                                        "minLength": 0,
                                                                        "type": "string"
                                                                    }
                                                                },
                                                                "required": [
                                                                    "name"
                                                                ],
                                                                "type": "object"
                                                            },
                                                            "maxItems": 50,
                                                            "minItems": 0,
                                                            "type": "array"
                                                        }
                                                    },
                                                    "required": [
                                                        "image",
                                                        "executionRoleArn",
                                                        "resourceConfiguration"
                                                    ],
                                                    "type": "object"
                                                },
                                                "queryAction": {
                                                    "description": "An \"SqlQueryDatasetAction\" object that uses an SQL query to automatically create data set contents.",
                                                    "properties": {
                                                        "filters": {
                                                            "description": "Pre-filters applied to message data.",
                                                            "items": {
                                                                "description": "Information which is used to filter message data, to segregate it according to the time frame in which it arrives.",
                                                                "properties": {
                                                                    "deltaTime": {
                                                                        "description": "Used to limit data to that which has arrived since the last execution of the action.",
                                                                        "properties": {
                                                                            "offsetSeconds": {
                                                                                "description": "The number of seconds of estimated \"in flight\" lag time of message data. When you create data set contents using message data from a specified time frame, some message data may still be \"in flight\" when processing begins, and so will not arrive in time to be processed. Use this field to make allowances for the \"in flight\" time of your message data, so that data not processed from a previous time frame will be included with the next time frame. Without this, missed message data would be excluded from processing during the next time frame as well, because its timestamp places it within the previous time frame.",
                                                                                "type": "integer"
                                                                            },
                                                                            "timeExpression": {
                                                                                "description": "An expression by which the time of the message data may be determined. This may be the name of a timestamp field, or a SQL expression which is used to derive the time the message data was generated.",
                                                                                "type": "string"
                                                                            }
                                                                        },
                                                                        "required": [
                                                                            "offsetSeconds",
                                                                            "timeExpression"
                                                                        ],
                                                                        "type": "object"
                                                                    }
                                                                },
                                                                "type": "object"
                                                            },
                                                            "maxItems": 1,
                                                            "minItems": 0,
                                                            "type": "array"
                                                        },
                                                        "sqlQuery": {
                                                            "description": "A SQL query string.",
                                                            "type": "string"
                                                        }
                                                    },
                                                    "required": [
                                                        "sqlQuery"
                                                    ],
                                                    "type": "object"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "maxItems": 1,
                                        "minItems": 1,
                                        "type": "array"
                                    },
                                    "contentDeliveryRules": {
                                        "description": "When data set contents are created they are delivered to destinations specified here.",
                                        "items": {
                                            "description": "When data set contents are created they are delivered to destination specified here.",
                                            "properties": {
                                                "destination": {
                                                    "description": "The destination to which data set contents are delivered.",
                                                    "properties": {
                                                        "iotEventsDestinationConfiguration": {
                                                            "description": "Configuration information for delivery of data set contents to AWS IoT Events.",
                                                            "properties": {
                                                                "inputName": {
                                                                    "description": "The name of the AWS IoT Events input to which data set contents are delivered.",
                                                                    "maxLength": 128,
                                                                    "minLength": 1,
                                                                    "pattern": "^[a-zA-Z][a-zA-Z0-9_]*$",
                                                                    "type": "string"
                                                                },
                                                                "roleArn": {
                                                                    "description": "The ARN of the role which grants AWS IoT Analytics permission to deliver data set contents to an AWS IoT Events input.",
                                                                    "maxLength": 2048,
                                                                    "minLength": 20,
                                                                    "type": "string"
                                                                }
                                                            },
                                                            "required": [
                                                                "inputName",
                                                                "roleArn"
                                                            ],
                                                            "type": "object"
                                                        }
                                                    },
                                                    "type": "object"
                                                },
                                                "entryName": {
                                                    "description": "The name of the data set content delivery rules entry.",
                                                    "type": "string"
                                                }
                                            },
                                            "required": [
                                                "destination"
                                            ],
                                            "type": "object"
                                        },
                                        "maxItems": 20,
                                        "minItems": 0,
                                        "type": "array"
                                    },
                                    "retentionPeriod": {
                                        "description": "How long, in days, message data is kept for the data set.",
                                        "properties": {
                                            "numberOfDays": {
                                                "description": "The number of days that message data is kept. The \"unlimited\" parameter must be false.",
                                                "minimum": 1,
                                                "type": "integer"
                                            },
                                            "unlimited": {
                                                "description": "If true, message data is kept indefinitely.",
                                                "type": "boolean"
                                            }
                                        },
                                        "type": "object"
                                    },
                                    "triggers": {
                                        "description": "A list of \"DatasetTrigger\" objects. The list can be empty or can contain up to five <b>DataSetTrigger</b> objects.",
                                        "items": {
                                            "description": "The \"DatasetTrigger\" that specifies when the data set is automatically updated.",
                                            "properties": {
                                                "dataset": {
                                                    "description": "The data set whose content creation triggers the creation of this data set's contents.",
                                                    "properties": {
                                                        "name": {
                                                            "description": "The name of the data set whose content generation triggers the new data set content generation.",
                                                            "maxLength": 128,
                                                            "minLength": 1,
                                                            "pattern": "^[a-zA-Z0-9_]+$",
                                                            "type": "string"
                                                        }
                                                    },
                                                    "required": [
                                                        "name"
                                                    ],
                                                    "type": "object"
                                                },
                                                "schedule": {
                                                    "description": "The \"Schedule\" when the trigger is initiated.",
                                                    "properties": {
                                                        "expression": {
                                                            "description": "The expression that defines when to trigger an update. For more information, see <a href=\"https://docs.aws.amazon.com/AmazonCloudWatch/latest/events/ScheduledEvents.html\"> Schedule Expressions for Rules</a> in the Amazon CloudWatch documentation.",
                                                            "type": "string"
                                                        }
                                                    },
                                                    "type": "object"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "maxItems": 5,
                                        "minItems": 0,
                                        "type": "array"
                                    }
                                },
                                "required": [
                                    "actions"
                                ],
                                "type": "object"
                            }
                        }
                    },
                    "required": true
                }
            }
        },
        "/datasets/{datasetName}/content": {
            "delete": {
                "description": "Deletes the content of the specified data set.",
                "operationId": "DeleteDatasetContent",
                "parameters": [
                    {
                        "in": "path",
                        "name": "datasetName",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Success"
                    },
                    "480": {
                        "description": "InvalidRequestException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "481": {
                        "description": "ResourceNotFoundException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "482": {
                        "description": "InternalFailureException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "483": {
                        "description": "ServiceUnavailableException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "484": {
                        "description": "ThrottlingException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {},
                                "type": "object"
                            }
                        }
                    },
                    "required": true
                }
            },
            "get": {
                "description": "Retrieves the contents of a data set as pre-signed URIs.",
                "operationId": "GetDatasetContent",
                "parameters": [
                    {
                        "in": "path",
                        "name": "datasetName",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "entries": {
                                            "description": "A list of \"DatasetEntry\" objects.",
                                            "items": {
                                                "description": "The reference to a data set entry.",
                                                "properties": {
                                                    "dataURI": {
                                                        "description": "The pre-signed URI of the data set item.",
                                                        "type": "string"
                                                    },
                                                    "entryName": {
                                                        "description": "The name of the data set item.",
                                                        "type": "string"
                                                    }
                                                },
                                                "type": "object"
                                            },
                                            "type": "array"
                                        },
                                        "status": {
                                            "description": "The status of the data set content.",
                                            "properties": {
                                                "reason": {
                                                    "description": "The reason the data set contents are in this state.",
                                                    "type": "string"
                                                },
                                                "state": {
                                                    "description": "The state of the data set contents. Can be one of \"READY\", \"CREATING\", \"SUCCEEDED\" or \"FAILED\".",
                                                    "enum": [
                                                        "CREATING",
                                                        "SUCCEEDED",
                                                        "FAILED"
                                                    ],
                                                    "type": "string"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "timestamp": {
                                            "description": "The time when the request was made.",
                                            "format": "date-time",
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "480": {
                        "description": "InvalidRequestException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "481": {
                        "description": "ResourceNotFoundException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "482": {
                        "description": "InternalFailureException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "483": {
                        "description": "ServiceUnavailableException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "484": {
                        "description": "ThrottlingException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {},
                                "type": "object"
                            }
                        }
                    },
                    "required": true
                }
            },
            "parameters": [
                {
                    "in": "query",
                    "name": "Action",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "query",
                    "name": "Version",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Content-Sha256",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Date",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Algorithm",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Credential",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Security-Token",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Signature",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-SignedHeaders",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                }
            ],
            "post": {
                "description": "Creates the content of a data set by applying a \"queryAction\" (a SQL query) or a \"containerAction\" (executing a containerized application).",
                "operationId": "CreateDatasetContent",
                "parameters": [
                    {
                        "in": "path",
                        "name": "datasetName",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "versionId": {
                                            "description": "The version ID of the data set contents which are being created.",
                                            "maxLength": 36,
                                            "minLength": 7,
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "480": {
                        "description": "InvalidRequestException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "481": {
                        "description": "ResourceNotFoundException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "482": {
                        "description": "InternalFailureException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "483": {
                        "description": "ServiceUnavailableException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "484": {
                        "description": "ThrottlingException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {},
                                "type": "object"
                            }
                        }
                    },
                    "required": true
                }
            }
        },
        "/datasets/{datasetName}/contents": {
            "get": {
                "description": "Lists information about data set contents that have been created.",
                "operationId": "ListDatasetContents",
                "parameters": [
                    {
                        "description": "Pagination limit",
                        "in": "query",
                        "name": "maxResults",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "Pagination token",
                        "in": "query",
                        "name": "nextToken",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "path",
                        "name": "datasetName",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "datasetContentSummaries": {
                                            "description": "Summary information about data set contents that have been created.",
                                            "items": {
                                                "description": "Summary information about data set contents.",
                                                "properties": {
                                                    "creationTime": {
                                                        "description": "The actual time the creation of the data set contents was started.",
                                                        "format": "date-time",
                                                        "type": "string"
                                                    },
                                                    "scheduleTime": {
                                                        "description": "The time the creation of the data set contents was scheduled to start.",
                                                        "format": "date-time",
                                                        "type": "string"
                                                    },
                                                    "status": {
                                                        "description": "The status of the data set contents.",
                                                        "properties": {
                                                            "reason": {
                                                                "description": "The reason the data set contents are in this state.",
                                                                "type": "string"
                                                            },
                                                            "state": {
                                                                "description": "The state of the data set contents. Can be one of \"READY\", \"CREATING\", \"SUCCEEDED\" or \"FAILED\".",
                                                                "enum": [
                                                                    "CREATING",
                                                                    "SUCCEEDED",
                                                                    "FAILED"
                                                                ],
                                                                "type": "string"
                                                            }
                                                        },
                                                        "type": "object"
                                                    },
                                                    "version": {
                                                        "description": "The version of the data set contents.",
                                                        "maxLength": 36,
                                                        "minLength": 7,
                                                        "type": "string"
                                                    }
                                                },
                                                "type": "object"
                                            },
                                            "type": "array"
                                        },
                                        "nextToken": {
                                            "description": "The token to retrieve the next set of results, or <code>null</code> if there are no more results.",
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "480": {
                        "description": "InvalidRequestException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "481": {
                        "description": "InternalFailureException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "482": {
                        "description": "ServiceUnavailableException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "483": {
                        "description": "ThrottlingException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "484": {
                        "description": "ResourceNotFoundException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {},
                                "type": "object"
                            }
                        }
                    },
                    "required": true
                }
            },
            "parameters": [
                {
                    "in": "query",
                    "name": "Action",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "query",
                    "name": "Version",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Content-Sha256",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Date",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Algorithm",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Credential",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Security-Token",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Signature",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-SignedHeaders",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                }
            ]
        },
        "/datastores": {
            "get": {
                "description": "Retrieves a list of data stores.",
                "operationId": "ListDatastores",
                "parameters": [
                    {
                        "description": "Pagination limit",
                        "in": "query",
                        "name": "maxResults",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "Pagination token",
                        "in": "query",
                        "name": "nextToken",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "datastoreSummaries": {
                                            "description": "A list of \"DatastoreSummary\" objects.",
                                            "items": {
                                                "description": "A summary of information about a data store.",
                                                "properties": {
                                                    "creationTime": {
                                                        "description": "When the data store was created.",
                                                        "format": "date-time",
                                                        "type": "string"
                                                    },
                                                    "datastoreName": {
                                                        "description": "The name of the data store.",
                                                        "maxLength": 128,
                                                        "minLength": 1,
                                                        "pattern": "^[a-zA-Z0-9_]+$",
                                                        "type": "string"
                                                    },
                                                    "lastUpdateTime": {
                                                        "description": "The last time the data store was updated.",
                                                        "format": "date-time",
                                                        "type": "string"
                                                    },
                                                    "status": {
                                                        "description": "The status of the data store.",
                                                        "enum": [
                                                            "CREATING",
                                                            "ACTIVE",
                                                            "DELETING"
                                                        ],
                                                        "type": "string"
                                                    }
                                                },
                                                "type": "object"
                                            },
                                            "type": "array"
                                        },
                                        "nextToken": {
                                            "description": "The token to retrieve the next set of results, or <code>null</code> if there are no more results.",
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "480": {
                        "description": "InvalidRequestException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "481": {
                        "description": "InternalFailureException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "482": {
                        "description": "ServiceUnavailableException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "483": {
                        "description": "ThrottlingException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {},
                                "type": "object"
                            }
                        }
                    },
                    "required": true
                }
            },
            "parameters": [
                {
                    "in": "query",
                    "name": "Action",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "query",
                    "name": "Version",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Content-Sha256",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Date",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Algorithm",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Credential",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Security-Token",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Signature",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-SignedHeaders",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                }
            ],
            "post": {
                "description": "Creates a data store, which is a repository for messages.",
                "operationId": "CreateDatastore",
                "responses": {
                    "201": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "datastoreArn": {
                                            "description": "The ARN of the data store.",
                                            "type": "string"
                                        },
                                        "datastoreName": {
                                            "description": "The name of the data store.",
                                            "maxLength": 128,
                                            "minLength": 1,
                                            "pattern": "^[a-zA-Z0-9_]+$",
                                            "type": "string"
                                        },
                                        "retentionPeriod": {
                                            "description": "How long, in days, message data is kept for the data store.",
                                            "properties": {
                                                "numberOfDays": {
                                                    "description": "The number of days that message data is kept. The \"unlimited\" parameter must be false.",
                                                    "minimum": 1,
                                                    "type": "integer"
                                                },
                                                "unlimited": {
                                                    "description": "If true, message data is kept indefinitely.",
                                                    "type": "boolean"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "480": {
                        "description": "InvalidRequestException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "481": {
                        "description": "ResourceAlreadyExistsException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "482": {
                        "description": "InternalFailureException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "483": {
                        "description": "ServiceUnavailableException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "484": {
                        "description": "ThrottlingException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "485": {
                        "description": "LimitExceededException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "datastoreName": {
                                        "description": "The name of the data store.",
                                        "maxLength": 128,
                                        "minLength": 1,
                                        "pattern": "^[a-zA-Z0-9_]+$",
                                        "type": "string"
                                    },
                                    "retentionPeriod": {
                                        "description": "How long, in days, message data is kept for the data store.",
                                        "properties": {
                                            "numberOfDays": {
                                                "description": "The number of days that message data is kept. The \"unlimited\" parameter must be false.",
                                                "minimum": 1,
                                                "type": "integer"
                                            },
                                            "unlimited": {
                                                "description": "If true, message data is kept indefinitely.",
                                                "type": "boolean"
                                            }
                                        },
                                        "type": "object"
                                    },
                                    "tags": {
                                        "description": "Metadata which can be used to manage the data store.",
                                        "items": {
                                            "description": "A set of key/value pairs which are used to manage the resource.",
                                            "properties": {
                                                "key": {
                                                    "description": "The tag's key.",
                                                    "maxLength": 256,
                                                    "minLength": 1,
                                                    "type": "string"
                                                },
                                                "value": {
                                                    "description": "The tag's value.",
                                                    "maxLength": 256,
                                                    "minLength": 1,
                                                    "type": "string"
                                                }
                                            },
                                            "required": [
                                                "key",
                                                "value"
                                            ],
                                            "type": "object"
                                        },
                                        "maxItems": 50,
                                        "minItems": 1,
                                        "type": "array"
                                    }
                                },
                                "required": [
                                    "datastoreName"
                                ],
                                "type": "object"
                            }
                        }
                    },
                    "required": true
                }
            }
        },
        "/datastores/{datastoreName}": {
            "delete": {
                "description": "Deletes the specified data store.",
                "operationId": "DeleteDatastore",
                "parameters": [
                    {
                        "in": "path",
                        "name": "datastoreName",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Success"
                    },
                    "480": {
                        "description": "InvalidRequestException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "481": {
                        "description": "ResourceNotFoundException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "482": {
                        "description": "InternalFailureException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "483": {
                        "description": "ServiceUnavailableException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "484": {
                        "description": "ThrottlingException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {},
                                "type": "object"
                            }
                        }
                    },
                    "required": true
                }
            },
            "get": {
                "description": "Retrieves information about a data store.",
                "operationId": "DescribeDatastore",
                "parameters": [
                    {
                        "in": "path",
                        "name": "datastoreName",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "datastore": {
                                            "description": "Information about the data store.",
                                            "properties": {
                                                "arn": {
                                                    "description": "The ARN of the data store.",
                                                    "type": "string"
                                                },
                                                "creationTime": {
                                                    "description": "When the data store was created.",
                                                    "format": "date-time",
                                                    "type": "string"
                                                },
                                                "lastUpdateTime": {
                                                    "description": "The last time the data store was updated.",
                                                    "format": "date-time",
                                                    "type": "string"
                                                },
                                                "name": {
                                                    "description": "The name of the data store.",
                                                    "maxLength": 128,
                                                    "minLength": 1,
                                                    "pattern": "^[a-zA-Z0-9_]+$",
                                                    "type": "string"
                                                },
                                                "retentionPeriod": {
                                                    "description": "How long, in days, message data is kept for the data store.",
                                                    "properties": {
                                                        "numberOfDays": {
                                                            "description": "The number of days that message data is kept. The \"unlimited\" parameter must be false.",
                                                            "minimum": 1,
                                                            "type": "integer"
                                                        },
                                                        "unlimited": {
                                                            "description": "If true, message data is kept indefinitely.",
                                                            "type": "boolean"
                                                        }
                                                    },
                                                    "type": "object"
                                                },
                                                "status": {
                                                    "description": "<p>The status of a data store:</p> <dl> <dt>CREATING</dt> <dd> <p>The data store is being created.</p> </dd> <dt>ACTIVE</dt> <dd> <p>The data store has been created and can be used.</p> </dd> <dt>DELETING</dt> <dd> <p>The data store is being deleted.</p> </dd> </dl>",
                                                    "enum": [
                                                        "CREATING",
                                                        "ACTIVE",
                                                        "DELETING"
                                                    ],
                                                    "type": "string"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "statistics": {
                                            "description": "Additional statistical information about the data store. Included if the 'includeStatistics' parameter is set to true in the request.",
                                            "properties": {
                                                "size": {
                                                    "description": "The estimated size of the data store.",
                                                    "properties": {
                                                        "estimatedOn": {
                                                            "description": "The time when the estimate of the size of the resource was made.",
                                                            "format": "date-time",
                                                            "type": "string"
                                                        },
                                                        "estimatedSizeInBytes": {
                                                            "description": "The estimated size of the resource in bytes.",
                                                            "format": "double",
                                                            "type": "number"
                                                        }
                                                    },
                                                    "type": "object"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "480": {
                        "description": "InvalidRequestException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "481": {
                        "description": "ResourceNotFoundException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "482": {
                        "description": "InternalFailureException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "483": {
                        "description": "ServiceUnavailableException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "484": {
                        "description": "ThrottlingException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {},
                                "type": "object"
                            }
                        }
                    },
                    "required": true
                }
            },
            "parameters": [
                {
                    "in": "query",
                    "name": "Action",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "query",
                    "name": "Version",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Content-Sha256",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Date",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Algorithm",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Credential",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Security-Token",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Signature",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-SignedHeaders",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                }
            ],
            "put": {
                "description": "Updates the settings of a data store.",
                "operationId": "UpdateDatastore",
                "parameters": [
                    {
                        "in": "path",
                        "name": "datastoreName",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success"
                    },
                    "480": {
                        "description": "InvalidRequestException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "481": {
                        "description": "ResourceNotFoundException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "482": {
                        "description": "InternalFailureException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "483": {
                        "description": "ServiceUnavailableException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "484": {
                        "description": "ThrottlingException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "retentionPeriod": {
                                        "description": "How long, in days, message data is kept for the data store.",
                                        "properties": {
                                            "numberOfDays": {
                                                "description": "The number of days that message data is kept. The \"unlimited\" parameter must be false.",
                                                "minimum": 1,
                                                "type": "integer"
                                            },
                                            "unlimited": {
                                                "description": "If true, message data is kept indefinitely.",
                                                "type": "boolean"
                                            }
                                        },
                                        "type": "object"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    },
                    "required": true
                }
            }
        },
        "/logging": {
            "get": {
                "description": "Retrieves the current settings of the AWS IoT Analytics logging options.",
                "operationId": "DescribeLoggingOptions",
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "loggingOptions": {
                                            "description": "The current settings of the AWS IoT Analytics logging options.",
                                            "properties": {
                                                "enabled": {
                                                    "description": "If true, logging is enabled for AWS IoT Analytics.",
                                                    "type": "boolean"
                                                },
                                                "level": {
                                                    "description": "The logging level. Currently, only \"ERROR\" is supported.",
                                                    "enum": [
                                                        "ERROR"
                                                    ],
                                                    "type": "string"
                                                },
                                                "roleArn": {
                                                    "description": "The ARN of the role that grants permission to AWS IoT Analytics to perform logging.",
                                                    "maxLength": 2048,
                                                    "minLength": 20,
                                                    "type": "string"
                                                }
                                            },
                                            "required": [
                                                "roleArn",
                                                "level",
                                                "enabled"
                                            ],
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "480": {
                        "description": "InvalidRequestException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "481": {
                        "description": "ResourceNotFoundException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "482": {
                        "description": "InternalFailureException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "483": {
                        "description": "ServiceUnavailableException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "484": {
                        "description": "ThrottlingException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {},
                                "type": "object"
                            }
                        }
                    },
                    "required": true
                }
            },
            "parameters": [
                {
                    "in": "query",
                    "name": "Action",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "query",
                    "name": "Version",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Content-Sha256",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Date",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Algorithm",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Credential",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Security-Token",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Signature",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-SignedHeaders",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                }
            ],
            "put": {
                "description": "<p>Sets or updates the AWS IoT Analytics logging options.</p> <p>Note that if you update the value of any <code>loggingOptions</code> field, it takes up to one minute for the change to take effect. Also, if you change the policy attached to the role you specified in the roleArn field (for example, to correct an invalid policy) it takes up to 5 minutes for that change to take effect. </p>",
                "operationId": "PutLoggingOptions",
                "responses": {
                    "200": {
                        "description": "Success"
                    },
                    "480": {
                        "description": "InvalidRequestException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "481": {
                        "description": "InternalFailureException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "482": {
                        "description": "ServiceUnavailableException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "483": {
                        "description": "ThrottlingException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "loggingOptions": {
                                        "description": "The new values of the AWS IoT Analytics logging options.",
                                        "properties": {
                                            "enabled": {
                                                "description": "If true, logging is enabled for AWS IoT Analytics.",
                                                "type": "boolean"
                                            },
                                            "level": {
                                                "description": "The logging level. Currently, only \"ERROR\" is supported.",
                                                "enum": [
                                                    "ERROR"
                                                ],
                                                "type": "string"
                                            },
                                            "roleArn": {
                                                "description": "The ARN of the role that grants permission to AWS IoT Analytics to perform logging.",
                                                "maxLength": 2048,
                                                "minLength": 20,
                                                "type": "string"
                                            }
                                        },
                                        "required": [
                                            "roleArn",
                                            "level",
                                            "enabled"
                                        ],
                                        "type": "object"
                                    }
                                },
                                "required": [
                                    "loggingOptions"
                                ],
                                "type": "object"
                            }
                        }
                    },
                    "required": true
                }
            }
        },
        "/messages/batch": {
            "parameters": [
                {
                    "in": "query",
                    "name": "Action",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "query",
                    "name": "Version",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Content-Sha256",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Date",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Algorithm",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Credential",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Security-Token",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Signature",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-SignedHeaders",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                }
            ],
            "post": {
                "description": "Sends messages to a channel.",
                "operationId": "BatchPutMessage",
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "batchPutMessageErrorEntries": {
                                            "description": "A list of any errors encountered when sending the messages to the channel.",
                                            "items": {
                                                "description": "Contains informations about errors.",
                                                "properties": {
                                                    "errorCode": {
                                                        "description": "The code associated with the error.",
                                                        "type": "string"
                                                    },
                                                    "errorMessage": {
                                                        "description": "The message associated with the error.",
                                                        "type": "string"
                                                    },
                                                    "messageId": {
                                                        "description": "The ID of the message that caused the error. (See the value corresponding to the \"messageId\" key in the message object.)",
                                                        "maxLength": 128,
                                                        "minLength": 1,
                                                        "type": "string"
                                                    }
                                                },
                                                "type": "object"
                                            },
                                            "type": "array"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "480": {
                        "description": "ResourceNotFoundException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "481": {
                        "description": "InvalidRequestException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "482": {
                        "description": "InternalFailureException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "483": {
                        "description": "ServiceUnavailableException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "484": {
                        "description": "ThrottlingException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "channelName": {
                                        "description": "The name of the channel where the messages are sent.",
                                        "maxLength": 128,
                                        "minLength": 1,
                                        "pattern": "^[a-zA-Z0-9_]+$",
                                        "type": "string"
                                    },
                                    "messages": {
                                        "description": "<p>The list of messages to be sent. Each message has format: '{ \"messageId\": \"string\", \"payload\": \"string\"}'.</p> <p>Note that the field names of message payloads (data) that you send to AWS IoT Analytics:</p> <ul> <li> <p>Must contain only alphanumeric characters and undescores (_); no other special characters are allowed.</p> </li> <li> <p>Must begin with an alphabetic character or single underscore (_).</p> </li> <li> <p>Cannot contain hyphens (-).</p> </li> <li> <p>In regular expression terms: \"^[A-Za-z_]([A-Za-z0-9]*|[A-Za-z0-9][A-Za-z0-9_]*)$\". </p> </li> <li> <p>Cannot be greater than 255 characters.</p> </li> <li> <p>Are case-insensitive. (Fields named \"foo\" and \"FOO\" in the same payload are considered duplicates.)</p> </li> </ul> <p>For example, {\"temp_01\": 29} or {\"_temp_01\": 29} are valid, but {\"temp-01\": 29}, {\"01_temp\": 29} or {\"__temp_01\": 29} are invalid in message payloads. </p>",
                                        "items": {
                                            "description": "Information about a message.",
                                            "properties": {
                                                "messageId": {
                                                    "description": "The ID you wish to assign to the message. Each \"messageId\" must be unique within each batch sent.",
                                                    "maxLength": 128,
                                                    "minLength": 1,
                                                    "type": "string"
                                                },
                                                "payload": {
                                                    "description": "The payload of the message. This may be a JSON string or a Base64-encoded string representing binary data (in which case you must decode it by means of a pipeline activity).",
                                                    "type": "string"
                                                }
                                            },
                                            "required": [
                                                "messageId",
                                                "payload"
                                            ],
                                            "type": "object"
                                        },
                                        "type": "array"
                                    }
                                },
                                "required": [
                                    "channelName",
                                    "messages"
                                ],
                                "type": "object"
                            }
                        }
                    },
                    "required": true
                }
            }
        },
        "/pipelineactivities/run": {
            "parameters": [
                {
                    "in": "query",
                    "name": "Action",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "query",
                    "name": "Version",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Content-Sha256",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Date",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Algorithm",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Credential",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Security-Token",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Signature",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-SignedHeaders",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                }
            ],
            "post": {
                "description": "Simulates the results of running a pipeline activity on a message payload.",
                "operationId": "RunPipelineActivity",
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "logResult": {
                                            "description": "In case the pipeline activity fails, the log message that is generated.",
                                            "type": "string"
                                        },
                                        "payloads": {
                                            "description": "The enriched or transformed sample message payloads as base64-encoded strings. (The results of running the pipeline activity on each input sample message payload, encoded in base64.)",
                                            "items": {
                                                "type": "string"
                                            },
                                            "maxItems": 10,
                                            "minItems": 1,
                                            "type": "array"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "480": {
                        "description": "InvalidRequestException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "481": {
                        "description": "InternalFailureException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "482": {
                        "description": "ServiceUnavailableException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "483": {
                        "description": "ThrottlingException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "payloads": {
                                        "description": "The sample message payloads on which the pipeline activity is run.",
                                        "items": {
                                            "type": "string"
                                        },
                                        "maxItems": 10,
                                        "minItems": 1,
                                        "type": "array"
                                    },
                                    "pipelineActivity": {
                                        "description": "The pipeline activity that is run. This must not be a 'channel' activity or a 'datastore' activity because these activities are used in a pipeline only to load the original message and to store the (possibly) transformed message. If a 'lambda' activity is specified, only short-running Lambda functions (those with a timeout of less than 30 seconds or less) can be used.",
                                        "properties": {
                                            "addAttributes": {
                                                "description": "Adds other attributes based on existing attributes in the message.",
                                                "properties": {
                                                    "attributes": {
                                                        "description": "<p>A list of 1-50 \"AttributeNameMapping\" objects that map an existing attribute to a new attribute.</p> <note> <p>The existing attributes remain in the message, so if you want to remove the originals, use \"RemoveAttributeActivity\".</p> </note>",
                                                        "items": {
                                                            "properties": {
                                                                "key": {
                                                                    "maxLength": 256,
                                                                    "minLength": 1,
                                                                    "type": "string"
                                                                },
                                                                "value": {
                                                                    "maxLength": 256,
                                                                    "minLength": 1,
                                                                    "type": "string"
                                                                }
                                                            },
                                                            "type": "object"
                                                        },
                                                        "maxItems": 50,
                                                        "minItems": 1,
                                                        "type": "array"
                                                    },
                                                    "name": {
                                                        "description": "The name of the 'addAttributes' activity.",
                                                        "maxLength": 128,
                                                        "minLength": 1,
                                                        "type": "string"
                                                    },
                                                    "next": {
                                                        "description": "The next activity in the pipeline.",
                                                        "maxLength": 128,
                                                        "minLength": 1,
                                                        "type": "string"
                                                    }
                                                },
                                                "required": [
                                                    "name",
                                                    "attributes"
                                                ],
                                                "type": "object"
                                            },
                                            "channel": {
                                                "description": "Determines the source of the messages to be processed.",
                                                "properties": {
                                                    "channelName": {
                                                        "description": "The name of the channel from which the messages are processed.",
                                                        "maxLength": 128,
                                                        "minLength": 1,
                                                        "pattern": "^[a-zA-Z0-9_]+$",
                                                        "type": "string"
                                                    },
                                                    "name": {
                                                        "description": "The name of the 'channel' activity.",
                                                        "maxLength": 128,
                                                        "minLength": 1,
                                                        "type": "string"
                                                    },
                                                    "next": {
                                                        "description": "The next activity in the pipeline.",
                                                        "maxLength": 128,
                                                        "minLength": 1,
                                                        "type": "string"
                                                    }
                                                },
                                                "required": [
                                                    "name",
                                                    "channelName"
                                                ],
                                                "type": "object"
                                            },
                                            "datastore": {
                                                "description": "Specifies where to store the processed message data.",
                                                "properties": {
                                                    "datastoreName": {
                                                        "description": "The name of the data store where processed messages are stored.",
                                                        "maxLength": 128,
                                                        "minLength": 1,
                                                        "pattern": "^[a-zA-Z0-9_]+$",
                                                        "type": "string"
                                                    },
                                                    "name": {
                                                        "description": "The name of the 'datastore' activity.",
                                                        "maxLength": 128,
                                                        "minLength": 1,
                                                        "type": "string"
                                                    }
                                                },
                                                "required": [
                                                    "name",
                                                    "datastoreName"
                                                ],
                                                "type": "object"
                                            },
                                            "deviceRegistryEnrich": {
                                                "description": "Adds data from the AWS IoT device registry to your message.",
                                                "properties": {
                                                    "attribute": {
                                                        "description": "The name of the attribute that is added to the message.",
                                                        "maxLength": 256,
                                                        "minLength": 1,
                                                        "type": "string"
                                                    },
                                                    "name": {
                                                        "description": "The name of the 'deviceRegistryEnrich' activity.",
                                                        "maxLength": 128,
                                                        "minLength": 1,
                                                        "type": "string"
                                                    },
                                                    "next": {
                                                        "description": "The next activity in the pipeline.",
                                                        "maxLength": 128,
                                                        "minLength": 1,
                                                        "type": "string"
                                                    },
                                                    "roleArn": {
                                                        "description": "The ARN of the role that allows access to the device's registry information.",
                                                        "maxLength": 2048,
                                                        "minLength": 20,
                                                        "type": "string"
                                                    },
                                                    "thingName": {
                                                        "description": "The name of the IoT device whose registry information is added to the message.",
                                                        "maxLength": 256,
                                                        "minLength": 1,
                                                        "type": "string"
                                                    }
                                                },
                                                "required": [
                                                    "name",
                                                    "attribute",
                                                    "thingName",
                                                    "roleArn"
                                                ],
                                                "type": "object"
                                            },
                                            "deviceShadowEnrich": {
                                                "description": "Adds information from the AWS IoT Device Shadows service to a message.",
                                                "properties": {
                                                    "attribute": {
                                                        "description": "The name of the attribute that is added to the message.",
                                                        "maxLength": 256,
                                                        "minLength": 1,
                                                        "type": "string"
                                                    },
                                                    "name": {
                                                        "description": "The name of the 'deviceShadowEnrich' activity.",
                                                        "maxLength": 128,
                                                        "minLength": 1,
                                                        "type": "string"
                                                    },
                                                    "next": {
                                                        "description": "The next activity in the pipeline.",
                                                        "maxLength": 128,
                                                        "minLength": 1,
                                                        "type": "string"
                                                    },
                                                    "roleArn": {
                                                        "description": "The ARN of the role that allows access to the device's shadow.",
                                                        "maxLength": 2048,
                                                        "minLength": 20,
                                                        "type": "string"
                                                    },
                                                    "thingName": {
                                                        "description": "The name of the IoT device whose shadow information is added to the message.",
                                                        "maxLength": 256,
                                                        "minLength": 1,
                                                        "type": "string"
                                                    }
                                                },
                                                "required": [
                                                    "name",
                                                    "attribute",
                                                    "thingName",
                                                    "roleArn"
                                                ],
                                                "type": "object"
                                            },
                                            "filter": {
                                                "description": "Filters a message based on its attributes.",
                                                "properties": {
                                                    "filter": {
                                                        "description": "An expression that looks like a SQL WHERE clause that must return a Boolean value.",
                                                        "maxLength": 256,
                                                        "minLength": 1,
                                                        "type": "string"
                                                    },
                                                    "name": {
                                                        "description": "The name of the 'filter' activity.",
                                                        "maxLength": 128,
                                                        "minLength": 1,
                                                        "type": "string"
                                                    },
                                                    "next": {
                                                        "description": "The next activity in the pipeline.",
                                                        "maxLength": 128,
                                                        "minLength": 1,
                                                        "type": "string"
                                                    }
                                                },
                                                "required": [
                                                    "name",
                                                    "filter"
                                                ],
                                                "type": "object"
                                            },
                                            "lambda": {
                                                "description": "Runs a Lambda function to modify the message.",
                                                "properties": {
                                                    "batchSize": {
                                                        "description": "<p>The number of messages passed to the Lambda function for processing.</p> <p>The AWS Lambda function must be able to process all of these messages within five minutes, which is the maximum timeout duration for Lambda functions.</p>",
                                                        "maximum": 1000,
                                                        "minimum": 1,
                                                        "type": "integer"
                                                    },
                                                    "lambdaName": {
                                                        "description": "The name of the Lambda function that is run on the message.",
                                                        "maxLength": 64,
                                                        "minLength": 1,
                                                        "pattern": "^[a-zA-Z0-9_-]+$",
                                                        "type": "string"
                                                    },
                                                    "name": {
                                                        "description": "The name of the 'lambda' activity.",
                                                        "maxLength": 128,
                                                        "minLength": 1,
                                                        "type": "string"
                                                    },
                                                    "next": {
                                                        "description": "The next activity in the pipeline.",
                                                        "maxLength": 128,
                                                        "minLength": 1,
                                                        "type": "string"
                                                    }
                                                },
                                                "required": [
                                                    "name",
                                                    "lambdaName",
                                                    "batchSize"
                                                ],
                                                "type": "object"
                                            },
                                            "math": {
                                                "description": "Computes an arithmetic expression using the message's attributes and adds it to the message.",
                                                "properties": {
                                                    "attribute": {
                                                        "description": "The name of the attribute that contains the result of the math operation.",
                                                        "maxLength": 256,
                                                        "minLength": 1,
                                                        "type": "string"
                                                    },
                                                    "math": {
                                                        "description": "An expression that uses one or more existing attributes and must return an integer value.",
                                                        "maxLength": 256,
                                                        "minLength": 1,
                                                        "type": "string"
                                                    },
                                                    "name": {
                                                        "description": "The name of the 'math' activity.",
                                                        "maxLength": 128,
                                                        "minLength": 1,
                                                        "type": "string"
                                                    },
                                                    "next": {
                                                        "description": "The next activity in the pipeline.",
                                                        "maxLength": 128,
                                                        "minLength": 1,
                                                        "type": "string"
                                                    }
                                                },
                                                "required": [
                                                    "name",
                                                    "attribute",
                                                    "math"
                                                ],
                                                "type": "object"
                                            },
                                            "removeAttributes": {
                                                "description": "Removes attributes from a message.",
                                                "properties": {
                                                    "attributes": {
                                                        "description": "A list of 1-50 attributes to remove from the message.",
                                                        "items": {
                                                            "maxLength": 256,
                                                            "minLength": 1,
                                                            "type": "string"
                                                        },
                                                        "maxItems": 50,
                                                        "minItems": 1,
                                                        "type": "array"
                                                    },
                                                    "name": {
                                                        "description": "The name of the 'removeAttributes' activity.",
                                                        "maxLength": 128,
                                                        "minLength": 1,
                                                        "type": "string"
                                                    },
                                                    "next": {
                                                        "description": "The next activity in the pipeline.",
                                                        "maxLength": 128,
                                                        "minLength": 1,
                                                        "type": "string"
                                                    }
                                                },
                                                "required": [
                                                    "name",
                                                    "attributes"
                                                ],
                                                "type": "object"
                                            },
                                            "selectAttributes": {
                                                "description": "Creates a new message using only the specified attributes from the original message. ",
                                                "properties": {
                                                    "attributes": {
                                                        "description": "A list of the attributes to select from the message.",
                                                        "items": {
                                                            "maxLength": 256,
                                                            "minLength": 1,
                                                            "type": "string"
                                                        },
                                                        "maxItems": 50,
                                                        "minItems": 1,
                                                        "type": "array"
                                                    },
                                                    "name": {
                                                        "description": "The name of the 'selectAttributes' activity.",
                                                        "maxLength": 128,
                                                        "minLength": 1,
                                                        "type": "string"
                                                    },
                                                    "next": {
                                                        "description": "The next activity in the pipeline.",
                                                        "maxLength": 128,
                                                        "minLength": 1,
                                                        "type": "string"
                                                    }
                                                },
                                                "required": [
                                                    "name",
                                                    "attributes"
                                                ],
                                                "type": "object"
                                            }
                                        },
                                        "type": "object"
                                    }
                                },
                                "required": [
                                    "pipelineActivity",
                                    "payloads"
                                ],
                                "type": "object"
                            }
                        }
                    },
                    "required": true
                }
            }
        },
        "/pipelines": {
            "get": {
                "description": "Retrieves a list of pipelines.",
                "operationId": "ListPipelines",
                "parameters": [
                    {
                        "description": "Pagination limit",
                        "in": "query",
                        "name": "maxResults",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "Pagination token",
                        "in": "query",
                        "name": "nextToken",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "nextToken": {
                                            "description": "The token to retrieve the next set of results, or <code>null</code> if there are no more results.",
                                            "type": "string"
                                        },
                                        "pipelineSummaries": {
                                            "description": "A list of \"PipelineSummary\" objects.",
                                            "items": {
                                                "description": "A summary of information about a pipeline.",
                                                "properties": {
                                                    "creationTime": {
                                                        "description": "When the pipeline was created.",
                                                        "format": "date-time",
                                                        "type": "string"
                                                    },
                                                    "lastUpdateTime": {
                                                        "description": "When the pipeline was last updated.",
                                                        "format": "date-time",
                                                        "type": "string"
                                                    },
                                                    "pipelineName": {
                                                        "description": "The name of the pipeline.",
                                                        "maxLength": 128,
                                                        "minLength": 1,
                                                        "pattern": "^[a-zA-Z0-9_]+$",
                                                        "type": "string"
                                                    },
                                                    "reprocessingSummaries": {
                                                        "description": "A summary of information about the pipeline reprocessing.",
                                                        "items": {
                                                            "description": "Information about pipeline reprocessing.",
                                                            "properties": {
                                                                "creationTime": {
                                                                    "description": "The time the pipeline reprocessing was created.",
                                                                    "format": "date-time",
                                                                    "type": "string"
                                                                },
                                                                "id": {
                                                                    "description": "The 'reprocessingId' returned by \"StartPipelineReprocessing\".",
                                                                    "type": "string"
                                                                },
                                                                "status": {
                                                                    "description": "The status of the pipeline reprocessing.",
                                                                    "enum": [
                                                                        "RUNNING",
                                                                        "SUCCEEDED",
                                                                        "CANCELLED",
                                                                        "FAILED"
                                                                    ],
                                                                    "type": "string"
                                                                }
                                                            },
                                                            "type": "object"
                                                        },
                                                        "type": "array"
                                                    }
                                                },
                                                "type": "object"
                                            },
                                            "type": "array"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "480": {
                        "description": "InvalidRequestException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "481": {
                        "description": "InternalFailureException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "482": {
                        "description": "ServiceUnavailableException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "483": {
                        "description": "ThrottlingException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {},
                                "type": "object"
                            }
                        }
                    },
                    "required": true
                }
            },
            "parameters": [
                {
                    "in": "query",
                    "name": "Action",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "query",
                    "name": "Version",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Content-Sha256",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Date",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Algorithm",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Credential",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Security-Token",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Signature",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-SignedHeaders",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                }
            ],
            "post": {
                "description": "Creates a pipeline. A pipeline consumes messages from one or more channels and allows you to process the messages before storing them in a data store.",
                "operationId": "CreatePipeline",
                "responses": {
                    "201": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "pipelineArn": {
                                            "description": "The ARN of the pipeline.",
                                            "type": "string"
                                        },
                                        "pipelineName": {
                                            "description": "The name of the pipeline.",
                                            "maxLength": 128,
                                            "minLength": 1,
                                            "pattern": "^[a-zA-Z0-9_]+$",
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "480": {
                        "description": "InvalidRequestException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "481": {
                        "description": "ResourceAlreadyExistsException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "482": {
                        "description": "InternalFailureException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "483": {
                        "description": "ServiceUnavailableException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "484": {
                        "description": "ThrottlingException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "485": {
                        "description": "LimitExceededException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "pipelineActivities": {
                                        "description": "<p>A list of pipeline activities.</p> <p>The list can be 1-25 <b>PipelineActivity</b> objects. Activities perform transformations on your messages, such as removing, renaming, or adding message attributes; filtering messages based on attribute values; invoking your Lambda functions on messages for advanced processing; or performing mathematical transformations to normalize device data.</p>",
                                        "items": {
                                            "description": "An activity that performs a transformation on a message.",
                                            "properties": {
                                                "addAttributes": {
                                                    "description": "Adds other attributes based on existing attributes in the message.",
                                                    "properties": {
                                                        "attributes": {
                                                            "description": "<p>A list of 1-50 \"AttributeNameMapping\" objects that map an existing attribute to a new attribute.</p> <note> <p>The existing attributes remain in the message, so if you want to remove the originals, use \"RemoveAttributeActivity\".</p> </note>",
                                                            "items": {
                                                                "properties": {
                                                                    "key": {
                                                                        "maxLength": 256,
                                                                        "minLength": 1,
                                                                        "type": "string"
                                                                    },
                                                                    "value": {
                                                                        "maxLength": 256,
                                                                        "minLength": 1,
                                                                        "type": "string"
                                                                    }
                                                                },
                                                                "type": "object"
                                                            },
                                                            "maxItems": 50,
                                                            "minItems": 1,
                                                            "type": "array"
                                                        },
                                                        "name": {
                                                            "description": "The name of the 'addAttributes' activity.",
                                                            "maxLength": 128,
                                                            "minLength": 1,
                                                            "type": "string"
                                                        },
                                                        "next": {
                                                            "description": "The next activity in the pipeline.",
                                                            "maxLength": 128,
                                                            "minLength": 1,
                                                            "type": "string"
                                                        }
                                                    },
                                                    "required": [
                                                        "name",
                                                        "attributes"
                                                    ],
                                                    "type": "object"
                                                },
                                                "channel": {
                                                    "description": "Determines the source of the messages to be processed.",
                                                    "properties": {
                                                        "channelName": {
                                                            "description": "The name of the channel from which the messages are processed.",
                                                            "maxLength": 128,
                                                            "minLength": 1,
                                                            "pattern": "^[a-zA-Z0-9_]+$",
                                                            "type": "string"
                                                        },
                                                        "name": {
                                                            "description": "The name of the 'channel' activity.",
                                                            "maxLength": 128,
                                                            "minLength": 1,
                                                            "type": "string"
                                                        },
                                                        "next": {
                                                            "description": "The next activity in the pipeline.",
                                                            "maxLength": 128,
                                                            "minLength": 1,
                                                            "type": "string"
                                                        }
                                                    },
                                                    "required": [
                                                        "name",
                                                        "channelName"
                                                    ],
                                                    "type": "object"
                                                },
                                                "datastore": {
                                                    "description": "Specifies where to store the processed message data.",
                                                    "properties": {
                                                        "datastoreName": {
                                                            "description": "The name of the data store where processed messages are stored.",
                                                            "maxLength": 128,
                                                            "minLength": 1,
                                                            "pattern": "^[a-zA-Z0-9_]+$",
                                                            "type": "string"
                                                        },
                                                        "name": {
                                                            "description": "The name of the 'datastore' activity.",
                                                            "maxLength": 128,
                                                            "minLength": 1,
                                                            "type": "string"
                                                        }
                                                    },
                                                    "required": [
                                                        "name",
                                                        "datastoreName"
                                                    ],
                                                    "type": "object"
                                                },
                                                "deviceRegistryEnrich": {
                                                    "description": "Adds data from the AWS IoT device registry to your message.",
                                                    "properties": {
                                                        "attribute": {
                                                            "description": "The name of the attribute that is added to the message.",
                                                            "maxLength": 256,
                                                            "minLength": 1,
                                                            "type": "string"
                                                        },
                                                        "name": {
                                                            "description": "The name of the 'deviceRegistryEnrich' activity.",
                                                            "maxLength": 128,
                                                            "minLength": 1,
                                                            "type": "string"
                                                        },
                                                        "next": {
                                                            "description": "The next activity in the pipeline.",
                                                            "maxLength": 128,
                                                            "minLength": 1,
                                                            "type": "string"
                                                        },
                                                        "roleArn": {
                                                            "description": "The ARN of the role that allows access to the device's registry information.",
                                                            "maxLength": 2048,
                                                            "minLength": 20,
                                                            "type": "string"
                                                        },
                                                        "thingName": {
                                                            "description": "The name of the IoT device whose registry information is added to the message.",
                                                            "maxLength": 256,
                                                            "minLength": 1,
                                                            "type": "string"
                                                        }
                                                    },
                                                    "required": [
                                                        "name",
                                                        "attribute",
                                                        "thingName",
                                                        "roleArn"
                                                    ],
                                                    "type": "object"
                                                },
                                                "deviceShadowEnrich": {
                                                    "description": "Adds information from the AWS IoT Device Shadows service to a message.",
                                                    "properties": {
                                                        "attribute": {
                                                            "description": "The name of the attribute that is added to the message.",
                                                            "maxLength": 256,
                                                            "minLength": 1,
                                                            "type": "string"
                                                        },
                                                        "name": {
                                                            "description": "The name of the 'deviceShadowEnrich' activity.",
                                                            "maxLength": 128,
                                                            "minLength": 1,
                                                            "type": "string"
                                                        },
                                                        "next": {
                                                            "description": "The next activity in the pipeline.",
                                                            "maxLength": 128,
                                                            "minLength": 1,
                                                            "type": "string"
                                                        },
                                                        "roleArn": {
                                                            "description": "The ARN of the role that allows access to the device's shadow.",
                                                            "maxLength": 2048,
                                                            "minLength": 20,
                                                            "type": "string"
                                                        },
                                                        "thingName": {
                                                            "description": "The name of the IoT device whose shadow information is added to the message.",
                                                            "maxLength": 256,
                                                            "minLength": 1,
                                                            "type": "string"
                                                        }
                                                    },
                                                    "required": [
                                                        "name",
                                                        "attribute",
                                                        "thingName",
                                                        "roleArn"
                                                    ],
                                                    "type": "object"
                                                },
                                                "filter": {
                                                    "description": "Filters a message based on its attributes.",
                                                    "properties": {
                                                        "filter": {
                                                            "description": "An expression that looks like a SQL WHERE clause that must return a Boolean value.",
                                                            "maxLength": 256,
                                                            "minLength": 1,
                                                            "type": "string"
                                                        },
                                                        "name": {
                                                            "description": "The name of the 'filter' activity.",
                                                            "maxLength": 128,
                                                            "minLength": 1,
                                                            "type": "string"
                                                        },
                                                        "next": {
                                                            "description": "The next activity in the pipeline.",
                                                            "maxLength": 128,
                                                            "minLength": 1,
                                                            "type": "string"
                                                        }
                                                    },
                                                    "required": [
                                                        "name",
                                                        "filter"
                                                    ],
                                                    "type": "object"
                                                },
                                                "lambda": {
                                                    "description": "Runs a Lambda function to modify the message.",
                                                    "properties": {
                                                        "batchSize": {
                                                            "description": "<p>The number of messages passed to the Lambda function for processing.</p> <p>The AWS Lambda function must be able to process all of these messages within five minutes, which is the maximum timeout duration for Lambda functions.</p>",
                                                            "maximum": 1000,
                                                            "minimum": 1,
                                                            "type": "integer"
                                                        },
                                                        "lambdaName": {
                                                            "description": "The name of the Lambda function that is run on the message.",
                                                            "maxLength": 64,
                                                            "minLength": 1,
                                                            "pattern": "^[a-zA-Z0-9_-]+$",
                                                            "type": "string"
                                                        },
                                                        "name": {
                                                            "description": "The name of the 'lambda' activity.",
                                                            "maxLength": 128,
                                                            "minLength": 1,
                                                            "type": "string"
                                                        },
                                                        "next": {
                                                            "description": "The next activity in the pipeline.",
                                                            "maxLength": 128,
                                                            "minLength": 1,
                                                            "type": "string"
                                                        }
                                                    },
                                                    "required": [
                                                        "name",
                                                        "lambdaName",
                                                        "batchSize"
                                                    ],
                                                    "type": "object"
                                                },
                                                "math": {
                                                    "description": "Computes an arithmetic expression using the message's attributes and adds it to the message.",
                                                    "properties": {
                                                        "attribute": {
                                                            "description": "The name of the attribute that contains the result of the math operation.",
                                                            "maxLength": 256,
                                                            "minLength": 1,
                                                            "type": "string"
                                                        },
                                                        "math": {
                                                            "description": "An expression that uses one or more existing attributes and must return an integer value.",
                                                            "maxLength": 256,
                                                            "minLength": 1,
                                                            "type": "string"
                                                        },
                                                        "name": {
                                                            "description": "The name of the 'math' activity.",
                                                            "maxLength": 128,
                                                            "minLength": 1,
                                                            "type": "string"
                                                        },
                                                        "next": {
                                                            "description": "The next activity in the pipeline.",
                                                            "maxLength": 128,
                                                            "minLength": 1,
                                                            "type": "string"
                                                        }
                                                    },
                                                    "required": [
                                                        "name",
                                                        "attribute",
                                                        "math"
                                                    ],
                                                    "type": "object"
                                                },
                                                "removeAttributes": {
                                                    "description": "Removes attributes from a message.",
                                                    "properties": {
                                                        "attributes": {
                                                            "description": "A list of 1-50 attributes to remove from the message.",
                                                            "items": {
                                                                "maxLength": 256,
                                                                "minLength": 1,
                                                                "type": "string"
                                                            },
                                                            "maxItems": 50,
                                                            "minItems": 1,
                                                            "type": "array"
                                                        },
                                                        "name": {
                                                            "description": "The name of the 'removeAttributes' activity.",
                                                            "maxLength": 128,
                                                            "minLength": 1,
                                                            "type": "string"
                                                        },
                                                        "next": {
                                                            "description": "The next activity in the pipeline.",
                                                            "maxLength": 128,
                                                            "minLength": 1,
                                                            "type": "string"
                                                        }
                                                    },
                                                    "required": [
                                                        "name",
                                                        "attributes"
                                                    ],
                                                    "type": "object"
                                                },
                                                "selectAttributes": {
                                                    "description": "Creates a new message using only the specified attributes from the original message. ",
                                                    "properties": {
                                                        "attributes": {
                                                            "description": "A list of the attributes to select from the message.",
                                                            "items": {
                                                                "maxLength": 256,
                                                                "minLength": 1,
                                                                "type": "string"
                                                            },
                                                            "maxItems": 50,
                                                            "minItems": 1,
                                                            "type": "array"
                                                        },
                                                        "name": {
                                                            "description": "The name of the 'selectAttributes' activity.",
                                                            "maxLength": 128,
                                                            "minLength": 1,
                                                            "type": "string"
                                                        },
                                                        "next": {
                                                            "description": "The next activity in the pipeline.",
                                                            "maxLength": 128,
                                                            "minLength": 1,
                                                            "type": "string"
                                                        }
                                                    },
                                                    "required": [
                                                        "name",
                                                        "attributes"
                                                    ],
                                                    "type": "object"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "maxItems": 25,
                                        "minItems": 1,
                                        "type": "array"
                                    },
                                    "pipelineName": {
                                        "description": "The name of the pipeline.",
                                        "maxLength": 128,
                                        "minLength": 1,
                                        "pattern": "^[a-zA-Z0-9_]+$",
                                        "type": "string"
                                    },
                                    "tags": {
                                        "description": "Metadata which can be used to manage the pipeline.",
                                        "items": {
                                            "description": "A set of key/value pairs which are used to manage the resource.",
                                            "properties": {
                                                "key": {
                                                    "description": "The tag's key.",
                                                    "maxLength": 256,
                                                    "minLength": 1,
                                                    "type": "string"
                                                },
                                                "value": {
                                                    "description": "The tag's value.",
                                                    "maxLength": 256,
                                                    "minLength": 1,
                                                    "type": "string"
                                                }
                                            },
                                            "required": [
                                                "key",
                                                "value"
                                            ],
                                            "type": "object"
                                        },
                                        "maxItems": 50,
                                        "minItems": 1,
                                        "type": "array"
                                    }
                                },
                                "required": [
                                    "pipelineName",
                                    "pipelineActivities"
                                ],
                                "type": "object"
                            }
                        }
                    },
                    "required": true
                }
            }
        },
        "/pipelines/{pipelineName}": {
            "delete": {
                "description": "Deletes the specified pipeline.",
                "operationId": "DeletePipeline",
                "parameters": [
                    {
                        "in": "path",
                        "name": "pipelineName",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Success"
                    },
                    "480": {
                        "description": "InvalidRequestException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "481": {
                        "description": "ResourceNotFoundException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "482": {
                        "description": "InternalFailureException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "483": {
                        "description": "ServiceUnavailableException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "484": {
                        "description": "ThrottlingException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {},
                                "type": "object"
                            }
                        }
                    },
                    "required": true
                }
            },
            "get": {
                "description": "Retrieves information about a pipeline.",
                "operationId": "DescribePipeline",
                "parameters": [
                    {
                        "in": "path",
                        "name": "pipelineName",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "pipeline": {
                                            "description": "A \"Pipeline\" object that contains information about the pipeline.",
                                            "properties": {
                                                "activities": {
                                                    "description": "The activities that perform transformations on the messages.",
                                                    "items": {
                                                        "description": "An activity that performs a transformation on a message.",
                                                        "properties": {
                                                            "addAttributes": {
                                                                "description": "Adds other attributes based on existing attributes in the message.",
                                                                "properties": {
                                                                    "attributes": {
                                                                        "description": "<p>A list of 1-50 \"AttributeNameMapping\" objects that map an existing attribute to a new attribute.</p> <note> <p>The existing attributes remain in the message, so if you want to remove the originals, use \"RemoveAttributeActivity\".</p> </note>",
                                                                        "items": {
                                                                            "properties": {
                                                                                "key": {
                                                                                    "maxLength": 256,
                                                                                    "minLength": 1,
                                                                                    "type": "string"
                                                                                },
                                                                                "value": {
                                                                                    "maxLength": 256,
                                                                                    "minLength": 1,
                                                                                    "type": "string"
                                                                                }
                                                                            },
                                                                            "type": "object"
                                                                        },
                                                                        "maxItems": 50,
                                                                        "minItems": 1,
                                                                        "type": "array"
                                                                    },
                                                                    "name": {
                                                                        "description": "The name of the 'addAttributes' activity.",
                                                                        "maxLength": 128,
                                                                        "minLength": 1,
                                                                        "type": "string"
                                                                    },
                                                                    "next": {
                                                                        "description": "The next activity in the pipeline.",
                                                                        "maxLength": 128,
                                                                        "minLength": 1,
                                                                        "type": "string"
                                                                    }
                                                                },
                                                                "required": [
                                                                    "name",
                                                                    "attributes"
                                                                ],
                                                                "type": "object"
                                                            },
                                                            "channel": {
                                                                "description": "Determines the source of the messages to be processed.",
                                                                "properties": {
                                                                    "channelName": {
                                                                        "description": "The name of the channel from which the messages are processed.",
                                                                        "maxLength": 128,
                                                                        "minLength": 1,
                                                                        "pattern": "^[a-zA-Z0-9_]+$",
                                                                        "type": "string"
                                                                    },
                                                                    "name": {
                                                                        "description": "The name of the 'channel' activity.",
                                                                        "maxLength": 128,
                                                                        "minLength": 1,
                                                                        "type": "string"
                                                                    },
                                                                    "next": {
                                                                        "description": "The next activity in the pipeline.",
                                                                        "maxLength": 128,
                                                                        "minLength": 1,
                                                                        "type": "string"
                                                                    }
                                                                },
                                                                "required": [
                                                                    "name",
                                                                    "channelName"
                                                                ],
                                                                "type": "object"
                                                            },
                                                            "datastore": {
                                                                "description": "Specifies where to store the processed message data.",
                                                                "properties": {
                                                                    "datastoreName": {
                                                                        "description": "The name of the data store where processed messages are stored.",
                                                                        "maxLength": 128,
                                                                        "minLength": 1,
                                                                        "pattern": "^[a-zA-Z0-9_]+$",
                                                                        "type": "string"
                                                                    },
                                                                    "name": {
                                                                        "description": "The name of the 'datastore' activity.",
                                                                        "maxLength": 128,
                                                                        "minLength": 1,
                                                                        "type": "string"
                                                                    }
                                                                },
                                                                "required": [
                                                                    "name",
                                                                    "datastoreName"
                                                                ],
                                                                "type": "object"
                                                            },
                                                            "deviceRegistryEnrich": {
                                                                "description": "Adds data from the AWS IoT device registry to your message.",
                                                                "properties": {
                                                                    "attribute": {
                                                                        "description": "The name of the attribute that is added to the message.",
                                                                        "maxLength": 256,
                                                                        "minLength": 1,
                                                                        "type": "string"
                                                                    },
                                                                    "name": {
                                                                        "description": "The name of the 'deviceRegistryEnrich' activity.",
                                                                        "maxLength": 128,
                                                                        "minLength": 1,
                                                                        "type": "string"
                                                                    },
                                                                    "next": {
                                                                        "description": "The next activity in the pipeline.",
                                                                        "maxLength": 128,
                                                                        "minLength": 1,
                                                                        "type": "string"
                                                                    },
                                                                    "roleArn": {
                                                                        "description": "The ARN of the role that allows access to the device's registry information.",
                                                                        "maxLength": 2048,
                                                                        "minLength": 20,
                                                                        "type": "string"
                                                                    },
                                                                    "thingName": {
                                                                        "description": "The name of the IoT device whose registry information is added to the message.",
                                                                        "maxLength": 256,
                                                                        "minLength": 1,
                                                                        "type": "string"
                                                                    }
                                                                },
                                                                "required": [
                                                                    "name",
                                                                    "attribute",
                                                                    "thingName",
                                                                    "roleArn"
                                                                ],
                                                                "type": "object"
                                                            },
                                                            "deviceShadowEnrich": {
                                                                "description": "Adds information from the AWS IoT Device Shadows service to a message.",
                                                                "properties": {
                                                                    "attribute": {
                                                                        "description": "The name of the attribute that is added to the message.",
                                                                        "maxLength": 256,
                                                                        "minLength": 1,
                                                                        "type": "string"
                                                                    },
                                                                    "name": {
                                                                        "description": "The name of the 'deviceShadowEnrich' activity.",
                                                                        "maxLength": 128,
                                                                        "minLength": 1,
                                                                        "type": "string"
                                                                    },
                                                                    "next": {
                                                                        "description": "The next activity in the pipeline.",
                                                                        "maxLength": 128,
                                                                        "minLength": 1,
                                                                        "type": "string"
                                                                    },
                                                                    "roleArn": {
                                                                        "description": "The ARN of the role that allows access to the device's shadow.",
                                                                        "maxLength": 2048,
                                                                        "minLength": 20,
                                                                        "type": "string"
                                                                    },
                                                                    "thingName": {
                                                                        "description": "The name of the IoT device whose shadow information is added to the message.",
                                                                        "maxLength": 256,
                                                                        "minLength": 1,
                                                                        "type": "string"
                                                                    }
                                                                },
                                                                "required": [
                                                                    "name",
                                                                    "attribute",
                                                                    "thingName",
                                                                    "roleArn"
                                                                ],
                                                                "type": "object"
                                                            },
                                                            "filter": {
                                                                "description": "Filters a message based on its attributes.",
                                                                "properties": {
                                                                    "filter": {
                                                                        "description": "An expression that looks like a SQL WHERE clause that must return a Boolean value.",
                                                                        "maxLength": 256,
                                                                        "minLength": 1,
                                                                        "type": "string"
                                                                    },
                                                                    "name": {
                                                                        "description": "The name of the 'filter' activity.",
                                                                        "maxLength": 128,
                                                                        "minLength": 1,
                                                                        "type": "string"
                                                                    },
                                                                    "next": {
                                                                        "description": "The next activity in the pipeline.",
                                                                        "maxLength": 128,
                                                                        "minLength": 1,
                                                                        "type": "string"
                                                                    }
                                                                },
                                                                "required": [
                                                                    "name",
                                                                    "filter"
                                                                ],
                                                                "type": "object"
                                                            },
                                                            "lambda": {
                                                                "description": "Runs a Lambda function to modify the message.",
                                                                "properties": {
                                                                    "batchSize": {
                                                                        "description": "<p>The number of messages passed to the Lambda function for processing.</p> <p>The AWS Lambda function must be able to process all of these messages within five minutes, which is the maximum timeout duration for Lambda functions.</p>",
                                                                        "maximum": 1000,
                                                                        "minimum": 1,
                                                                        "type": "integer"
                                                                    },
                                                                    "lambdaName": {
                                                                        "description": "The name of the Lambda function that is run on the message.",
                                                                        "maxLength": 64,
                                                                        "minLength": 1,
                                                                        "pattern": "^[a-zA-Z0-9_-]+$",
                                                                        "type": "string"
                                                                    },
                                                                    "name": {
                                                                        "description": "The name of the 'lambda' activity.",
                                                                        "maxLength": 128,
                                                                        "minLength": 1,
                                                                        "type": "string"
                                                                    },
                                                                    "next": {
                                                                        "description": "The next activity in the pipeline.",
                                                                        "maxLength": 128,
                                                                        "minLength": 1,
                                                                        "type": "string"
                                                                    }
                                                                },
                                                                "required": [
                                                                    "name",
                                                                    "lambdaName",
                                                                    "batchSize"
                                                                ],
                                                                "type": "object"
                                                            },
                                                            "math": {
                                                                "description": "Computes an arithmetic expression using the message's attributes and adds it to the message.",
                                                                "properties": {
                                                                    "attribute": {
                                                                        "description": "The name of the attribute that contains the result of the math operation.",
                                                                        "maxLength": 256,
                                                                        "minLength": 1,
                                                                        "type": "string"
                                                                    },
                                                                    "math": {
                                                                        "description": "An expression that uses one or more existing attributes and must return an integer value.",
                                                                        "maxLength": 256,
                                                                        "minLength": 1,
                                                                        "type": "string"
                                                                    },
                                                                    "name": {
                                                                        "description": "The name of the 'math' activity.",
                                                                        "maxLength": 128,
                                                                        "minLength": 1,
                                                                        "type": "string"
                                                                    },
                                                                    "next": {
                                                                        "description": "The next activity in the pipeline.",
                                                                        "maxLength": 128,
                                                                        "minLength": 1,
                                                                        "type": "string"
                                                                    }
                                                                },
                                                                "required": [
                                                                    "name",
                                                                    "attribute",
                                                                    "math"
                                                                ],
                                                                "type": "object"
                                                            },
                                                            "removeAttributes": {
                                                                "description": "Removes attributes from a message.",
                                                                "properties": {
                                                                    "attributes": {
                                                                        "description": "A list of 1-50 attributes to remove from the message.",
                                                                        "items": {
                                                                            "maxLength": 256,
                                                                            "minLength": 1,
                                                                            "type": "string"
                                                                        },
                                                                        "maxItems": 50,
                                                                        "minItems": 1,
                                                                        "type": "array"
                                                                    },
                                                                    "name": {
                                                                        "description": "The name of the 'removeAttributes' activity.",
                                                                        "maxLength": 128,
                                                                        "minLength": 1,
                                                                        "type": "string"
                                                                    },
                                                                    "next": {
                                                                        "description": "The next activity in the pipeline.",
                                                                        "maxLength": 128,
                                                                        "minLength": 1,
                                                                        "type": "string"
                                                                    }
                                                                },
                                                                "required": [
                                                                    "name",
                                                                    "attributes"
                                                                ],
                                                                "type": "object"
                                                            },
                                                            "selectAttributes": {
                                                                "description": "Creates a new message using only the specified attributes from the original message. ",
                                                                "properties": {
                                                                    "attributes": {
                                                                        "description": "A list of the attributes to select from the message.",
                                                                        "items": {
                                                                            "maxLength": 256,
                                                                            "minLength": 1,
                                                                            "type": "string"
                                                                        },
                                                                        "maxItems": 50,
                                                                        "minItems": 1,
                                                                        "type": "array"
                                                                    },
                                                                    "name": {
                                                                        "description": "The name of the 'selectAttributes' activity.",
                                                                        "maxLength": 128,
                                                                        "minLength": 1,
                                                                        "type": "string"
                                                                    },
                                                                    "next": {
                                                                        "description": "The next activity in the pipeline.",
                                                                        "maxLength": 128,
                                                                        "minLength": 1,
                                                                        "type": "string"
                                                                    }
                                                                },
                                                                "required": [
                                                                    "name",
                                                                    "attributes"
                                                                ],
                                                                "type": "object"
                                                            }
                                                        },
                                                        "type": "object"
                                                    },
                                                    "maxItems": 25,
                                                    "minItems": 1,
                                                    "type": "array"
                                                },
                                                "arn": {
                                                    "description": "The ARN of the pipeline.",
                                                    "type": "string"
                                                },
                                                "creationTime": {
                                                    "description": "When the pipeline was created.",
                                                    "format": "date-time",
                                                    "type": "string"
                                                },
                                                "lastUpdateTime": {
                                                    "description": "The last time the pipeline was updated.",
                                                    "format": "date-time",
                                                    "type": "string"
                                                },
                                                "name": {
                                                    "description": "The name of the pipeline.",
                                                    "maxLength": 128,
                                                    "minLength": 1,
                                                    "pattern": "^[a-zA-Z0-9_]+$",
                                                    "type": "string"
                                                },
                                                "reprocessingSummaries": {
                                                    "description": "A summary of information about the pipeline reprocessing.",
                                                    "items": {
                                                        "description": "Information about pipeline reprocessing.",
                                                        "properties": {
                                                            "creationTime": {
                                                                "description": "The time the pipeline reprocessing was created.",
                                                                "format": "date-time",
                                                                "type": "string"
                                                            },
                                                            "id": {
                                                                "description": "The 'reprocessingId' returned by \"StartPipelineReprocessing\".",
                                                                "type": "string"
                                                            },
                                                            "status": {
                                                                "description": "The status of the pipeline reprocessing.",
                                                                "enum": [
                                                                    "RUNNING",
                                                                    "SUCCEEDED",
                                                                    "CANCELLED",
                                                                    "FAILED"
                                                                ],
                                                                "type": "string"
                                                            }
                                                        },
                                                        "type": "object"
                                                    },
                                                    "type": "array"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "480": {
                        "description": "InvalidRequestException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "481": {
                        "description": "ResourceNotFoundException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "482": {
                        "description": "InternalFailureException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "483": {
                        "description": "ServiceUnavailableException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "484": {
                        "description": "ThrottlingException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {},
                                "type": "object"
                            }
                        }
                    },
                    "required": true
                }
            },
            "parameters": [
                {
                    "in": "query",
                    "name": "Action",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "query",
                    "name": "Version",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Content-Sha256",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Date",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Algorithm",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Credential",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Security-Token",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Signature",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-SignedHeaders",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                }
            ],
            "put": {
                "description": "Updates the settings of a pipeline.",
                "operationId": "UpdatePipeline",
                "parameters": [
                    {
                        "in": "path",
                        "name": "pipelineName",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success"
                    },
                    "480": {
                        "description": "InvalidRequestException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "481": {
                        "description": "ResourceNotFoundException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "482": {
                        "description": "InternalFailureException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "483": {
                        "description": "ServiceUnavailableException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "484": {
                        "description": "ThrottlingException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "485": {
                        "description": "LimitExceededException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "pipelineActivities": {
                                        "description": "<p>A list of \"PipelineActivity\" objects.</p> <p>The list can be 1-25 <b>PipelineActivity</b> objects. Activities perform transformations on your messages, such as removing, renaming or adding message attributes; filtering messages based on attribute values; invoking your Lambda functions on messages for advanced processing; or performing mathematical transformations to normalize device data.</p>",
                                        "items": {
                                            "description": "An activity that performs a transformation on a message.",
                                            "properties": {
                                                "addAttributes": {
                                                    "description": "Adds other attributes based on existing attributes in the message.",
                                                    "properties": {
                                                        "attributes": {
                                                            "description": "<p>A list of 1-50 \"AttributeNameMapping\" objects that map an existing attribute to a new attribute.</p> <note> <p>The existing attributes remain in the message, so if you want to remove the originals, use \"RemoveAttributeActivity\".</p> </note>",
                                                            "items": {
                                                                "properties": {
                                                                    "key": {
                                                                        "maxLength": 256,
                                                                        "minLength": 1,
                                                                        "type": "string"
                                                                    },
                                                                    "value": {
                                                                        "maxLength": 256,
                                                                        "minLength": 1,
                                                                        "type": "string"
                                                                    }
                                                                },
                                                                "type": "object"
                                                            },
                                                            "maxItems": 50,
                                                            "minItems": 1,
                                                            "type": "array"
                                                        },
                                                        "name": {
                                                            "description": "The name of the 'addAttributes' activity.",
                                                            "maxLength": 128,
                                                            "minLength": 1,
                                                            "type": "string"
                                                        },
                                                        "next": {
                                                            "description": "The next activity in the pipeline.",
                                                            "maxLength": 128,
                                                            "minLength": 1,
                                                            "type": "string"
                                                        }
                                                    },
                                                    "required": [
                                                        "name",
                                                        "attributes"
                                                    ],
                                                    "type": "object"
                                                },
                                                "channel": {
                                                    "description": "Determines the source of the messages to be processed.",
                                                    "properties": {
                                                        "channelName": {
                                                            "description": "The name of the channel from which the messages are processed.",
                                                            "maxLength": 128,
                                                            "minLength": 1,
                                                            "pattern": "^[a-zA-Z0-9_]+$",
                                                            "type": "string"
                                                        },
                                                        "name": {
                                                            "description": "The name of the 'channel' activity.",
                                                            "maxLength": 128,
                                                            "minLength": 1,
                                                            "type": "string"
                                                        },
                                                        "next": {
                                                            "description": "The next activity in the pipeline.",
                                                            "maxLength": 128,
                                                            "minLength": 1,
                                                            "type": "string"
                                                        }
                                                    },
                                                    "required": [
                                                        "name",
                                                        "channelName"
                                                    ],
                                                    "type": "object"
                                                },
                                                "datastore": {
                                                    "description": "Specifies where to store the processed message data.",
                                                    "properties": {
                                                        "datastoreName": {
                                                            "description": "The name of the data store where processed messages are stored.",
                                                            "maxLength": 128,
                                                            "minLength": 1,
                                                            "pattern": "^[a-zA-Z0-9_]+$",
                                                            "type": "string"
                                                        },
                                                        "name": {
                                                            "description": "The name of the 'datastore' activity.",
                                                            "maxLength": 128,
                                                            "minLength": 1,
                                                            "type": "string"
                                                        }
                                                    },
                                                    "required": [
                                                        "name",
                                                        "datastoreName"
                                                    ],
                                                    "type": "object"
                                                },
                                                "deviceRegistryEnrich": {
                                                    "description": "Adds data from the AWS IoT device registry to your message.",
                                                    "properties": {
                                                        "attribute": {
                                                            "description": "The name of the attribute that is added to the message.",
                                                            "maxLength": 256,
                                                            "minLength": 1,
                                                            "type": "string"
                                                        },
                                                        "name": {
                                                            "description": "The name of the 'deviceRegistryEnrich' activity.",
                                                            "maxLength": 128,
                                                            "minLength": 1,
                                                            "type": "string"
                                                        },
                                                        "next": {
                                                            "description": "The next activity in the pipeline.",
                                                            "maxLength": 128,
                                                            "minLength": 1,
                                                            "type": "string"
                                                        },
                                                        "roleArn": {
                                                            "description": "The ARN of the role that allows access to the device's registry information.",
                                                            "maxLength": 2048,
                                                            "minLength": 20,
                                                            "type": "string"
                                                        },
                                                        "thingName": {
                                                            "description": "The name of the IoT device whose registry information is added to the message.",
                                                            "maxLength": 256,
                                                            "minLength": 1,
                                                            "type": "string"
                                                        }
                                                    },
                                                    "required": [
                                                        "name",
                                                        "attribute",
                                                        "thingName",
                                                        "roleArn"
                                                    ],
                                                    "type": "object"
                                                },
                                                "deviceShadowEnrich": {
                                                    "description": "Adds information from the AWS IoT Device Shadows service to a message.",
                                                    "properties": {
                                                        "attribute": {
                                                            "description": "The name of the attribute that is added to the message.",
                                                            "maxLength": 256,
                                                            "minLength": 1,
                                                            "type": "string"
                                                        },
                                                        "name": {
                                                            "description": "The name of the 'deviceShadowEnrich' activity.",
                                                            "maxLength": 128,
                                                            "minLength": 1,
                                                            "type": "string"
                                                        },
                                                        "next": {
                                                            "description": "The next activity in the pipeline.",
                                                            "maxLength": 128,
                                                            "minLength": 1,
                                                            "type": "string"
                                                        },
                                                        "roleArn": {
                                                            "description": "The ARN of the role that allows access to the device's shadow.",
                                                            "maxLength": 2048,
                                                            "minLength": 20,
                                                            "type": "string"
                                                        },
                                                        "thingName": {
                                                            "description": "The name of the IoT device whose shadow information is added to the message.",
                                                            "maxLength": 256,
                                                            "minLength": 1,
                                                            "type": "string"
                                                        }
                                                    },
                                                    "required": [
                                                        "name",
                                                        "attribute",
                                                        "thingName",
                                                        "roleArn"
                                                    ],
                                                    "type": "object"
                                                },
                                                "filter": {
                                                    "description": "Filters a message based on its attributes.",
                                                    "properties": {
                                                        "filter": {
                                                            "description": "An expression that looks like a SQL WHERE clause that must return a Boolean value.",
                                                            "maxLength": 256,
                                                            "minLength": 1,
                                                            "type": "string"
                                                        },
                                                        "name": {
                                                            "description": "The name of the 'filter' activity.",
                                                            "maxLength": 128,
                                                            "minLength": 1,
                                                            "type": "string"
                                                        },
                                                        "next": {
                                                            "description": "The next activity in the pipeline.",
                                                            "maxLength": 128,
                                                            "minLength": 1,
                                                            "type": "string"
                                                        }
                                                    },
                                                    "required": [
                                                        "name",
                                                        "filter"
                                                    ],
                                                    "type": "object"
                                                },
                                                "lambda": {
                                                    "description": "Runs a Lambda function to modify the message.",
                                                    "properties": {
                                                        "batchSize": {
                                                            "description": "<p>The number of messages passed to the Lambda function for processing.</p> <p>The AWS Lambda function must be able to process all of these messages within five minutes, which is the maximum timeout duration for Lambda functions.</p>",
                                                            "maximum": 1000,
                                                            "minimum": 1,
                                                            "type": "integer"
                                                        },
                                                        "lambdaName": {
                                                            "description": "The name of the Lambda function that is run on the message.",
                                                            "maxLength": 64,
                                                            "minLength": 1,
                                                            "pattern": "^[a-zA-Z0-9_-]+$",
                                                            "type": "string"
                                                        },
                                                        "name": {
                                                            "description": "The name of the 'lambda' activity.",
                                                            "maxLength": 128,
                                                            "minLength": 1,
                                                            "type": "string"
                                                        },
                                                        "next": {
                                                            "description": "The next activity in the pipeline.",
                                                            "maxLength": 128,
                                                            "minLength": 1,
                                                            "type": "string"
                                                        }
                                                    },
                                                    "required": [
                                                        "name",
                                                        "lambdaName",
                                                        "batchSize"
                                                    ],
                                                    "type": "object"
                                                },
                                                "math": {
                                                    "description": "Computes an arithmetic expression using the message's attributes and adds it to the message.",
                                                    "properties": {
                                                        "attribute": {
                                                            "description": "The name of the attribute that contains the result of the math operation.",
                                                            "maxLength": 256,
                                                            "minLength": 1,
                                                            "type": "string"
                                                        },
                                                        "math": {
                                                            "description": "An expression that uses one or more existing attributes and must return an integer value.",
                                                            "maxLength": 256,
                                                            "minLength": 1,
                                                            "type": "string"
                                                        },
                                                        "name": {
                                                            "description": "The name of the 'math' activity.",
                                                            "maxLength": 128,
                                                            "minLength": 1,
                                                            "type": "string"
                                                        },
                                                        "next": {
                                                            "description": "The next activity in the pipeline.",
                                                            "maxLength": 128,
                                                            "minLength": 1,
                                                            "type": "string"
                                                        }
                                                    },
                                                    "required": [
                                                        "name",
                                                        "attribute",
                                                        "math"
                                                    ],
                                                    "type": "object"
                                                },
                                                "removeAttributes": {
                                                    "description": "Removes attributes from a message.",
                                                    "properties": {
                                                        "attributes": {
                                                            "description": "A list of 1-50 attributes to remove from the message.",
                                                            "items": {
                                                                "maxLength": 256,
                                                                "minLength": 1,
                                                                "type": "string"
                                                            },
                                                            "maxItems": 50,
                                                            "minItems": 1,
                                                            "type": "array"
                                                        },
                                                        "name": {
                                                            "description": "The name of the 'removeAttributes' activity.",
                                                            "maxLength": 128,
                                                            "minLength": 1,
                                                            "type": "string"
                                                        },
                                                        "next": {
                                                            "description": "The next activity in the pipeline.",
                                                            "maxLength": 128,
                                                            "minLength": 1,
                                                            "type": "string"
                                                        }
                                                    },
                                                    "required": [
                                                        "name",
                                                        "attributes"
                                                    ],
                                                    "type": "object"
                                                },
                                                "selectAttributes": {
                                                    "description": "Creates a new message using only the specified attributes from the original message. ",
                                                    "properties": {
                                                        "attributes": {
                                                            "description": "A list of the attributes to select from the message.",
                                                            "items": {
                                                                "maxLength": 256,
                                                                "minLength": 1,
                                                                "type": "string"
                                                            },
                                                            "maxItems": 50,
                                                            "minItems": 1,
                                                            "type": "array"
                                                        },
                                                        "name": {
                                                            "description": "The name of the 'selectAttributes' activity.",
                                                            "maxLength": 128,
                                                            "minLength": 1,
                                                            "type": "string"
                                                        },
                                                        "next": {
                                                            "description": "The next activity in the pipeline.",
                                                            "maxLength": 128,
                                                            "minLength": 1,
                                                            "type": "string"
                                                        }
                                                    },
                                                    "required": [
                                                        "name",
                                                        "attributes"
                                                    ],
                                                    "type": "object"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "maxItems": 25,
                                        "minItems": 1,
                                        "type": "array"
                                    }
                                },
                                "required": [
                                    "pipelineActivities"
                                ],
                                "type": "object"
                            }
                        }
                    },
                    "required": true
                }
            }
        },
        "/pipelines/{pipelineName}/reprocessing": {
            "parameters": [
                {
                    "in": "query",
                    "name": "Action",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "query",
                    "name": "Version",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Content-Sha256",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Date",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Algorithm",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Credential",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Security-Token",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Signature",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-SignedHeaders",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                }
            ],
            "post": {
                "description": "Starts the reprocessing of raw message data through the pipeline.",
                "operationId": "StartPipelineReprocessing",
                "parameters": [
                    {
                        "in": "path",
                        "name": "pipelineName",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "reprocessingId": {
                                            "description": "The ID of the pipeline reprocessing activity that was started.",
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "480": {
                        "description": "ResourceNotFoundException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "481": {
                        "description": "ResourceAlreadyExistsException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "482": {
                        "description": "InvalidRequestException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "483": {
                        "description": "InternalFailureException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "484": {
                        "description": "ServiceUnavailableException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "485": {
                        "description": "ThrottlingException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "endTime": {
                                        "description": "The end time (exclusive) of raw message data that is reprocessed.",
                                        "format": "date-time",
                                        "type": "string"
                                    },
                                    "startTime": {
                                        "description": "The start time (inclusive) of raw message data that is reprocessed.",
                                        "format": "date-time",
                                        "type": "string"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    },
                    "required": true
                }
            }
        },
        "/pipelines/{pipelineName}/reprocessing/{reprocessingId}": {
            "delete": {
                "description": "Cancels the reprocessing of data through the pipeline.",
                "operationId": "CancelPipelineReprocessing",
                "parameters": [
                    {
                        "in": "path",
                        "name": "pipelineName",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "path",
                        "name": "reprocessingId",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {},
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "480": {
                        "description": "ResourceNotFoundException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "481": {
                        "description": "InvalidRequestException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "482": {
                        "description": "InternalFailureException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "483": {
                        "description": "ServiceUnavailableException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "484": {
                        "description": "ThrottlingException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {},
                                "type": "object"
                            }
                        }
                    },
                    "required": true
                }
            },
            "parameters": [
                {
                    "in": "query",
                    "name": "Action",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "query",
                    "name": "Version",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Content-Sha256",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Date",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Algorithm",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Credential",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Security-Token",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Signature",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-SignedHeaders",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                }
            ]
        },
        "/tags": {
            "delete": {
                "description": "Removes the given tags (metadata) from the resource.",
                "operationId": "UntagResource",
                "responses": {
                    "204": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {},
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "480": {
                        "description": "InvalidRequestException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "481": {
                        "description": "InternalFailureException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "482": {
                        "description": "ServiceUnavailableException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "483": {
                        "description": "ThrottlingException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "484": {
                        "description": "LimitExceededException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "485": {
                        "description": "ResourceNotFoundException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {},
                                "type": "object"
                            }
                        }
                    },
                    "required": true
                }
            },
            "get": {
                "description": "Lists the tags (metadata) which you have assigned to the resource.",
                "operationId": "ListTagsForResource",
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "tags": {
                                            "description": "The tags (metadata) which you have assigned to the resource.",
                                            "items": {
                                                "description": "A set of key/value pairs which are used to manage the resource.",
                                                "properties": {
                                                    "key": {
                                                        "description": "The tag's key.",
                                                        "maxLength": 256,
                                                        "minLength": 1,
                                                        "type": "string"
                                                    },
                                                    "value": {
                                                        "description": "The tag's value.",
                                                        "maxLength": 256,
                                                        "minLength": 1,
                                                        "type": "string"
                                                    }
                                                },
                                                "required": [
                                                    "key",
                                                    "value"
                                                ],
                                                "type": "object"
                                            },
                                            "maxItems": 50,
                                            "minItems": 1,
                                            "type": "array"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "480": {
                        "description": "InvalidRequestException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "481": {
                        "description": "InternalFailureException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "482": {
                        "description": "ServiceUnavailableException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "483": {
                        "description": "ThrottlingException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "484": {
                        "description": "LimitExceededException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "485": {
                        "description": "ResourceNotFoundException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {},
                                "type": "object"
                            }
                        }
                    },
                    "required": true
                }
            },
            "parameters": [
                {
                    "in": "query",
                    "name": "Action",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "query",
                    "name": "Version",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Content-Sha256",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Date",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Algorithm",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Credential",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Security-Token",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Signature",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-SignedHeaders",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                }
            ],
            "post": {
                "description": "Adds to or modifies the tags of the given resource. Tags are metadata which can be used to manage a resource.",
                "operationId": "TagResource",
                "responses": {
                    "204": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {},
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "480": {
                        "description": "InvalidRequestException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "481": {
                        "description": "InternalFailureException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "482": {
                        "description": "ServiceUnavailableException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "483": {
                        "description": "ThrottlingException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "484": {
                        "description": "LimitExceededException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "485": {
                        "description": "ResourceNotFoundException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "tags": {
                                        "description": "The new or modified tags for the resource.",
                                        "items": {
                                            "description": "A set of key/value pairs which are used to manage the resource.",
                                            "properties": {
                                                "key": {
                                                    "description": "The tag's key.",
                                                    "maxLength": 256,
                                                    "minLength": 1,
                                                    "type": "string"
                                                },
                                                "value": {
                                                    "description": "The tag's value.",
                                                    "maxLength": 256,
                                                    "minLength": 1,
                                                    "type": "string"
                                                }
                                            },
                                            "required": [
                                                "key",
                                                "value"
                                            ],
                                            "type": "object"
                                        },
                                        "maxItems": 50,
                                        "minItems": 1,
                                        "type": "array"
                                    }
                                },
                                "required": [
                                    "tags"
                                ],
                                "type": "object"
                            }
                        }
                    },
                    "required": true
                }
            }
        }
    },
    "components": {
        "schemas": {
            "ActivityBatchSize": {
                "maximum": 1000,
                "minimum": 1,
                "type": "integer"
            },
            "ActivityName": {
                "maxLength": 128,
                "minLength": 1,
                "type": "string"
            },
            "AddAttributesActivity": {
                "description": "An activity that adds other attributes based on existing attributes in the message.",
                "properties": {
                    "attributes": {
                        "description": "<p>A list of 1-50 \"AttributeNameMapping\" objects that map an existing attribute to a new attribute.</p> <note> <p>The existing attributes remain in the message, so if you want to remove the originals, use \"RemoveAttributeActivity\".</p> </note>",
                        "items": {
                            "properties": {
                                "key": {
                                    "maxLength": 256,
                                    "minLength": 1,
                                    "type": "string"
                                },
                                "value": {
                                    "maxLength": 256,
                                    "minLength": 1,
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        },
                        "maxItems": 50,
                        "minItems": 1,
                        "type": "array"
                    },
                    "name": {
                        "description": "The name of the 'addAttributes' activity.",
                        "maxLength": 128,
                        "minLength": 1,
                        "type": "string"
                    },
                    "next": {
                        "description": "The next activity in the pipeline.",
                        "maxLength": 128,
                        "minLength": 1,
                        "type": "string"
                    }
                },
                "required": [
                    "name",
                    "attributes"
                ],
                "type": "object"
            },
            "AttributeName": {
                "maxLength": 256,
                "minLength": 1,
                "type": "string"
            },
            "AttributeNameMapping": {
                "items": {
                    "properties": {
                        "key": {
                            "maxLength": 256,
                            "minLength": 1,
                            "type": "string"
                        },
                        "value": {
                            "maxLength": 256,
                            "minLength": 1,
                            "type": "string"
                        }
                    },
                    "type": "object"
                },
                "maxItems": 50,
                "minItems": 1,
                "type": "array"
            },
            "AttributeNames": {
                "items": {
                    "maxLength": 256,
                    "minLength": 1,
                    "type": "string"
                },
                "maxItems": 50,
                "minItems": 1,
                "type": "array"
            },
            "BatchPutMessageErrorEntries": {
                "items": {
                    "description": "Contains informations about errors.",
                    "properties": {
                        "errorCode": {
                            "description": "The code associated with the error.",
                            "type": "string"
                        },
                        "errorMessage": {
                            "description": "The message associated with the error.",
                            "type": "string"
                        },
                        "messageId": {
                            "description": "The ID of the message that caused the error. (See the value corresponding to the \"messageId\" key in the message object.)",
                            "maxLength": 128,
                            "minLength": 1,
                            "type": "string"
                        }
                    },
                    "type": "object"
                },
                "type": "array"
            },
            "BatchPutMessageErrorEntry": {
                "description": "Contains informations about errors.",
                "properties": {
                    "errorCode": {
                        "description": "The code associated with the error.",
                        "type": "string"
                    },
                    "errorMessage": {
                        "description": "The message associated with the error.",
                        "type": "string"
                    },
                    "messageId": {
                        "description": "The ID of the message that caused the error. (See the value corresponding to the \"messageId\" key in the message object.)",
                        "maxLength": 128,
                        "minLength": 1,
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "BatchPutMessageRequest": {
                "properties": {
                    "channelName": {
                        "description": "The name of the channel where the messages are sent.",
                        "maxLength": 128,
                        "minLength": 1,
                        "pattern": "^[a-zA-Z0-9_]+$",
                        "type": "string"
                    },
                    "messages": {
                        "description": "<p>The list of messages to be sent. Each message has format: '{ \"messageId\": \"string\", \"payload\": \"string\"}'.</p> <p>Note that the field names of message payloads (data) that you send to AWS IoT Analytics:</p> <ul> <li> <p>Must contain only alphanumeric characters and undescores (_); no other special characters are allowed.</p> </li> <li> <p>Must begin with an alphabetic character or single underscore (_).</p> </li> <li> <p>Cannot contain hyphens (-).</p> </li> <li> <p>In regular expression terms: \"^[A-Za-z_]([A-Za-z0-9]*|[A-Za-z0-9][A-Za-z0-9_]*)$\". </p> </li> <li> <p>Cannot be greater than 255 characters.</p> </li> <li> <p>Are case-insensitive. (Fields named \"foo\" and \"FOO\" in the same payload are considered duplicates.)</p> </li> </ul> <p>For example, {\"temp_01\": 29} or {\"_temp_01\": 29} are valid, but {\"temp-01\": 29}, {\"01_temp\": 29} or {\"__temp_01\": 29} are invalid in message payloads. </p>",
                        "items": {
                            "description": "Information about a message.",
                            "properties": {
                                "messageId": {
                                    "description": "The ID you wish to assign to the message. Each \"messageId\" must be unique within each batch sent.",
                                    "maxLength": 128,
                                    "minLength": 1,
                                    "type": "string"
                                },
                                "payload": {
                                    "description": "The payload of the message. This may be a JSON string or a Base64-encoded string representing binary data (in which case you must decode it by means of a pipeline activity).",
                                    "type": "string"
                                }
                            },
                            "required": [
                                "messageId",
                                "payload"
                            ],
                            "type": "object"
                        },
                        "type": "array"
                    }
                },
                "required": [
                    "channelName",
                    "messages"
                ],
                "type": "object"
            },
            "BatchPutMessageResponse": {
                "properties": {
                    "batchPutMessageErrorEntries": {
                        "description": "A list of any errors encountered when sending the messages to the channel.",
                        "items": {
                            "description": "Contains informations about errors.",
                            "properties": {
                                "errorCode": {
                                    "description": "The code associated with the error.",
                                    "type": "string"
                                },
                                "errorMessage": {
                                    "description": "The message associated with the error.",
                                    "type": "string"
                                },
                                "messageId": {
                                    "description": "The ID of the message that caused the error. (See the value corresponding to the \"messageId\" key in the message object.)",
                                    "maxLength": 128,
                                    "minLength": 1,
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        },
                        "type": "array"
                    }
                },
                "type": "object"
            },
            "CancelPipelineReprocessingRequest": {
                "properties": {},
                "type": "object"
            },
            "CancelPipelineReprocessingResponse": {
                "properties": {},
                "type": "object"
            },
            "Channel": {
                "description": "A collection of data from an MQTT topic. Channels archive the raw, unprocessed messages before publishing the data to a pipeline.",
                "properties": {
                    "arn": {
                        "description": "The ARN of the channel.",
                        "type": "string"
                    },
                    "creationTime": {
                        "description": "When the channel was created.",
                        "format": "date-time",
                        "type": "string"
                    },
                    "lastUpdateTime": {
                        "description": "When the channel was last updated.",
                        "format": "date-time",
                        "type": "string"
                    },
                    "name": {
                        "description": "The name of the channel.",
                        "maxLength": 128,
                        "minLength": 1,
                        "pattern": "^[a-zA-Z0-9_]+$",
                        "type": "string"
                    },
                    "retentionPeriod": {
                        "description": "How long, in days, message data is kept for the channel.",
                        "properties": {
                            "numberOfDays": {
                                "description": "The number of days that message data is kept. The \"unlimited\" parameter must be false.",
                                "minimum": 1,
                                "type": "integer"
                            },
                            "unlimited": {
                                "description": "If true, message data is kept indefinitely.",
                                "type": "boolean"
                            }
                        },
                        "type": "object"
                    },
                    "status": {
                        "description": "The status of the channel.",
                        "enum": [
                            "CREATING",
                            "ACTIVE",
                            "DELETING"
                        ],
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "ChannelActivity": {
                "description": "The activity that determines the source of the messages to be processed.",
                "properties": {
                    "channelName": {
                        "description": "The name of the channel from which the messages are processed.",
                        "maxLength": 128,
                        "minLength": 1,
                        "pattern": "^[a-zA-Z0-9_]+$",
                        "type": "string"
                    },
                    "name": {
                        "description": "The name of the 'channel' activity.",
                        "maxLength": 128,
                        "minLength": 1,
                        "type": "string"
                    },
                    "next": {
                        "description": "The next activity in the pipeline.",
                        "maxLength": 128,
                        "minLength": 1,
                        "type": "string"
                    }
                },
                "required": [
                    "name",
                    "channelName"
                ],
                "type": "object"
            },
            "ChannelArn": {
                "type": "string"
            },
            "ChannelName": {
                "maxLength": 128,
                "minLength": 1,
                "pattern": "^[a-zA-Z0-9_]+$",
                "type": "string"
            },
            "ChannelStatistics": {
                "description": "Statistics information about the channel.",
                "properties": {
                    "size": {
                        "description": "The estimated size of the channel.",
                        "properties": {
                            "estimatedOn": {
                                "description": "The time when the estimate of the size of the resource was made.",
                                "format": "date-time",
                                "type": "string"
                            },
                            "estimatedSizeInBytes": {
                                "description": "The estimated size of the resource in bytes.",
                                "format": "double",
                                "type": "number"
                            }
                        },
                        "type": "object"
                    }
                },
                "type": "object"
            },
            "ChannelStatus": {
                "enum": [
                    "CREATING",
                    "ACTIVE",
                    "DELETING"
                ],
                "type": "string"
            },
            "ChannelSummaries": {
                "items": {
                    "description": "A summary of information about a channel.",
                    "properties": {
                        "channelName": {
                            "description": "The name of the channel.",
                            "maxLength": 128,
                            "minLength": 1,
                            "pattern": "^[a-zA-Z0-9_]+$",
                            "type": "string"
                        },
                        "creationTime": {
                            "description": "When the channel was created.",
                            "format": "date-time",
                            "type": "string"
                        },
                        "lastUpdateTime": {
                            "description": "The last time the channel was updated.",
                            "format": "date-time",
                            "type": "string"
                        },
                        "status": {
                            "description": "The status of the channel.",
                            "enum": [
                                "CREATING",
                                "ACTIVE",
                                "DELETING"
                            ],
                            "type": "string"
                        }
                    },
                    "type": "object"
                },
                "type": "array"
            },
            "ChannelSummary": {
                "description": "A summary of information about a channel.",
                "properties": {
                    "channelName": {
                        "description": "The name of the channel.",
                        "maxLength": 128,
                        "minLength": 1,
                        "pattern": "^[a-zA-Z0-9_]+$",
                        "type": "string"
                    },
                    "creationTime": {
                        "description": "When the channel was created.",
                        "format": "date-time",
                        "type": "string"
                    },
                    "lastUpdateTime": {
                        "description": "The last time the channel was updated.",
                        "format": "date-time",
                        "type": "string"
                    },
                    "status": {
                        "description": "The status of the channel.",
                        "enum": [
                            "CREATING",
                            "ACTIVE",
                            "DELETING"
                        ],
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "ComputeType": {
                "enum": [
                    "ACU_1",
                    "ACU_2"
                ],
                "type": "string"
            },
            "ContainerDatasetAction": {
                "description": "Information needed to run the \"containerAction\" to produce data set contents.",
                "properties": {
                    "executionRoleArn": {
                        "description": "The ARN of the role which gives permission to the system to access needed resources in order to run the \"containerAction\". This includes, at minimum, permission to retrieve the data set contents which are the input to the containerized application.",
                        "maxLength": 2048,
                        "minLength": 20,
                        "type": "string"
                    },
                    "image": {
                        "description": "The ARN of the Docker container stored in your account. The Docker container contains an application and needed support libraries and is used to generate data set contents.",
                        "maxLength": 255,
                        "type": "string"
                    },
                    "resourceConfiguration": {
                        "description": "Configuration of the resource which executes the \"containerAction\".",
                        "properties": {
                            "computeType": {
                                "description": "The type of the compute resource used to execute the \"containerAction\". Possible values are: ACU_1 (vCPU=4, memory=16GiB) or ACU_2 (vCPU=8, memory=32GiB).",
                                "enum": [
                                    "ACU_1",
                                    "ACU_2"
                                ],
                                "type": "string"
                            },
                            "volumeSizeInGB": {
                                "description": "The size (in GB) of the persistent storage available to the resource instance used to execute the \"containerAction\" (min: 1, max: 50).",
                                "maximum": 50,
                                "minimum": 1,
                                "type": "integer"
                            }
                        },
                        "required": [
                            "computeType",
                            "volumeSizeInGB"
                        ],
                        "type": "object"
                    },
                    "variables": {
                        "description": "The values of variables used within the context of the execution of the containerized application (basically, parameters passed to the application). Each variable must have a name and a value given by one of \"stringValue\", \"datasetContentVersionValue\", or \"outputFileUriValue\".",
                        "items": {
                            "description": "An instance of a variable to be passed to the \"containerAction\" execution. Each variable must have a name and a value given by one of \"stringValue\", \"datasetContentVersionValue\", or \"outputFileUriValue\".",
                            "properties": {
                                "datasetContentVersionValue": {
                                    "description": "The value of the variable as a structure that specifies a data set content version.",
                                    "properties": {
                                        "datasetName": {
                                            "description": "The name of the data set whose latest contents are used as input to the notebook or application.",
                                            "maxLength": 128,
                                            "minLength": 1,
                                            "pattern": "^[a-zA-Z0-9_]+$",
                                            "type": "string"
                                        }
                                    },
                                    "required": [
                                        "datasetName"
                                    ],
                                    "type": "object"
                                },
                                "doubleValue": {
                                    "description": "The value of the variable as a double (numeric).",
                                    "format": "double",
                                    "type": "number"
                                },
                                "name": {
                                    "description": "The name of the variable.",
                                    "maxLength": 256,
                                    "minLength": 1,
                                    "type": "string"
                                },
                                "outputFileUriValue": {
                                    "description": "The value of the variable as a structure that specifies an output file URI.",
                                    "properties": {
                                        "fileName": {
                                            "description": "The URI of the location where data set contents are stored, usually the URI of a file in an S3 bucket.",
                                            "pattern": "[\\w\\.-]{1,255}",
                                            "type": "string"
                                        }
                                    },
                                    "required": [
                                        "fileName"
                                    ],
                                    "type": "object"
                                },
                                "stringValue": {
                                    "description": "The value of the variable as a string.",
                                    "maxLength": 1024,
                                    "minLength": 0,
                                    "type": "string"
                                }
                            },
                            "required": [
                                "name"
                            ],
                            "type": "object"
                        },
                        "maxItems": 50,
                        "minItems": 0,
                        "type": "array"
                    }
                },
                "required": [
                    "image",
                    "executionRoleArn",
                    "resourceConfiguration"
                ],
                "type": "object"
            },
            "CreateChannelRequest": {
                "properties": {
                    "channelName": {
                        "description": "The name of the channel.",
                        "maxLength": 128,
                        "minLength": 1,
                        "pattern": "^[a-zA-Z0-9_]+$",
                        "type": "string"
                    },
                    "retentionPeriod": {
                        "description": "How long, in days, message data is kept for the channel.",
                        "properties": {
                            "numberOfDays": {
                                "description": "The number of days that message data is kept. The \"unlimited\" parameter must be false.",
                                "minimum": 1,
                                "type": "integer"
                            },
                            "unlimited": {
                                "description": "If true, message data is kept indefinitely.",
                                "type": "boolean"
                            }
                        },
                        "type": "object"
                    },
                    "tags": {
                        "description": "Metadata which can be used to manage the channel.",
                        "items": {
                            "description": "A set of key/value pairs which are used to manage the resource.",
                            "properties": {
                                "key": {
                                    "description": "The tag's key.",
                                    "maxLength": 256,
                                    "minLength": 1,
                                    "type": "string"
                                },
                                "value": {
                                    "description": "The tag's value.",
                                    "maxLength": 256,
                                    "minLength": 1,
                                    "type": "string"
                                }
                            },
                            "required": [
                                "key",
                                "value"
                            ],
                            "type": "object"
                        },
                        "maxItems": 50,
                        "minItems": 1,
                        "type": "array"
                    }
                },
                "required": [
                    "channelName"
                ],
                "type": "object"
            },
            "CreateChannelResponse": {
                "properties": {
                    "channelArn": {
                        "description": "The ARN of the channel.",
                        "type": "string"
                    },
                    "channelName": {
                        "description": "The name of the channel.",
                        "maxLength": 128,
                        "minLength": 1,
                        "pattern": "^[a-zA-Z0-9_]+$",
                        "type": "string"
                    },
                    "retentionPeriod": {
                        "description": "How long, in days, message data is kept for the channel.",
                        "properties": {
                            "numberOfDays": {
                                "description": "The number of days that message data is kept. The \"unlimited\" parameter must be false.",
                                "minimum": 1,
                                "type": "integer"
                            },
                            "unlimited": {
                                "description": "If true, message data is kept indefinitely.",
                                "type": "boolean"
                            }
                        },
                        "type": "object"
                    }
                },
                "type": "object"
            },
            "CreateDatasetContentRequest": {
                "properties": {},
                "type": "object"
            },
            "CreateDatasetContentResponse": {
                "properties": {
                    "versionId": {
                        "description": "The version ID of the data set contents which are being created.",
                        "maxLength": 36,
                        "minLength": 7,
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "CreateDatasetRequest": {
                "properties": {
                    "actions": {
                        "description": "A list of actions that create the data set contents.",
                        "items": {
                            "description": "A \"DatasetAction\" object that specifies how data set contents are automatically created.",
                            "properties": {
                                "actionName": {
                                    "description": "The name of the data set action by which data set contents are automatically created.",
                                    "maxLength": 128,
                                    "minLength": 1,
                                    "pattern": "^[a-zA-Z0-9_]+$",
                                    "type": "string"
                                },
                                "containerAction": {
                                    "description": "Information which allows the system to run a containerized application in order to create the data set contents. The application must be in a Docker container along with any needed support libraries.",
                                    "properties": {
                                        "executionRoleArn": {
                                            "description": "The ARN of the role which gives permission to the system to access needed resources in order to run the \"containerAction\". This includes, at minimum, permission to retrieve the data set contents which are the input to the containerized application.",
                                            "maxLength": 2048,
                                            "minLength": 20,
                                            "type": "string"
                                        },
                                        "image": {
                                            "description": "The ARN of the Docker container stored in your account. The Docker container contains an application and needed support libraries and is used to generate data set contents.",
                                            "maxLength": 255,
                                            "type": "string"
                                        },
                                        "resourceConfiguration": {
                                            "description": "Configuration of the resource which executes the \"containerAction\".",
                                            "properties": {
                                                "computeType": {
                                                    "description": "The type of the compute resource used to execute the \"containerAction\". Possible values are: ACU_1 (vCPU=4, memory=16GiB) or ACU_2 (vCPU=8, memory=32GiB).",
                                                    "enum": [
                                                        "ACU_1",
                                                        "ACU_2"
                                                    ],
                                                    "type": "string"
                                                },
                                                "volumeSizeInGB": {
                                                    "description": "The size (in GB) of the persistent storage available to the resource instance used to execute the \"containerAction\" (min: 1, max: 50).",
                                                    "maximum": 50,
                                                    "minimum": 1,
                                                    "type": "integer"
                                                }
                                            },
                                            "required": [
                                                "computeType",
                                                "volumeSizeInGB"
                                            ],
                                            "type": "object"
                                        },
                                        "variables": {
                                            "description": "The values of variables used within the context of the execution of the containerized application (basically, parameters passed to the application). Each variable must have a name and a value given by one of \"stringValue\", \"datasetContentVersionValue\", or \"outputFileUriValue\".",
                                            "items": {
                                                "description": "An instance of a variable to be passed to the \"containerAction\" execution. Each variable must have a name and a value given by one of \"stringValue\", \"datasetContentVersionValue\", or \"outputFileUriValue\".",
                                                "properties": {
                                                    "datasetContentVersionValue": {
                                                        "description": "The value of the variable as a structure that specifies a data set content version.",
                                                        "properties": {
                                                            "datasetName": {
                                                                "description": "The name of the data set whose latest contents are used as input to the notebook or application.",
                                                                "maxLength": 128,
                                                                "minLength": 1,
                                                                "pattern": "^[a-zA-Z0-9_]+$",
                                                                "type": "string"
                                                            }
                                                        },
                                                        "required": [
                                                            "datasetName"
                                                        ],
                                                        "type": "object"
                                                    },
                                                    "doubleValue": {
                                                        "description": "The value of the variable as a double (numeric).",
                                                        "format": "double",
                                                        "type": "number"
                                                    },
                                                    "name": {
                                                        "description": "The name of the variable.",
                                                        "maxLength": 256,
                                                        "minLength": 1,
                                                        "type": "string"
                                                    },
                                                    "outputFileUriValue": {
                                                        "description": "The value of the variable as a structure that specifies an output file URI.",
                                                        "properties": {
                                                            "fileName": {
                                                                "description": "The URI of the location where data set contents are stored, usually the URI of a file in an S3 bucket.",
                                                                "pattern": "[\\w\\.-]{1,255}",
                                                                "type": "string"
                                                            }
                                                        },
                                                        "required": [
                                                            "fileName"
                                                        ],
                                                        "type": "object"
                                                    },
                                                    "stringValue": {
                                                        "description": "The value of the variable as a string.",
                                                        "maxLength": 1024,
                                                        "minLength": 0,
                                                        "type": "string"
                                                    }
                                                },
                                                "required": [
                                                    "name"
                                                ],
                                                "type": "object"
                                            },
                                            "maxItems": 50,
                                            "minItems": 0,
                                            "type": "array"
                                        }
                                    },
                                    "required": [
                                        "image",
                                        "executionRoleArn",
                                        "resourceConfiguration"
                                    ],
                                    "type": "object"
                                },
                                "queryAction": {
                                    "description": "An \"SqlQueryDatasetAction\" object that uses an SQL query to automatically create data set contents.",
                                    "properties": {
                                        "filters": {
                                            "description": "Pre-filters applied to message data.",
                                            "items": {
                                                "description": "Information which is used to filter message data, to segregate it according to the time frame in which it arrives.",
                                                "properties": {
                                                    "deltaTime": {
                                                        "description": "Used to limit data to that which has arrived since the last execution of the action.",
                                                        "properties": {
                                                            "offsetSeconds": {
                                                                "description": "The number of seconds of estimated \"in flight\" lag time of message data. When you create data set contents using message data from a specified time frame, some message data may still be \"in flight\" when processing begins, and so will not arrive in time to be processed. Use this field to make allowances for the \"in flight\" time of your message data, so that data not processed from a previous time frame will be included with the next time frame. Without this, missed message data would be excluded from processing during the next time frame as well, because its timestamp places it within the previous time frame.",
                                                                "type": "integer"
                                                            },
                                                            "timeExpression": {
                                                                "description": "An expression by which the time of the message data may be determined. This may be the name of a timestamp field, or a SQL expression which is used to derive the time the message data was generated.",
                                                                "type": "string"
                                                            }
                                                        },
                                                        "required": [
                                                            "offsetSeconds",
                                                            "timeExpression"
                                                        ],
                                                        "type": "object"
                                                    }
                                                },
                                                "type": "object"
                                            },
                                            "maxItems": 1,
                                            "minItems": 0,
                                            "type": "array"
                                        },
                                        "sqlQuery": {
                                            "description": "A SQL query string.",
                                            "type": "string"
                                        }
                                    },
                                    "required": [
                                        "sqlQuery"
                                    ],
                                    "type": "object"
                                }
                            },
                            "type": "object"
                        },
                        "maxItems": 1,
                        "minItems": 1,
                        "type": "array"
                    },
                    "contentDeliveryRules": {
                        "description": "When data set contents are created they are delivered to destinations specified here.",
                        "items": {
                            "description": "When data set contents are created they are delivered to destination specified here.",
                            "properties": {
                                "destination": {
                                    "description": "The destination to which data set contents are delivered.",
                                    "properties": {
                                        "iotEventsDestinationConfiguration": {
                                            "description": "Configuration information for delivery of data set contents to AWS IoT Events.",
                                            "properties": {
                                                "inputName": {
                                                    "description": "The name of the AWS IoT Events input to which data set contents are delivered.",
                                                    "maxLength": 128,
                                                    "minLength": 1,
                                                    "pattern": "^[a-zA-Z][a-zA-Z0-9_]*$",
                                                    "type": "string"
                                                },
                                                "roleArn": {
                                                    "description": "The ARN of the role which grants AWS IoT Analytics permission to deliver data set contents to an AWS IoT Events input.",
                                                    "maxLength": 2048,
                                                    "minLength": 20,
                                                    "type": "string"
                                                }
                                            },
                                            "required": [
                                                "inputName",
                                                "roleArn"
                                            ],
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                },
                                "entryName": {
                                    "description": "The name of the data set content delivery rules entry.",
                                    "type": "string"
                                }
                            },
                            "required": [
                                "destination"
                            ],
                            "type": "object"
                        },
                        "maxItems": 20,
                        "minItems": 0,
                        "type": "array"
                    },
                    "datasetName": {
                        "description": "The name of the data set.",
                        "maxLength": 128,
                        "minLength": 1,
                        "pattern": "^[a-zA-Z0-9_]+$",
                        "type": "string"
                    },
                    "retentionPeriod": {
                        "description": "[Optional] How long, in days, message data is kept for the data set. If not given or set to null, the latest version of the dataset content plus the latest succeeded version (if they are different) are retained for at most 90 days.",
                        "properties": {
                            "numberOfDays": {
                                "description": "The number of days that message data is kept. The \"unlimited\" parameter must be false.",
                                "minimum": 1,
                                "type": "integer"
                            },
                            "unlimited": {
                                "description": "If true, message data is kept indefinitely.",
                                "type": "boolean"
                            }
                        },
                        "type": "object"
                    },
                    "tags": {
                        "description": "Metadata which can be used to manage the data set.",
                        "items": {
                            "description": "A set of key/value pairs which are used to manage the resource.",
                            "properties": {
                                "key": {
                                    "description": "The tag's key.",
                                    "maxLength": 256,
                                    "minLength": 1,
                                    "type": "string"
                                },
                                "value": {
                                    "description": "The tag's value.",
                                    "maxLength": 256,
                                    "minLength": 1,
                                    "type": "string"
                                }
                            },
                            "required": [
                                "key",
                                "value"
                            ],
                            "type": "object"
                        },
                        "maxItems": 50,
                        "minItems": 1,
                        "type": "array"
                    },
                    "triggers": {
                        "description": "A list of triggers. A trigger causes data set contents to be populated at a specified time interval or when another data set's contents are created. The list of triggers can be empty or contain up to five <b>DataSetTrigger</b> objects.",
                        "items": {
                            "description": "The \"DatasetTrigger\" that specifies when the data set is automatically updated.",
                            "properties": {
                                "dataset": {
                                    "description": "The data set whose content creation triggers the creation of this data set's contents.",
                                    "properties": {
                                        "name": {
                                            "description": "The name of the data set whose content generation triggers the new data set content generation.",
                                            "maxLength": 128,
                                            "minLength": 1,
                                            "pattern": "^[a-zA-Z0-9_]+$",
                                            "type": "string"
                                        }
                                    },
                                    "required": [
                                        "name"
                                    ],
                                    "type": "object"
                                },
                                "schedule": {
                                    "description": "The \"Schedule\" when the trigger is initiated.",
                                    "properties": {
                                        "expression": {
                                            "description": "The expression that defines when to trigger an update. For more information, see <a href=\"https://docs.aws.amazon.com/AmazonCloudWatch/latest/events/ScheduledEvents.html\"> Schedule Expressions for Rules</a> in the Amazon CloudWatch documentation.",
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            },
                            "type": "object"
                        },
                        "maxItems": 5,
                        "minItems": 0,
                        "type": "array"
                    }
                },
                "required": [
                    "datasetName",
                    "actions"
                ],
                "type": "object"
            },
            "CreateDatasetResponse": {
                "properties": {
                    "datasetArn": {
                        "description": "The ARN of the data set.",
                        "type": "string"
                    },
                    "datasetName": {
                        "description": "The name of the data set.",
                        "maxLength": 128,
                        "minLength": 1,
                        "pattern": "^[a-zA-Z0-9_]+$",
                        "type": "string"
                    },
                    "retentionPeriod": {
                        "description": "How long, in days, message data is kept for the data set.",
                        "properties": {
                            "numberOfDays": {
                                "description": "The number of days that message data is kept. The \"unlimited\" parameter must be false.",
                                "minimum": 1,
                                "type": "integer"
                            },
                            "unlimited": {
                                "description": "If true, message data is kept indefinitely.",
                                "type": "boolean"
                            }
                        },
                        "type": "object"
                    }
                },
                "type": "object"
            },
            "CreateDatastoreRequest": {
                "properties": {
                    "datastoreName": {
                        "description": "The name of the data store.",
                        "maxLength": 128,
                        "minLength": 1,
                        "pattern": "^[a-zA-Z0-9_]+$",
                        "type": "string"
                    },
                    "retentionPeriod": {
                        "description": "How long, in days, message data is kept for the data store.",
                        "properties": {
                            "numberOfDays": {
                                "description": "The number of days that message data is kept. The \"unlimited\" parameter must be false.",
                                "minimum": 1,
                                "type": "integer"
                            },
                            "unlimited": {
                                "description": "If true, message data is kept indefinitely.",
                                "type": "boolean"
                            }
                        },
                        "type": "object"
                    },
                    "tags": {
                        "description": "Metadata which can be used to manage the data store.",
                        "items": {
                            "description": "A set of key/value pairs which are used to manage the resource.",
                            "properties": {
                                "key": {
                                    "description": "The tag's key.",
                                    "maxLength": 256,
                                    "minLength": 1,
                                    "type": "string"
                                },
                                "value": {
                                    "description": "The tag's value.",
                                    "maxLength": 256,
                                    "minLength": 1,
                                    "type": "string"
                                }
                            },
                            "required": [
                                "key",
                                "value"
                            ],
                            "type": "object"
                        },
                        "maxItems": 50,
                        "minItems": 1,
                        "type": "array"
                    }
                },
                "required": [
                    "datastoreName"
                ],
                "type": "object"
            },
            "CreateDatastoreResponse": {
                "properties": {
                    "datastoreArn": {
                        "description": "The ARN of the data store.",
                        "type": "string"
                    },
                    "datastoreName": {
                        "description": "The name of the data store.",
                        "maxLength": 128,
                        "minLength": 1,
                        "pattern": "^[a-zA-Z0-9_]+$",
                        "type": "string"
                    },
                    "retentionPeriod": {
                        "description": "How long, in days, message data is kept for the data store.",
                        "properties": {
                            "numberOfDays": {
                                "description": "The number of days that message data is kept. The \"unlimited\" parameter must be false.",
                                "minimum": 1,
                                "type": "integer"
                            },
                            "unlimited": {
                                "description": "If true, message data is kept indefinitely.",
                                "type": "boolean"
                            }
                        },
                        "type": "object"
                    }
                },
                "type": "object"
            },
            "CreatePipelineRequest": {
                "properties": {
                    "pipelineActivities": {
                        "description": "<p>A list of pipeline activities.</p> <p>The list can be 1-25 <b>PipelineActivity</b> objects. Activities perform transformations on your messages, such as removing, renaming, or adding message attributes; filtering messages based on attribute values; invoking your Lambda functions on messages for advanced processing; or performing mathematical transformations to normalize device data.</p>",
                        "items": {
                            "description": "An activity that performs a transformation on a message.",
                            "properties": {
                                "addAttributes": {
                                    "description": "Adds other attributes based on existing attributes in the message.",
                                    "properties": {
                                        "attributes": {
                                            "description": "<p>A list of 1-50 \"AttributeNameMapping\" objects that map an existing attribute to a new attribute.</p> <note> <p>The existing attributes remain in the message, so if you want to remove the originals, use \"RemoveAttributeActivity\".</p> </note>",
                                            "items": {
                                                "properties": {
                                                    "key": {
                                                        "maxLength": 256,
                                                        "minLength": 1,
                                                        "type": "string"
                                                    },
                                                    "value": {
                                                        "maxLength": 256,
                                                        "minLength": 1,
                                                        "type": "string"
                                                    }
                                                },
                                                "type": "object"
                                            },
                                            "maxItems": 50,
                                            "minItems": 1,
                                            "type": "array"
                                        },
                                        "name": {
                                            "description": "The name of the 'addAttributes' activity.",
                                            "maxLength": 128,
                                            "minLength": 1,
                                            "type": "string"
                                        },
                                        "next": {
                                            "description": "The next activity in the pipeline.",
                                            "maxLength": 128,
                                            "minLength": 1,
                                            "type": "string"
                                        }
                                    },
                                    "required": [
                                        "name",
                                        "attributes"
                                    ],
                                    "type": "object"
                                },
                                "channel": {
                                    "description": "Determines the source of the messages to be processed.",
                                    "properties": {
                                        "channelName": {
                                            "description": "The name of the channel from which the messages are processed.",
                                            "maxLength": 128,
                                            "minLength": 1,
                                            "pattern": "^[a-zA-Z0-9_]+$",
                                            "type": "string"
                                        },
                                        "name": {
                                            "description": "The name of the 'channel' activity.",
                                            "maxLength": 128,
                                            "minLength": 1,
                                            "type": "string"
                                        },
                                        "next": {
                                            "description": "The next activity in the pipeline.",
                                            "maxLength": 128,
                                            "minLength": 1,
                                            "type": "string"
                                        }
                                    },
                                    "required": [
                                        "name",
                                        "channelName"
                                    ],
                                    "type": "object"
                                },
                                "datastore": {
                                    "description": "Specifies where to store the processed message data.",
                                    "properties": {
                                        "datastoreName": {
                                            "description": "The name of the data store where processed messages are stored.",
                                            "maxLength": 128,
                                            "minLength": 1,
                                            "pattern": "^[a-zA-Z0-9_]+$",
                                            "type": "string"
                                        },
                                        "name": {
                                            "description": "The name of the 'datastore' activity.",
                                            "maxLength": 128,
                                            "minLength": 1,
                                            "type": "string"
                                        }
                                    },
                                    "required": [
                                        "name",
                                        "datastoreName"
                                    ],
                                    "type": "object"
                                },
                                "deviceRegistryEnrich": {
                                    "description": "Adds data from the AWS IoT device registry to your message.",
                                    "properties": {
                                        "attribute": {
                                            "description": "The name of the attribute that is added to the message.",
                                            "maxLength": 256,
                                            "minLength": 1,
                                            "type": "string"
                                        },
                                        "name": {
                                            "description": "The name of the 'deviceRegistryEnrich' activity.",
                                            "maxLength": 128,
                                            "minLength": 1,
                                            "type": "string"
                                        },
                                        "next": {
                                            "description": "The next activity in the pipeline.",
                                            "maxLength": 128,
                                            "minLength": 1,
                                            "type": "string"
                                        },
                                        "roleArn": {
                                            "description": "The ARN of the role that allows access to the device's registry information.",
                                            "maxLength": 2048,
                                            "minLength": 20,
                                            "type": "string"
                                        },
                                        "thingName": {
                                            "description": "The name of the IoT device whose registry information is added to the message.",
                                            "maxLength": 256,
                                            "minLength": 1,
                                            "type": "string"
                                        }
                                    },
                                    "required": [
                                        "name",
                                        "attribute",
                                        "thingName",
                                        "roleArn"
                                    ],
                                    "type": "object"
                                },
                                "deviceShadowEnrich": {
                                    "description": "Adds information from the AWS IoT Device Shadows service to a message.",
                                    "properties": {
                                        "attribute": {
                                            "description": "The name of the attribute that is added to the message.",
                                            "maxLength": 256,
                                            "minLength": 1,
                                            "type": "string"
                                        },
                                        "name": {
                                            "description": "The name of the 'deviceShadowEnrich' activity.",
                                            "maxLength": 128,
                                            "minLength": 1,
                                            "type": "string"
                                        },
                                        "next": {
                                            "description": "The next activity in the pipeline.",
                                            "maxLength": 128,
                                            "minLength": 1,
                                            "type": "string"
                                        },
                                        "roleArn": {
                                            "description": "The ARN of the role that allows access to the device's shadow.",
                                            "maxLength": 2048,
                                            "minLength": 20,
                                            "type": "string"
                                        },
                                        "thingName": {
                                            "description": "The name of the IoT device whose shadow information is added to the message.",
                                            "maxLength": 256,
                                            "minLength": 1,
                                            "type": "string"
                                        }
                                    },
                                    "required": [
                                        "name",
                                        "attribute",
                                        "thingName",
                                        "roleArn"
                                    ],
                                    "type": "object"
                                },
                                "filter": {
                                    "description": "Filters a message based on its attributes.",
                                    "properties": {
                                        "filter": {
                                            "description": "An expression that looks like a SQL WHERE clause that must return a Boolean value.",
                                            "maxLength": 256,
                                            "minLength": 1,
                                            "type": "string"
                                        },
                                        "name": {
                                            "description": "The name of the 'filter' activity.",
                                            "maxLength": 128,
                                            "minLength": 1,
                                            "type": "string"
                                        },
                                        "next": {
                                            "description": "The next activity in the pipeline.",
                                            "maxLength": 128,
                                            "minLength": 1,
                                            "type": "string"
                                        }
                                    },
                                    "required": [
                                        "name",
                                        "filter"
                                    ],
                                    "type": "object"
                                },
                                "lambda": {
                                    "description": "Runs a Lambda function to modify the message.",
                                    "properties": {
                                        "batchSize": {
                                            "description": "<p>The number of messages passed to the Lambda function for processing.</p> <p>The AWS Lambda function must be able to process all of these messages within five minutes, which is the maximum timeout duration for Lambda functions.</p>",
                                            "maximum": 1000,
                                            "minimum": 1,
                                            "type": "integer"
                                        },
                                        "lambdaName": {
                                            "description": "The name of the Lambda function that is run on the message.",
                                            "maxLength": 64,
                                            "minLength": 1,
                                            "pattern": "^[a-zA-Z0-9_-]+$",
                                            "type": "string"
                                        },
                                        "name": {
                                            "description": "The name of the 'lambda' activity.",
                                            "maxLength": 128,
                                            "minLength": 1,
                                            "type": "string"
                                        },
                                        "next": {
                                            "description": "The next activity in the pipeline.",
                                            "maxLength": 128,
                                            "minLength": 1,
                                            "type": "string"
                                        }
                                    },
                                    "required": [
                                        "name",
                                        "lambdaName",
                                        "batchSize"
                                    ],
                                    "type": "object"
                                },
                                "math": {
                                    "description": "Computes an arithmetic expression using the message's attributes and adds it to the message.",
                                    "properties": {
                                        "attribute": {
                                            "description": "The name of the attribute that contains the result of the math operation.",
                                            "maxLength": 256,
                                            "minLength": 1,
                                            "type": "string"
                                        },
                                        "math": {
                                            "description": "An expression that uses one or more existing attributes and must return an integer value.",
                                            "maxLength": 256,
                                            "minLength": 1,
                                            "type": "string"
                                        },
                                        "name": {
                                            "description": "The name of the 'math' activity.",
                                            "maxLength": 128,
                                            "minLength": 1,
                                            "type": "string"
                                        },
                                        "next": {
                                            "description": "The next activity in the pipeline.",
                                            "maxLength": 128,
                                            "minLength": 1,
                                            "type": "string"
                                        }
                                    },
                                    "required": [
                                        "name",
                                        "attribute",
                                        "math"
                                    ],
                                    "type": "object"
                                },
                                "removeAttributes": {
                                    "description": "Removes attributes from a message.",
                                    "properties": {
                                        "attributes": {
                                            "description": "A list of 1-50 attributes to remove from the message.",
                                            "items": {
                                                "maxLength": 256,
                                                "minLength": 1,
                                                "type": "string"
                                            },
                                            "maxItems": 50,
                                            "minItems": 1,
                                            "type": "array"
                                        },
                                        "name": {
                                            "description": "The name of the 'removeAttributes' activity.",
                                            "maxLength": 128,
                                            "minLength": 1,
                                            "type": "string"
                                        },
                                        "next": {
                                            "description": "The next activity in the pipeline.",
                                            "maxLength": 128,
                                            "minLength": 1,
                                            "type": "string"
                                        }
                                    },
                                    "required": [
                                        "name",
                                        "attributes"
                                    ],
                                    "type": "object"
                                },
                                "selectAttributes": {
                                    "description": "Creates a new message using only the specified attributes from the original message. ",
                                    "properties": {
                                        "attributes": {
                                            "description": "A list of the attributes to select from the message.",
                                            "items": {
                                                "maxLength": 256,
                                                "minLength": 1,
                                                "type": "string"
                                            },
                                            "maxItems": 50,
                                            "minItems": 1,
                                            "type": "array"
                                        },
                                        "name": {
                                            "description": "The name of the 'selectAttributes' activity.",
                                            "maxLength": 128,
                                            "minLength": 1,
                                            "type": "string"
                                        },
                                        "next": {
                                            "description": "The next activity in the pipeline.",
                                            "maxLength": 128,
                                            "minLength": 1,
                                            "type": "string"
                                        }
                                    },
                                    "required": [
                                        "name",
                                        "attributes"
                                    ],
                                    "type": "object"
                                }
                            },
                            "type": "object"
                        },
                        "maxItems": 25,
                        "minItems": 1,
                        "type": "array"
                    },
                    "pipelineName": {
                        "description": "The name of the pipeline.",
                        "maxLength": 128,
                        "minLength": 1,
                        "pattern": "^[a-zA-Z0-9_]+$",
                        "type": "string"
                    },
                    "tags": {
                        "description": "Metadata which can be used to manage the pipeline.",
                        "items": {
                            "description": "A set of key/value pairs which are used to manage the resource.",
                            "properties": {
                                "key": {
                                    "description": "The tag's key.",
                                    "maxLength": 256,
                                    "minLength": 1,
                                    "type": "string"
                                },
                                "value": {
                                    "description": "The tag's value.",
                                    "maxLength": 256,
                                    "minLength": 1,
                                    "type": "string"
                                }
                            },
                            "required": [
                                "key",
                                "value"
                            ],
                            "type": "object"
                        },
                        "maxItems": 50,
                        "minItems": 1,
                        "type": "array"
                    }
                },
                "required": [
                    "pipelineName",
                    "pipelineActivities"
                ],
                "type": "object"
            },
            "CreatePipelineResponse": {
                "properties": {
                    "pipelineArn": {
                        "description": "The ARN of the pipeline.",
                        "type": "string"
                    },
                    "pipelineName": {
                        "description": "The name of the pipeline.",
                        "maxLength": 128,
                        "minLength": 1,
                        "pattern": "^[a-zA-Z0-9_]+$",
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "Dataset": {
                "description": "Information about a data set.",
                "properties": {
                    "actions": {
                        "description": "The \"DatasetAction\" objects that automatically create the data set contents.",
                        "items": {
                            "description": "A \"DatasetAction\" object that specifies how data set contents are automatically created.",
                            "properties": {
                                "actionName": {
                                    "description": "The name of the data set action by which data set contents are automatically created.",
                                    "maxLength": 128,
                                    "minLength": 1,
                                    "pattern": "^[a-zA-Z0-9_]+$",
                                    "type": "string"
                                },
                                "containerAction": {
                                    "description": "Information which allows the system to run a containerized application in order to create the data set contents. The application must be in a Docker container along with any needed support libraries.",
                                    "properties": {
                                        "executionRoleArn": {
                                            "description": "The ARN of the role which gives permission to the system to access needed resources in order to run the \"containerAction\". This includes, at minimum, permission to retrieve the data set contents which are the input to the containerized application.",
                                            "maxLength": 2048,
                                            "minLength": 20,
                                            "type": "string"
                                        },
                                        "image": {
                                            "description": "The ARN of the Docker container stored in your account. The Docker container contains an application and needed support libraries and is used to generate data set contents.",
                                            "maxLength": 255,
                                            "type": "string"
                                        },
                                        "resourceConfiguration": {
                                            "description": "Configuration of the resource which executes the \"containerAction\".",
                                            "properties": {
                                                "computeType": {
                                                    "description": "The type of the compute resource used to execute the \"containerAction\". Possible values are: ACU_1 (vCPU=4, memory=16GiB) or ACU_2 (vCPU=8, memory=32GiB).",
                                                    "enum": [
                                                        "ACU_1",
                                                        "ACU_2"
                                                    ],
                                                    "type": "string"
                                                },
                                                "volumeSizeInGB": {
                                                    "description": "The size (in GB) of the persistent storage available to the resource instance used to execute the \"containerAction\" (min: 1, max: 50).",
                                                    "maximum": 50,
                                                    "minimum": 1,
                                                    "type": "integer"
                                                }
                                            },
                                            "required": [
                                                "computeType",
                                                "volumeSizeInGB"
                                            ],
                                            "type": "object"
                                        },
                                        "variables": {
                                            "description": "The values of variables used within the context of the execution of the containerized application (basically, parameters passed to the application). Each variable must have a name and a value given by one of \"stringValue\", \"datasetContentVersionValue\", or \"outputFileUriValue\".",
                                            "items": {
                                                "description": "An instance of a variable to be passed to the \"containerAction\" execution. Each variable must have a name and a value given by one of \"stringValue\", \"datasetContentVersionValue\", or \"outputFileUriValue\".",
                                                "properties": {
                                                    "datasetContentVersionValue": {
                                                        "description": "The value of the variable as a structure that specifies a data set content version.",
                                                        "properties": {
                                                            "datasetName": {
                                                                "description": "The name of the data set whose latest contents are used as input to the notebook or application.",
                                                                "maxLength": 128,
                                                                "minLength": 1,
                                                                "pattern": "^[a-zA-Z0-9_]+$",
                                                                "type": "string"
                                                            }
                                                        },
                                                        "required": [
                                                            "datasetName"
                                                        ],
                                                        "type": "object"
                                                    },
                                                    "doubleValue": {
                                                        "description": "The value of the variable as a double (numeric).",
                                                        "format": "double",
                                                        "type": "number"
                                                    },
                                                    "name": {
                                                        "description": "The name of the variable.",
                                                        "maxLength": 256,
                                                        "minLength": 1,
                                                        "type": "string"
                                                    },
                                                    "outputFileUriValue": {
                                                        "description": "The value of the variable as a structure that specifies an output file URI.",
                                                        "properties": {
                                                            "fileName": {
                                                                "description": "The URI of the location where data set contents are stored, usually the URI of a file in an S3 bucket.",
                                                                "pattern": "[\\w\\.-]{1,255}",
                                                                "type": "string"
                                                            }
                                                        },
                                                        "required": [
                                                            "fileName"
                                                        ],
                                                        "type": "object"
                                                    },
                                                    "stringValue": {
                                                        "description": "The value of the variable as a string.",
                                                        "maxLength": 1024,
                                                        "minLength": 0,
                                                        "type": "string"
                                                    }
                                                },
                                                "required": [
                                                    "name"
                                                ],
                                                "type": "object"
                                            },
                                            "maxItems": 50,
                                            "minItems": 0,
                                            "type": "array"
                                        }
                                    },
                                    "required": [
                                        "image",
                                        "executionRoleArn",
                                        "resourceConfiguration"
                                    ],
                                    "type": "object"
                                },
                                "queryAction": {
                                    "description": "An \"SqlQueryDatasetAction\" object that uses an SQL query to automatically create data set contents.",
                                    "properties": {
                                        "filters": {
                                            "description": "Pre-filters applied to message data.",
                                            "items": {
                                                "description": "Information which is used to filter message data, to segregate it according to the time frame in which it arrives.",
                                                "properties": {
                                                    "deltaTime": {
                                                        "description": "Used to limit data to that which has arrived since the last execution of the action.",
                                                        "properties": {
                                                            "offsetSeconds": {
                                                                "description": "The number of seconds of estimated \"in flight\" lag time of message data. When you create data set contents using message data from a specified time frame, some message data may still be \"in flight\" when processing begins, and so will not arrive in time to be processed. Use this field to make allowances for the \"in flight\" time of your message data, so that data not processed from a previous time frame will be included with the next time frame. Without this, missed message data would be excluded from processing during the next time frame as well, because its timestamp places it within the previous time frame.",
                                                                "type": "integer"
                                                            },
                                                            "timeExpression": {
                                                                "description": "An expression by which the time of the message data may be determined. This may be the name of a timestamp field, or a SQL expression which is used to derive the time the message data was generated.",
                                                                "type": "string"
                                                            }
                                                        },
                                                        "required": [
                                                            "offsetSeconds",
                                                            "timeExpression"
                                                        ],
                                                        "type": "object"
                                                    }
                                                },
                                                "type": "object"
                                            },
                                            "maxItems": 1,
                                            "minItems": 0,
                                            "type": "array"
                                        },
                                        "sqlQuery": {
                                            "description": "A SQL query string.",
                                            "type": "string"
                                        }
                                    },
                                    "required": [
                                        "sqlQuery"
                                    ],
                                    "type": "object"
                                }
                            },
                            "type": "object"
                        },
                        "maxItems": 1,
                        "minItems": 1,
                        "type": "array"
                    },
                    "arn": {
                        "description": "The ARN of the data set.",
                        "type": "string"
                    },
                    "contentDeliveryRules": {
                        "description": "When data set contents are created they are delivered to destinations specified here.",
                        "items": {
                            "description": "When data set contents are created they are delivered to destination specified here.",
                            "properties": {
                                "destination": {
                                    "description": "The destination to which data set contents are delivered.",
                                    "properties": {
                                        "iotEventsDestinationConfiguration": {
                                            "description": "Configuration information for delivery of data set contents to AWS IoT Events.",
                                            "properties": {
                                                "inputName": {
                                                    "description": "The name of the AWS IoT Events input to which data set contents are delivered.",
                                                    "maxLength": 128,
                                                    "minLength": 1,
                                                    "pattern": "^[a-zA-Z][a-zA-Z0-9_]*$",
                                                    "type": "string"
                                                },
                                                "roleArn": {
                                                    "description": "The ARN of the role which grants AWS IoT Analytics permission to deliver data set contents to an AWS IoT Events input.",
                                                    "maxLength": 2048,
                                                    "minLength": 20,
                                                    "type": "string"
                                                }
                                            },
                                            "required": [
                                                "inputName",
                                                "roleArn"
                                            ],
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                },
                                "entryName": {
                                    "description": "The name of the data set content delivery rules entry.",
                                    "type": "string"
                                }
                            },
                            "required": [
                                "destination"
                            ],
                            "type": "object"
                        },
                        "maxItems": 20,
                        "minItems": 0,
                        "type": "array"
                    },
                    "creationTime": {
                        "description": "When the data set was created.",
                        "format": "date-time",
                        "type": "string"
                    },
                    "lastUpdateTime": {
                        "description": "The last time the data set was updated.",
                        "format": "date-time",
                        "type": "string"
                    },
                    "name": {
                        "description": "The name of the data set.",
                        "maxLength": 128,
                        "minLength": 1,
                        "pattern": "^[a-zA-Z0-9_]+$",
                        "type": "string"
                    },
                    "retentionPeriod": {
                        "description": "[Optional] How long, in days, message data is kept for the data set.",
                        "properties": {
                            "numberOfDays": {
                                "description": "The number of days that message data is kept. The \"unlimited\" parameter must be false.",
                                "minimum": 1,
                                "type": "integer"
                            },
                            "unlimited": {
                                "description": "If true, message data is kept indefinitely.",
                                "type": "boolean"
                            }
                        },
                        "type": "object"
                    },
                    "status": {
                        "description": "The status of the data set.",
                        "enum": [
                            "CREATING",
                            "ACTIVE",
                            "DELETING"
                        ],
                        "type": "string"
                    },
                    "triggers": {
                        "description": "The \"DatasetTrigger\" objects that specify when the data set is automatically updated.",
                        "items": {
                            "description": "The \"DatasetTrigger\" that specifies when the data set is automatically updated.",
                            "properties": {
                                "dataset": {
                                    "description": "The data set whose content creation triggers the creation of this data set's contents.",
                                    "properties": {
                                        "name": {
                                            "description": "The name of the data set whose content generation triggers the new data set content generation.",
                                            "maxLength": 128,
                                            "minLength": 1,
                                            "pattern": "^[a-zA-Z0-9_]+$",
                                            "type": "string"
                                        }
                                    },
                                    "required": [
                                        "name"
                                    ],
                                    "type": "object"
                                },
                                "schedule": {
                                    "description": "The \"Schedule\" when the trigger is initiated.",
                                    "properties": {
                                        "expression": {
                                            "description": "The expression that defines when to trigger an update. For more information, see <a href=\"https://docs.aws.amazon.com/AmazonCloudWatch/latest/events/ScheduledEvents.html\"> Schedule Expressions for Rules</a> in the Amazon CloudWatch documentation.",
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            },
                            "type": "object"
                        },
                        "maxItems": 5,
                        "minItems": 0,
                        "type": "array"
                    }
                },
                "type": "object"
            },
            "DatasetAction": {
                "description": "A \"DatasetAction\" object that specifies how data set contents are automatically created.",
                "properties": {
                    "actionName": {
                        "description": "The name of the data set action by which data set contents are automatically created.",
                        "maxLength": 128,
                        "minLength": 1,
                        "pattern": "^[a-zA-Z0-9_]+$",
                        "type": "string"
                    },
                    "containerAction": {
                        "description": "Information which allows the system to run a containerized application in order to create the data set contents. The application must be in a Docker container along with any needed support libraries.",
                        "properties": {
                            "executionRoleArn": {
                                "description": "The ARN of the role which gives permission to the system to access needed resources in order to run the \"containerAction\". This includes, at minimum, permission to retrieve the data set contents which are the input to the containerized application.",
                                "maxLength": 2048,
                                "minLength": 20,
                                "type": "string"
                            },
                            "image": {
                                "description": "The ARN of the Docker container stored in your account. The Docker container contains an application and needed support libraries and is used to generate data set contents.",
                                "maxLength": 255,
                                "type": "string"
                            },
                            "resourceConfiguration": {
                                "description": "Configuration of the resource which executes the \"containerAction\".",
                                "properties": {
                                    "computeType": {
                                        "description": "The type of the compute resource used to execute the \"containerAction\". Possible values are: ACU_1 (vCPU=4, memory=16GiB) or ACU_2 (vCPU=8, memory=32GiB).",
                                        "enum": [
                                            "ACU_1",
                                            "ACU_2"
                                        ],
                                        "type": "string"
                                    },
                                    "volumeSizeInGB": {
                                        "description": "The size (in GB) of the persistent storage available to the resource instance used to execute the \"containerAction\" (min: 1, max: 50).",
                                        "maximum": 50,
                                        "minimum": 1,
                                        "type": "integer"
                                    }
                                },
                                "required": [
                                    "computeType",
                                    "volumeSizeInGB"
                                ],
                                "type": "object"
                            },
                            "variables": {
                                "description": "The values of variables used within the context of the execution of the containerized application (basically, parameters passed to the application). Each variable must have a name and a value given by one of \"stringValue\", \"datasetContentVersionValue\", or \"outputFileUriValue\".",
                                "items": {
                                    "description": "An instance of a variable to be passed to the \"containerAction\" execution. Each variable must have a name and a value given by one of \"stringValue\", \"datasetContentVersionValue\", or \"outputFileUriValue\".",
                                    "properties": {
                                        "datasetContentVersionValue": {
                                            "description": "The value of the variable as a structure that specifies a data set content version.",
                                            "properties": {
                                                "datasetName": {
                                                    "description": "The name of the data set whose latest contents are used as input to the notebook or application.",
                                                    "maxLength": 128,
                                                    "minLength": 1,
                                                    "pattern": "^[a-zA-Z0-9_]+$",
                                                    "type": "string"
                                                }
                                            },
                                            "required": [
                                                "datasetName"
                                            ],
                                            "type": "object"
                                        },
                                        "doubleValue": {
                                            "description": "The value of the variable as a double (numeric).",
                                            "format": "double",
                                            "type": "number"
                                        },
                                        "name": {
                                            "description": "The name of the variable.",
                                            "maxLength": 256,
                                            "minLength": 1,
                                            "type": "string"
                                        },
                                        "outputFileUriValue": {
                                            "description": "The value of the variable as a structure that specifies an output file URI.",
                                            "properties": {
                                                "fileName": {
                                                    "description": "The URI of the location where data set contents are stored, usually the URI of a file in an S3 bucket.",
                                                    "pattern": "[\\w\\.-]{1,255}",
                                                    "type": "string"
                                                }
                                            },
                                            "required": [
                                                "fileName"
                                            ],
                                            "type": "object"
                                        },
                                        "stringValue": {
                                            "description": "The value of the variable as a string.",
                                            "maxLength": 1024,
                                            "minLength": 0,
                                            "type": "string"
                                        }
                                    },
                                    "required": [
                                        "name"
                                    ],
                                    "type": "object"
                                },
                                "maxItems": 50,
                                "minItems": 0,
                                "type": "array"
                            }
                        },
                        "required": [
                            "image",
                            "executionRoleArn",
                            "resourceConfiguration"
                        ],
                        "type": "object"
                    },
                    "queryAction": {
                        "description": "An \"SqlQueryDatasetAction\" object that uses an SQL query to automatically create data set contents.",
                        "properties": {
                            "filters": {
                                "description": "Pre-filters applied to message data.",
                                "items": {
                                    "description": "Information which is used to filter message data, to segregate it according to the time frame in which it arrives.",
                                    "properties": {
                                        "deltaTime": {
                                            "description": "Used to limit data to that which has arrived since the last execution of the action.",
                                            "properties": {
                                                "offsetSeconds": {
                                                    "description": "The number of seconds of estimated \"in flight\" lag time of message data. When you create data set contents using message data from a specified time frame, some message data may still be \"in flight\" when processing begins, and so will not arrive in time to be processed. Use this field to make allowances for the \"in flight\" time of your message data, so that data not processed from a previous time frame will be included with the next time frame. Without this, missed message data would be excluded from processing during the next time frame as well, because its timestamp places it within the previous time frame.",
                                                    "type": "integer"
                                                },
                                                "timeExpression": {
                                                    "description": "An expression by which the time of the message data may be determined. This may be the name of a timestamp field, or a SQL expression which is used to derive the time the message data was generated.",
                                                    "type": "string"
                                                }
                                            },
                                            "required": [
                                                "offsetSeconds",
                                                "timeExpression"
                                            ],
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                },
                                "maxItems": 1,
                                "minItems": 0,
                                "type": "array"
                            },
                            "sqlQuery": {
                                "description": "A SQL query string.",
                                "type": "string"
                            }
                        },
                        "required": [
                            "sqlQuery"
                        ],
                        "type": "object"
                    }
                },
                "type": "object"
            },
            "DatasetActionName": {
                "maxLength": 128,
                "minLength": 1,
                "pattern": "^[a-zA-Z0-9_]+$",
                "type": "string"
            },
            "DatasetActionSummaries": {
                "items": {
                    "description": "<p/>",
                    "properties": {
                        "actionName": {
                            "description": "The name of the action which automatically creates the data set's contents.",
                            "maxLength": 128,
                            "minLength": 1,
                            "pattern": "^[a-zA-Z0-9_]+$",
                            "type": "string"
                        },
                        "actionType": {
                            "description": "The type of action by which the data set's contents are automatically created.",
                            "enum": [
                                "QUERY",
                                "CONTAINER"
                            ],
                            "type": "string"
                        }
                    },
                    "type": "object"
                },
                "maxItems": 1,
                "minItems": 1,
                "type": "array"
            },
            "DatasetActionSummary": {
                "description": "<p/>",
                "properties": {
                    "actionName": {
                        "description": "The name of the action which automatically creates the data set's contents.",
                        "maxLength": 128,
                        "minLength": 1,
                        "pattern": "^[a-zA-Z0-9_]+$",
                        "type": "string"
                    },
                    "actionType": {
                        "description": "The type of action by which the data set's contents are automatically created.",
                        "enum": [
                            "QUERY",
                            "CONTAINER"
                        ],
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "DatasetActionType": {
                "enum": [
                    "QUERY",
                    "CONTAINER"
                ],
                "type": "string"
            },
            "DatasetActions": {
                "items": {
                    "description": "A \"DatasetAction\" object that specifies how data set contents are automatically created.",
                    "properties": {
                        "actionName": {
                            "description": "The name of the data set action by which data set contents are automatically created.",
                            "maxLength": 128,
                            "minLength": 1,
                            "pattern": "^[a-zA-Z0-9_]+$",
                            "type": "string"
                        },
                        "containerAction": {
                            "description": "Information which allows the system to run a containerized application in order to create the data set contents. The application must be in a Docker container along with any needed support libraries.",
                            "properties": {
                                "executionRoleArn": {
                                    "description": "The ARN of the role which gives permission to the system to access needed resources in order to run the \"containerAction\". This includes, at minimum, permission to retrieve the data set contents which are the input to the containerized application.",
                                    "maxLength": 2048,
                                    "minLength": 20,
                                    "type": "string"
                                },
                                "image": {
                                    "description": "The ARN of the Docker container stored in your account. The Docker container contains an application and needed support libraries and is used to generate data set contents.",
                                    "maxLength": 255,
                                    "type": "string"
                                },
                                "resourceConfiguration": {
                                    "description": "Configuration of the resource which executes the \"containerAction\".",
                                    "properties": {
                                        "computeType": {
                                            "description": "The type of the compute resource used to execute the \"containerAction\". Possible values are: ACU_1 (vCPU=4, memory=16GiB) or ACU_2 (vCPU=8, memory=32GiB).",
                                            "enum": [
                                                "ACU_1",
                                                "ACU_2"
                                            ],
                                            "type": "string"
                                        },
                                        "volumeSizeInGB": {
                                            "description": "The size (in GB) of the persistent storage available to the resource instance used to execute the \"containerAction\" (min: 1, max: 50).",
                                            "maximum": 50,
                                            "minimum": 1,
                                            "type": "integer"
                                        }
                                    },
                                    "required": [
                                        "computeType",
                                        "volumeSizeInGB"
                                    ],
                                    "type": "object"
                                },
                                "variables": {
                                    "description": "The values of variables used within the context of the execution of the containerized application (basically, parameters passed to the application). Each variable must have a name and a value given by one of \"stringValue\", \"datasetContentVersionValue\", or \"outputFileUriValue\".",
                                    "items": {
                                        "description": "An instance of a variable to be passed to the \"containerAction\" execution. Each variable must have a name and a value given by one of \"stringValue\", \"datasetContentVersionValue\", or \"outputFileUriValue\".",
                                        "properties": {
                                            "datasetContentVersionValue": {
                                                "description": "The value of the variable as a structure that specifies a data set content version.",
                                                "properties": {
                                                    "datasetName": {
                                                        "description": "The name of the data set whose latest contents are used as input to the notebook or application.",
                                                        "maxLength": 128,
                                                        "minLength": 1,
                                                        "pattern": "^[a-zA-Z0-9_]+$",
                                                        "type": "string"
                                                    }
                                                },
                                                "required": [
                                                    "datasetName"
                                                ],
                                                "type": "object"
                                            },
                                            "doubleValue": {
                                                "description": "The value of the variable as a double (numeric).",
                                                "format": "double",
                                                "type": "number"
                                            },
                                            "name": {
                                                "description": "The name of the variable.",
                                                "maxLength": 256,
                                                "minLength": 1,
                                                "type": "string"
                                            },
                                            "outputFileUriValue": {
                                                "description": "The value of the variable as a structure that specifies an output file URI.",
                                                "properties": {
                                                    "fileName": {
                                                        "description": "The URI of the location where data set contents are stored, usually the URI of a file in an S3 bucket.",
                                                        "pattern": "[\\w\\.-]{1,255}",
                                                        "type": "string"
                                                    }
                                                },
                                                "required": [
                                                    "fileName"
                                                ],
                                                "type": "object"
                                            },
                                            "stringValue": {
                                                "description": "The value of the variable as a string.",
                                                "maxLength": 1024,
                                                "minLength": 0,
                                                "type": "string"
                                            }
                                        },
                                        "required": [
                                            "name"
                                        ],
                                        "type": "object"
                                    },
                                    "maxItems": 50,
                                    "minItems": 0,
                                    "type": "array"
                                }
                            },
                            "required": [
                                "image",
                                "executionRoleArn",
                                "resourceConfiguration"
                            ],
                            "type": "object"
                        },
                        "queryAction": {
                            "description": "An \"SqlQueryDatasetAction\" object that uses an SQL query to automatically create data set contents.",
                            "properties": {
                                "filters": {
                                    "description": "Pre-filters applied to message data.",
                                    "items": {
                                        "description": "Information which is used to filter message data, to segregate it according to the time frame in which it arrives.",
                                        "properties": {
                                            "deltaTime": {
                                                "description": "Used to limit data to that which has arrived since the last execution of the action.",
                                                "properties": {
                                                    "offsetSeconds": {
                                                        "description": "The number of seconds of estimated \"in flight\" lag time of message data. When you create data set contents using message data from a specified time frame, some message data may still be \"in flight\" when processing begins, and so will not arrive in time to be processed. Use this field to make allowances for the \"in flight\" time of your message data, so that data not processed from a previous time frame will be included with the next time frame. Without this, missed message data would be excluded from processing during the next time frame as well, because its timestamp places it within the previous time frame.",
                                                        "type": "integer"
                                                    },
                                                    "timeExpression": {
                                                        "description": "An expression by which the time of the message data may be determined. This may be the name of a timestamp field, or a SQL expression which is used to derive the time the message data was generated.",
                                                        "type": "string"
                                                    }
                                                },
                                                "required": [
                                                    "offsetSeconds",
                                                    "timeExpression"
                                                ],
                                                "type": "object"
                                            }
                                        },
                                        "type": "object"
                                    },
                                    "maxItems": 1,
                                    "minItems": 0,
                                    "type": "array"
                                },
                                "sqlQuery": {
                                    "description": "A SQL query string.",
                                    "type": "string"
                                }
                            },
                            "required": [
                                "sqlQuery"
                            ],
                            "type": "object"
                        }
                    },
                    "type": "object"
                },
                "maxItems": 1,
                "minItems": 1,
                "type": "array"
            },
            "DatasetArn": {
                "type": "string"
            },
            "DatasetContentDeliveryDestination": {
                "description": "The destination to which data set contents are delivered.",
                "properties": {
                    "iotEventsDestinationConfiguration": {
                        "description": "Configuration information for delivery of data set contents to AWS IoT Events.",
                        "properties": {
                            "inputName": {
                                "description": "The name of the AWS IoT Events input to which data set contents are delivered.",
                                "maxLength": 128,
                                "minLength": 1,
                                "pattern": "^[a-zA-Z][a-zA-Z0-9_]*$",
                                "type": "string"
                            },
                            "roleArn": {
                                "description": "The ARN of the role which grants AWS IoT Analytics permission to deliver data set contents to an AWS IoT Events input.",
                                "maxLength": 2048,
                                "minLength": 20,
                                "type": "string"
                            }
                        },
                        "required": [
                            "inputName",
                            "roleArn"
                        ],
                        "type": "object"
                    }
                },
                "type": "object"
            },
            "DatasetContentDeliveryRule": {
                "description": "When data set contents are created they are delivered to destination specified here.",
                "properties": {
                    "destination": {
                        "description": "The destination to which data set contents are delivered.",
                        "properties": {
                            "iotEventsDestinationConfiguration": {
                                "description": "Configuration information for delivery of data set contents to AWS IoT Events.",
                                "properties": {
                                    "inputName": {
                                        "description": "The name of the AWS IoT Events input to which data set contents are delivered.",
                                        "maxLength": 128,
                                        "minLength": 1,
                                        "pattern": "^[a-zA-Z][a-zA-Z0-9_]*$",
                                        "type": "string"
                                    },
                                    "roleArn": {
                                        "description": "The ARN of the role which grants AWS IoT Analytics permission to deliver data set contents to an AWS IoT Events input.",
                                        "maxLength": 2048,
                                        "minLength": 20,
                                        "type": "string"
                                    }
                                },
                                "required": [
                                    "inputName",
                                    "roleArn"
                                ],
                                "type": "object"
                            }
                        },
                        "type": "object"
                    },
                    "entryName": {
                        "description": "The name of the data set content delivery rules entry.",
                        "type": "string"
                    }
                },
                "required": [
                    "destination"
                ],
                "type": "object"
            },
            "DatasetContentDeliveryRules": {
                "items": {
                    "description": "When data set contents are created they are delivered to destination specified here.",
                    "properties": {
                        "destination": {
                            "description": "The destination to which data set contents are delivered.",
                            "properties": {
                                "iotEventsDestinationConfiguration": {
                                    "description": "Configuration information for delivery of data set contents to AWS IoT Events.",
                                    "properties": {
                                        "inputName": {
                                            "description": "The name of the AWS IoT Events input to which data set contents are delivered.",
                                            "maxLength": 128,
                                            "minLength": 1,
                                            "pattern": "^[a-zA-Z][a-zA-Z0-9_]*$",
                                            "type": "string"
                                        },
                                        "roleArn": {
                                            "description": "The ARN of the role which grants AWS IoT Analytics permission to deliver data set contents to an AWS IoT Events input.",
                                            "maxLength": 2048,
                                            "minLength": 20,
                                            "type": "string"
                                        }
                                    },
                                    "required": [
                                        "inputName",
                                        "roleArn"
                                    ],
                                    "type": "object"
                                }
                            },
                            "type": "object"
                        },
                        "entryName": {
                            "description": "The name of the data set content delivery rules entry.",
                            "type": "string"
                        }
                    },
                    "required": [
                        "destination"
                    ],
                    "type": "object"
                },
                "maxItems": 20,
                "minItems": 0,
                "type": "array"
            },
            "DatasetContentState": {
                "enum": [
                    "CREATING",
                    "SUCCEEDED",
                    "FAILED"
                ],
                "type": "string"
            },
            "DatasetContentStatus": {
                "description": "The state of the data set contents and the reason they are in this state.",
                "properties": {
                    "reason": {
                        "description": "The reason the data set contents are in this state.",
                        "type": "string"
                    },
                    "state": {
                        "description": "The state of the data set contents. Can be one of \"READY\", \"CREATING\", \"SUCCEEDED\" or \"FAILED\".",
                        "enum": [
                            "CREATING",
                            "SUCCEEDED",
                            "FAILED"
                        ],
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "DatasetContentSummaries": {
                "items": {
                    "description": "Summary information about data set contents.",
                    "properties": {
                        "creationTime": {
                            "description": "The actual time the creation of the data set contents was started.",
                            "format": "date-time",
                            "type": "string"
                        },
                        "scheduleTime": {
                            "description": "The time the creation of the data set contents was scheduled to start.",
                            "format": "date-time",
                            "type": "string"
                        },
                        "status": {
                            "description": "The status of the data set contents.",
                            "properties": {
                                "reason": {
                                    "description": "The reason the data set contents are in this state.",
                                    "type": "string"
                                },
                                "state": {
                                    "description": "The state of the data set contents. Can be one of \"READY\", \"CREATING\", \"SUCCEEDED\" or \"FAILED\".",
                                    "enum": [
                                        "CREATING",
                                        "SUCCEEDED",
                                        "FAILED"
                                    ],
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        },
                        "version": {
                            "description": "The version of the data set contents.",
                            "maxLength": 36,
                            "minLength": 7,
                            "type": "string"
                        }
                    },
                    "type": "object"
                },
                "type": "array"
            },
            "DatasetContentSummary": {
                "description": "Summary information about data set contents.",
                "properties": {
                    "creationTime": {
                        "description": "The actual time the creation of the data set contents was started.",
                        "format": "date-time",
                        "type": "string"
                    },
                    "scheduleTime": {
                        "description": "The time the creation of the data set contents was scheduled to start.",
                        "format": "date-time",
                        "type": "string"
                    },
                    "status": {
                        "description": "The status of the data set contents.",
                        "properties": {
                            "reason": {
                                "description": "The reason the data set contents are in this state.",
                                "type": "string"
                            },
                            "state": {
                                "description": "The state of the data set contents. Can be one of \"READY\", \"CREATING\", \"SUCCEEDED\" or \"FAILED\".",
                                "enum": [
                                    "CREATING",
                                    "SUCCEEDED",
                                    "FAILED"
                                ],
                                "type": "string"
                            }
                        },
                        "type": "object"
                    },
                    "version": {
                        "description": "The version of the data set contents.",
                        "maxLength": 36,
                        "minLength": 7,
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "DatasetContentVersion": {
                "maxLength": 36,
                "minLength": 7,
                "type": "string"
            },
            "DatasetContentVersionValue": {
                "description": "The data set whose latest contents are used as input to the notebook or application.",
                "properties": {
                    "datasetName": {
                        "description": "The name of the data set whose latest contents are used as input to the notebook or application.",
                        "maxLength": 128,
                        "minLength": 1,
                        "pattern": "^[a-zA-Z0-9_]+$",
                        "type": "string"
                    }
                },
                "required": [
                    "datasetName"
                ],
                "type": "object"
            },
            "DatasetEntries": {
                "items": {
                    "description": "The reference to a data set entry.",
                    "properties": {
                        "dataURI": {
                            "description": "The pre-signed URI of the data set item.",
                            "type": "string"
                        },
                        "entryName": {
                            "description": "The name of the data set item.",
                            "type": "string"
                        }
                    },
                    "type": "object"
                },
                "type": "array"
            },
            "DatasetEntry": {
                "description": "The reference to a data set entry.",
                "properties": {
                    "dataURI": {
                        "description": "The pre-signed URI of the data set item.",
                        "type": "string"
                    },
                    "entryName": {
                        "description": "The name of the data set item.",
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "DatasetName": {
                "maxLength": 128,
                "minLength": 1,
                "pattern": "^[a-zA-Z0-9_]+$",
                "type": "string"
            },
            "DatasetStatus": {
                "enum": [
                    "CREATING",
                    "ACTIVE",
                    "DELETING"
                ],
                "type": "string"
            },
            "DatasetSummaries": {
                "items": {
                    "description": "A summary of information about a data set.",
                    "properties": {
                        "actions": {
                            "description": "A list of \"DataActionSummary\" objects.",
                            "items": {
                                "description": "<p/>",
                                "properties": {
                                    "actionName": {
                                        "description": "The name of the action which automatically creates the data set's contents.",
                                        "maxLength": 128,
                                        "minLength": 1,
                                        "pattern": "^[a-zA-Z0-9_]+$",
                                        "type": "string"
                                    },
                                    "actionType": {
                                        "description": "The type of action by which the data set's contents are automatically created.",
                                        "enum": [
                                            "QUERY",
                                            "CONTAINER"
                                        ],
                                        "type": "string"
                                    }
                                },
                                "type": "object"
                            },
                            "maxItems": 1,
                            "minItems": 1,
                            "type": "array"
                        },
                        "creationTime": {
                            "description": "The time the data set was created.",
                            "format": "date-time",
                            "type": "string"
                        },
                        "datasetName": {
                            "description": "The name of the data set.",
                            "maxLength": 128,
                            "minLength": 1,
                            "pattern": "^[a-zA-Z0-9_]+$",
                            "type": "string"
                        },
                        "lastUpdateTime": {
                            "description": "The last time the data set was updated.",
                            "format": "date-time",
                            "type": "string"
                        },
                        "status": {
                            "description": "The status of the data set.",
                            "enum": [
                                "CREATING",
                                "ACTIVE",
                                "DELETING"
                            ],
                            "type": "string"
                        },
                        "triggers": {
                            "description": "A list of triggers. A trigger causes data set content to be populated at a specified time interval or when another data set is populated. The list of triggers can be empty or contain up to five DataSetTrigger objects",
                            "items": {
                                "description": "The \"DatasetTrigger\" that specifies when the data set is automatically updated.",
                                "properties": {
                                    "dataset": {
                                        "description": "The data set whose content creation triggers the creation of this data set's contents.",
                                        "properties": {
                                            "name": {
                                                "description": "The name of the data set whose content generation triggers the new data set content generation.",
                                                "maxLength": 128,
                                                "minLength": 1,
                                                "pattern": "^[a-zA-Z0-9_]+$",
                                                "type": "string"
                                            }
                                        },
                                        "required": [
                                            "name"
                                        ],
                                        "type": "object"
                                    },
                                    "schedule": {
                                        "description": "The \"Schedule\" when the trigger is initiated.",
                                        "properties": {
                                            "expression": {
                                                "description": "The expression that defines when to trigger an update. For more information, see <a href=\"https://docs.aws.amazon.com/AmazonCloudWatch/latest/events/ScheduledEvents.html\"> Schedule Expressions for Rules</a> in the Amazon CloudWatch documentation.",
                                                "type": "string"
                                            }
                                        },
                                        "type": "object"
                                    }
                                },
                                "type": "object"
                            },
                            "maxItems": 5,
                            "minItems": 0,
                            "type": "array"
                        }
                    },
                    "type": "object"
                },
                "type": "array"
            },
            "DatasetSummary": {
                "description": "A summary of information about a data set.",
                "properties": {
                    "actions": {
                        "description": "A list of \"DataActionSummary\" objects.",
                        "items": {
                            "description": "<p/>",
                            "properties": {
                                "actionName": {
                                    "description": "The name of the action which automatically creates the data set's contents.",
                                    "maxLength": 128,
                                    "minLength": 1,
                                    "pattern": "^[a-zA-Z0-9_]+$",
                                    "type": "string"
                                },
                                "actionType": {
                                    "description": "The type of action by which the data set's contents are automatically created.",
                                    "enum": [
                                        "QUERY",
                                        "CONTAINER"
                                    ],
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        },
                        "maxItems": 1,
                        "minItems": 1,
                        "type": "array"
                    },
                    "creationTime": {
                        "description": "The time the data set was created.",
                        "format": "date-time",
                        "type": "string"
                    },
                    "datasetName": {
                        "description": "The name of the data set.",
                        "maxLength": 128,
                        "minLength": 1,
                        "pattern": "^[a-zA-Z0-9_]+$",
                        "type": "string"
                    },
                    "lastUpdateTime": {
                        "description": "The last time the data set was updated.",
                        "format": "date-time",
                        "type": "string"
                    },
                    "status": {
                        "description": "The status of the data set.",
                        "enum": [
                            "CREATING",
                            "ACTIVE",
                            "DELETING"
                        ],
                        "type": "string"
                    },
                    "triggers": {
                        "description": "A list of triggers. A trigger causes data set content to be populated at a specified time interval or when another data set is populated. The list of triggers can be empty or contain up to five DataSetTrigger objects",
                        "items": {
                            "description": "The \"DatasetTrigger\" that specifies when the data set is automatically updated.",
                            "properties": {
                                "dataset": {
                                    "description": "The data set whose content creation triggers the creation of this data set's contents.",
                                    "properties": {
                                        "name": {
                                            "description": "The name of the data set whose content generation triggers the new data set content generation.",
                                            "maxLength": 128,
                                            "minLength": 1,
                                            "pattern": "^[a-zA-Z0-9_]+$",
                                            "type": "string"
                                        }
                                    },
                                    "required": [
                                        "name"
                                    ],
                                    "type": "object"
                                },
                                "schedule": {
                                    "description": "The \"Schedule\" when the trigger is initiated.",
                                    "properties": {
                                        "expression": {
                                            "description": "The expression that defines when to trigger an update. For more information, see <a href=\"https://docs.aws.amazon.com/AmazonCloudWatch/latest/events/ScheduledEvents.html\"> Schedule Expressions for Rules</a> in the Amazon CloudWatch documentation.",
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            },
                            "type": "object"
                        },
                        "maxItems": 5,
                        "minItems": 0,
                        "type": "array"
                    }
                },
                "type": "object"
            },
            "DatasetTrigger": {
                "description": "The \"DatasetTrigger\" that specifies when the data set is automatically updated.",
                "properties": {
                    "dataset": {
                        "description": "The data set whose content creation triggers the creation of this data set's contents.",
                        "properties": {
                            "name": {
                                "description": "The name of the data set whose content generation triggers the new data set content generation.",
                                "maxLength": 128,
                                "minLength": 1,
                                "pattern": "^[a-zA-Z0-9_]+$",
                                "type": "string"
                            }
                        },
                        "required": [
                            "name"
                        ],
                        "type": "object"
                    },
                    "schedule": {
                        "description": "The \"Schedule\" when the trigger is initiated.",
                        "properties": {
                            "expression": {
                                "description": "The expression that defines when to trigger an update. For more information, see <a href=\"https://docs.aws.amazon.com/AmazonCloudWatch/latest/events/ScheduledEvents.html\"> Schedule Expressions for Rules</a> in the Amazon CloudWatch documentation.",
                                "type": "string"
                            }
                        },
                        "type": "object"
                    }
                },
                "type": "object"
            },
            "DatasetTriggers": {
                "items": {
                    "description": "The \"DatasetTrigger\" that specifies when the data set is automatically updated.",
                    "properties": {
                        "dataset": {
                            "description": "The data set whose content creation triggers the creation of this data set's contents.",
                            "properties": {
                                "name": {
                                    "description": "The name of the data set whose content generation triggers the new data set content generation.",
                                    "maxLength": 128,
                                    "minLength": 1,
                                    "pattern": "^[a-zA-Z0-9_]+$",
                                    "type": "string"
                                }
                            },
                            "required": [
                                "name"
                            ],
                            "type": "object"
                        },
                        "schedule": {
                            "description": "The \"Schedule\" when the trigger is initiated.",
                            "properties": {
                                "expression": {
                                    "description": "The expression that defines when to trigger an update. For more information, see <a href=\"https://docs.aws.amazon.com/AmazonCloudWatch/latest/events/ScheduledEvents.html\"> Schedule Expressions for Rules</a> in the Amazon CloudWatch documentation.",
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        }
                    },
                    "type": "object"
                },
                "maxItems": 5,
                "minItems": 0,
                "type": "array"
            },
            "Datastore": {
                "description": "Information about a data store.",
                "properties": {
                    "arn": {
                        "description": "The ARN of the data store.",
                        "type": "string"
                    },
                    "creationTime": {
                        "description": "When the data store was created.",
                        "format": "date-time",
                        "type": "string"
                    },
                    "lastUpdateTime": {
                        "description": "The last time the data store was updated.",
                        "format": "date-time",
                        "type": "string"
                    },
                    "name": {
                        "description": "The name of the data store.",
                        "maxLength": 128,
                        "minLength": 1,
                        "pattern": "^[a-zA-Z0-9_]+$",
                        "type": "string"
                    },
                    "retentionPeriod": {
                        "description": "How long, in days, message data is kept for the data store.",
                        "properties": {
                            "numberOfDays": {
                                "description": "The number of days that message data is kept. The \"unlimited\" parameter must be false.",
                                "minimum": 1,
                                "type": "integer"
                            },
                            "unlimited": {
                                "description": "If true, message data is kept indefinitely.",
                                "type": "boolean"
                            }
                        },
                        "type": "object"
                    },
                    "status": {
                        "description": "<p>The status of a data store:</p> <dl> <dt>CREATING</dt> <dd> <p>The data store is being created.</p> </dd> <dt>ACTIVE</dt> <dd> <p>The data store has been created and can be used.</p> </dd> <dt>DELETING</dt> <dd> <p>The data store is being deleted.</p> </dd> </dl>",
                        "enum": [
                            "CREATING",
                            "ACTIVE",
                            "DELETING"
                        ],
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "DatastoreActivity": {
                "description": "The 'datastore' activity that specifies where to store the processed data.",
                "properties": {
                    "datastoreName": {
                        "description": "The name of the data store where processed messages are stored.",
                        "maxLength": 128,
                        "minLength": 1,
                        "pattern": "^[a-zA-Z0-9_]+$",
                        "type": "string"
                    },
                    "name": {
                        "description": "The name of the 'datastore' activity.",
                        "maxLength": 128,
                        "minLength": 1,
                        "type": "string"
                    }
                },
                "required": [
                    "name",
                    "datastoreName"
                ],
                "type": "object"
            },
            "DatastoreArn": {
                "type": "string"
            },
            "DatastoreName": {
                "maxLength": 128,
                "minLength": 1,
                "pattern": "^[a-zA-Z0-9_]+$",
                "type": "string"
            },
            "DatastoreStatistics": {
                "description": "Statistical information about the data store.",
                "properties": {
                    "size": {
                        "description": "The estimated size of the data store.",
                        "properties": {
                            "estimatedOn": {
                                "description": "The time when the estimate of the size of the resource was made.",
                                "format": "date-time",
                                "type": "string"
                            },
                            "estimatedSizeInBytes": {
                                "description": "The estimated size of the resource in bytes.",
                                "format": "double",
                                "type": "number"
                            }
                        },
                        "type": "object"
                    }
                },
                "type": "object"
            },
            "DatastoreStatus": {
                "enum": [
                    "CREATING",
                    "ACTIVE",
                    "DELETING"
                ],
                "type": "string"
            },
            "DatastoreSummaries": {
                "items": {
                    "description": "A summary of information about a data store.",
                    "properties": {
                        "creationTime": {
                            "description": "When the data store was created.",
                            "format": "date-time",
                            "type": "string"
                        },
                        "datastoreName": {
                            "description": "The name of the data store.",
                            "maxLength": 128,
                            "minLength": 1,
                            "pattern": "^[a-zA-Z0-9_]+$",
                            "type": "string"
                        },
                        "lastUpdateTime": {
                            "description": "The last time the data store was updated.",
                            "format": "date-time",
                            "type": "string"
                        },
                        "status": {
                            "description": "The status of the data store.",
                            "enum": [
                                "CREATING",
                                "ACTIVE",
                                "DELETING"
                            ],
                            "type": "string"
                        }
                    },
                    "type": "object"
                },
                "type": "array"
            },
            "DatastoreSummary": {
                "description": "A summary of information about a data store.",
                "properties": {
                    "creationTime": {
                        "description": "When the data store was created.",
                        "format": "date-time",
                        "type": "string"
                    },
                    "datastoreName": {
                        "description": "The name of the data store.",
                        "maxLength": 128,
                        "minLength": 1,
                        "pattern": "^[a-zA-Z0-9_]+$",
                        "type": "string"
                    },
                    "lastUpdateTime": {
                        "description": "The last time the data store was updated.",
                        "format": "date-time",
                        "type": "string"
                    },
                    "status": {
                        "description": "The status of the data store.",
                        "enum": [
                            "CREATING",
                            "ACTIVE",
                            "DELETING"
                        ],
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "DeleteChannelRequest": {
                "properties": {},
                "type": "object"
            },
            "DeleteDatasetContentRequest": {
                "properties": {},
                "type": "object"
            },
            "DeleteDatasetRequest": {
                "properties": {},
                "type": "object"
            },
            "DeleteDatastoreRequest": {
                "properties": {},
                "type": "object"
            },
            "DeletePipelineRequest": {
                "properties": {},
                "type": "object"
            },
            "DeltaTime": {
                "description": "Used to limit data to that which has arrived since the last execution of the action.",
                "properties": {
                    "offsetSeconds": {
                        "description": "The number of seconds of estimated \"in flight\" lag time of message data. When you create data set contents using message data from a specified time frame, some message data may still be \"in flight\" when processing begins, and so will not arrive in time to be processed. Use this field to make allowances for the \"in flight\" time of your message data, so that data not processed from a previous time frame will be included with the next time frame. Without this, missed message data would be excluded from processing during the next time frame as well, because its timestamp places it within the previous time frame.",
                        "type": "integer"
                    },
                    "timeExpression": {
                        "description": "An expression by which the time of the message data may be determined. This may be the name of a timestamp field, or a SQL expression which is used to derive the time the message data was generated.",
                        "type": "string"
                    }
                },
                "required": [
                    "offsetSeconds",
                    "timeExpression"
                ],
                "type": "object"
            },
            "DescribeChannelRequest": {
                "properties": {},
                "type": "object"
            },
            "DescribeChannelResponse": {
                "properties": {
                    "channel": {
                        "description": "An object that contains information about the channel.",
                        "properties": {
                            "arn": {
                                "description": "The ARN of the channel.",
                                "type": "string"
                            },
                            "creationTime": {
                                "description": "When the channel was created.",
                                "format": "date-time",
                                "type": "string"
                            },
                            "lastUpdateTime": {
                                "description": "When the channel was last updated.",
                                "format": "date-time",
                                "type": "string"
                            },
                            "name": {
                                "description": "The name of the channel.",
                                "maxLength": 128,
                                "minLength": 1,
                                "pattern": "^[a-zA-Z0-9_]+$",
                                "type": "string"
                            },
                            "retentionPeriod": {
                                "description": "How long, in days, message data is kept for the channel.",
                                "properties": {
                                    "numberOfDays": {
                                        "description": "The number of days that message data is kept. The \"unlimited\" parameter must be false.",
                                        "minimum": 1,
                                        "type": "integer"
                                    },
                                    "unlimited": {
                                        "description": "If true, message data is kept indefinitely.",
                                        "type": "boolean"
                                    }
                                },
                                "type": "object"
                            },
                            "status": {
                                "description": "The status of the channel.",
                                "enum": [
                                    "CREATING",
                                    "ACTIVE",
                                    "DELETING"
                                ],
                                "type": "string"
                            }
                        },
                        "type": "object"
                    },
                    "statistics": {
                        "description": "Statistics about the channel. Included if the 'includeStatistics' parameter is set to true in the request.",
                        "properties": {
                            "size": {
                                "description": "The estimated size of the channel.",
                                "properties": {
                                    "estimatedOn": {
                                        "description": "The time when the estimate of the size of the resource was made.",
                                        "format": "date-time",
                                        "type": "string"
                                    },
                                    "estimatedSizeInBytes": {
                                        "description": "The estimated size of the resource in bytes.",
                                        "format": "double",
                                        "type": "number"
                                    }
                                },
                                "type": "object"
                            }
                        },
                        "type": "object"
                    }
                },
                "type": "object"
            },
            "DescribeDatasetRequest": {
                "properties": {},
                "type": "object"
            },
            "DescribeDatasetResponse": {
                "properties": {
                    "dataset": {
                        "description": "An object that contains information about the data set.",
                        "properties": {
                            "actions": {
                                "description": "The \"DatasetAction\" objects that automatically create the data set contents.",
                                "items": {
                                    "description": "A \"DatasetAction\" object that specifies how data set contents are automatically created.",
                                    "properties": {
                                        "actionName": {
                                            "description": "The name of the data set action by which data set contents are automatically created.",
                                            "maxLength": 128,
                                            "minLength": 1,
                                            "pattern": "^[a-zA-Z0-9_]+$",
                                            "type": "string"
                                        },
                                        "containerAction": {
                                            "description": "Information which allows the system to run a containerized application in order to create the data set contents. The application must be in a Docker container along with any needed support libraries.",
                                            "properties": {
                                                "executionRoleArn": {
                                                    "description": "The ARN of the role which gives permission to the system to access needed resources in order to run the \"containerAction\". This includes, at minimum, permission to retrieve the data set contents which are the input to the containerized application.",
                                                    "maxLength": 2048,
                                                    "minLength": 20,
                                                    "type": "string"
                                                },
                                                "image": {
                                                    "description": "The ARN of the Docker container stored in your account. The Docker container contains an application and needed support libraries and is used to generate data set contents.",
                                                    "maxLength": 255,
                                                    "type": "string"
                                                },
                                                "resourceConfiguration": {
                                                    "description": "Configuration of the resource which executes the \"containerAction\".",
                                                    "properties": {
                                                        "computeType": {
                                                            "description": "The type of the compute resource used to execute the \"containerAction\". Possible values are: ACU_1 (vCPU=4, memory=16GiB) or ACU_2 (vCPU=8, memory=32GiB).",
                                                            "enum": [
                                                                "ACU_1",
                                                                "ACU_2"
                                                            ],
                                                            "type": "string"
                                                        },
                                                        "volumeSizeInGB": {
                                                            "description": "The size (in GB) of the persistent storage available to the resource instance used to execute the \"containerAction\" (min: 1, max: 50).",
                                                            "maximum": 50,
                                                            "minimum": 1,
                                                            "type": "integer"
                                                        }
                                                    },
                                                    "required": [
                                                        "computeType",
                                                        "volumeSizeInGB"
                                                    ],
                                                    "type": "object"
                                                },
                                                "variables": {
                                                    "description": "The values of variables used within the context of the execution of the containerized application (basically, parameters passed to the application). Each variable must have a name and a value given by one of \"stringValue\", \"datasetContentVersionValue\", or \"outputFileUriValue\".",
                                                    "items": {
                                                        "description": "An instance of a variable to be passed to the \"containerAction\" execution. Each variable must have a name and a value given by one of \"stringValue\", \"datasetContentVersionValue\", or \"outputFileUriValue\".",
                                                        "properties": {
                                                            "datasetContentVersionValue": {
                                                                "description": "The value of the variable as a structure that specifies a data set content version.",
                                                                "properties": {
                                                                    "datasetName": {
                                                                        "description": "The name of the data set whose latest contents are used as input to the notebook or application.",
                                                                        "maxLength": 128,
                                                                        "minLength": 1,
                                                                        "pattern": "^[a-zA-Z0-9_]+$",
                                                                        "type": "string"
                                                                    }
                                                                },
                                                                "required": [
                                                                    "datasetName"
                                                                ],
                                                                "type": "object"
                                                            },
                                                            "doubleValue": {
                                                                "description": "The value of the variable as a double (numeric).",
                                                                "format": "double",
                                                                "type": "number"
                                                            },
                                                            "name": {
                                                                "description": "The name of the variable.",
                                                                "maxLength": 256,
                                                                "minLength": 1,
                                                                "type": "string"
                                                            },
                                                            "outputFileUriValue": {
                                                                "description": "The value of the variable as a structure that specifies an output file URI.",
                                                                "properties": {
                                                                    "fileName": {
                                                                        "description": "The URI of the location where data set contents are stored, usually the URI of a file in an S3 bucket.",
                                                                        "pattern": "[\\w\\.-]{1,255}",
                                                                        "type": "string"
                                                                    }
                                                                },
                                                                "required": [
                                                                    "fileName"
                                                                ],
                                                                "type": "object"
                                                            },
                                                            "stringValue": {
                                                                "description": "The value of the variable as a string.",
                                                                "maxLength": 1024,
                                                                "minLength": 0,
                                                                "type": "string"
                                                            }
                                                        },
                                                        "required": [
                                                            "name"
                                                        ],
                                                        "type": "object"
                                                    },
                                                    "maxItems": 50,
                                                    "minItems": 0,
                                                    "type": "array"
                                                }
                                            },
                                            "required": [
                                                "image",
                                                "executionRoleArn",
                                                "resourceConfiguration"
                                            ],
                                            "type": "object"
                                        },
                                        "queryAction": {
                                            "description": "An \"SqlQueryDatasetAction\" object that uses an SQL query to automatically create data set contents.",
                                            "properties": {
                                                "filters": {
                                                    "description": "Pre-filters applied to message data.",
                                                    "items": {
                                                        "description": "Information which is used to filter message data, to segregate it according to the time frame in which it arrives.",
                                                        "properties": {
                                                            "deltaTime": {
                                                                "description": "Used to limit data to that which has arrived since the last execution of the action.",
                                                                "properties": {
                                                                    "offsetSeconds": {
                                                                        "description": "The number of seconds of estimated \"in flight\" lag time of message data. When you create data set contents using message data from a specified time frame, some message data may still be \"in flight\" when processing begins, and so will not arrive in time to be processed. Use this field to make allowances for the \"in flight\" time of your message data, so that data not processed from a previous time frame will be included with the next time frame. Without this, missed message data would be excluded from processing during the next time frame as well, because its timestamp places it within the previous time frame.",
                                                                        "type": "integer"
                                                                    },
                                                                    "timeExpression": {
                                                                        "description": "An expression by which the time of the message data may be determined. This may be the name of a timestamp field, or a SQL expression which is used to derive the time the message data was generated.",
                                                                        "type": "string"
                                                                    }
                                                                },
                                                                "required": [
                                                                    "offsetSeconds",
                                                                    "timeExpression"
                                                                ],
                                                                "type": "object"
                                                            }
                                                        },
                                                        "type": "object"
                                                    },
                                                    "maxItems": 1,
                                                    "minItems": 0,
                                                    "type": "array"
                                                },
                                                "sqlQuery": {
                                                    "description": "A SQL query string.",
                                                    "type": "string"
                                                }
                                            },
                                            "required": [
                                                "sqlQuery"
                                            ],
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                },
                                "maxItems": 1,
                                "minItems": 1,
                                "type": "array"
                            },
                            "arn": {
                                "description": "The ARN of the data set.",
                                "type": "string"
                            },
                            "contentDeliveryRules": {
                                "description": "When data set contents are created they are delivered to destinations specified here.",
                                "items": {
                                    "description": "When data set contents are created they are delivered to destination specified here.",
                                    "properties": {
                                        "destination": {
                                            "description": "The destination to which data set contents are delivered.",
                                            "properties": {
                                                "iotEventsDestinationConfiguration": {
                                                    "description": "Configuration information for delivery of data set contents to AWS IoT Events.",
                                                    "properties": {
                                                        "inputName": {
                                                            "description": "The name of the AWS IoT Events input to which data set contents are delivered.",
                                                            "maxLength": 128,
                                                            "minLength": 1,
                                                            "pattern": "^[a-zA-Z][a-zA-Z0-9_]*$",
                                                            "type": "string"
                                                        },
                                                        "roleArn": {
                                                            "description": "The ARN of the role which grants AWS IoT Analytics permission to deliver data set contents to an AWS IoT Events input.",
                                                            "maxLength": 2048,
                                                            "minLength": 20,
                                                            "type": "string"
                                                        }
                                                    },
                                                    "required": [
                                                        "inputName",
                                                        "roleArn"
                                                    ],
                                                    "type": "object"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "entryName": {
                                            "description": "The name of the data set content delivery rules entry.",
                                            "type": "string"
                                        }
                                    },
                                    "required": [
                                        "destination"
                                    ],
                                    "type": "object"
                                },
                                "maxItems": 20,
                                "minItems": 0,
                                "type": "array"
                            },
                            "creationTime": {
                                "description": "When the data set was created.",
                                "format": "date-time",
                                "type": "string"
                            },
                            "lastUpdateTime": {
                                "description": "The last time the data set was updated.",
                                "format": "date-time",
                                "type": "string"
                            },
                            "name": {
                                "description": "The name of the data set.",
                                "maxLength": 128,
                                "minLength": 1,
                                "pattern": "^[a-zA-Z0-9_]+$",
                                "type": "string"
                            },
                            "retentionPeriod": {
                                "description": "[Optional] How long, in days, message data is kept for the data set.",
                                "properties": {
                                    "numberOfDays": {
                                        "description": "The number of days that message data is kept. The \"unlimited\" parameter must be false.",
                                        "minimum": 1,
                                        "type": "integer"
                                    },
                                    "unlimited": {
                                        "description": "If true, message data is kept indefinitely.",
                                        "type": "boolean"
                                    }
                                },
                                "type": "object"
                            },
                            "status": {
                                "description": "The status of the data set.",
                                "enum": [
                                    "CREATING",
                                    "ACTIVE",
                                    "DELETING"
                                ],
                                "type": "string"
                            },
                            "triggers": {
                                "description": "The \"DatasetTrigger\" objects that specify when the data set is automatically updated.",
                                "items": {
                                    "description": "The \"DatasetTrigger\" that specifies when the data set is automatically updated.",
                                    "properties": {
                                        "dataset": {
                                            "description": "The data set whose content creation triggers the creation of this data set's contents.",
                                            "properties": {
                                                "name": {
                                                    "description": "The name of the data set whose content generation triggers the new data set content generation.",
                                                    "maxLength": 128,
                                                    "minLength": 1,
                                                    "pattern": "^[a-zA-Z0-9_]+$",
                                                    "type": "string"
                                                }
                                            },
                                            "required": [
                                                "name"
                                            ],
                                            "type": "object"
                                        },
                                        "schedule": {
                                            "description": "The \"Schedule\" when the trigger is initiated.",
                                            "properties": {
                                                "expression": {
                                                    "description": "The expression that defines when to trigger an update. For more information, see <a href=\"https://docs.aws.amazon.com/AmazonCloudWatch/latest/events/ScheduledEvents.html\"> Schedule Expressions for Rules</a> in the Amazon CloudWatch documentation.",
                                                    "type": "string"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                },
                                "maxItems": 5,
                                "minItems": 0,
                                "type": "array"
                            }
                        },
                        "type": "object"
                    }
                },
                "type": "object"
            },
            "DescribeDatastoreRequest": {
                "properties": {},
                "type": "object"
            },
            "DescribeDatastoreResponse": {
                "properties": {
                    "datastore": {
                        "description": "Information about the data store.",
                        "properties": {
                            "arn": {
                                "description": "The ARN of the data store.",
                                "type": "string"
                            },
                            "creationTime": {
                                "description": "When the data store was created.",
                                "format": "date-time",
                                "type": "string"
                            },
                            "lastUpdateTime": {
                                "description": "The last time the data store was updated.",
                                "format": "date-time",
                                "type": "string"
                            },
                            "name": {
                                "description": "The name of the data store.",
                                "maxLength": 128,
                                "minLength": 1,
                                "pattern": "^[a-zA-Z0-9_]+$",
                                "type": "string"
                            },
                            "retentionPeriod": {
                                "description": "How long, in days, message data is kept for the data store.",
                                "properties": {
                                    "numberOfDays": {
                                        "description": "The number of days that message data is kept. The \"unlimited\" parameter must be false.",
                                        "minimum": 1,
                                        "type": "integer"
                                    },
                                    "unlimited": {
                                        "description": "If true, message data is kept indefinitely.",
                                        "type": "boolean"
                                    }
                                },
                                "type": "object"
                            },
                            "status": {
                                "description": "<p>The status of a data store:</p> <dl> <dt>CREATING</dt> <dd> <p>The data store is being created.</p> </dd> <dt>ACTIVE</dt> <dd> <p>The data store has been created and can be used.</p> </dd> <dt>DELETING</dt> <dd> <p>The data store is being deleted.</p> </dd> </dl>",
                                "enum": [
                                    "CREATING",
                                    "ACTIVE",
                                    "DELETING"
                                ],
                                "type": "string"
                            }
                        },
                        "type": "object"
                    },
                    "statistics": {
                        "description": "Additional statistical information about the data store. Included if the 'includeStatistics' parameter is set to true in the request.",
                        "properties": {
                            "size": {
                                "description": "The estimated size of the data store.",
                                "properties": {
                                    "estimatedOn": {
                                        "description": "The time when the estimate of the size of the resource was made.",
                                        "format": "date-time",
                                        "type": "string"
                                    },
                                    "estimatedSizeInBytes": {
                                        "description": "The estimated size of the resource in bytes.",
                                        "format": "double",
                                        "type": "number"
                                    }
                                },
                                "type": "object"
                            }
                        },
                        "type": "object"
                    }
                },
                "type": "object"
            },
            "DescribeLoggingOptionsRequest": {
                "properties": {},
                "type": "object"
            },
            "DescribeLoggingOptionsResponse": {
                "properties": {
                    "loggingOptions": {
                        "description": "The current settings of the AWS IoT Analytics logging options.",
                        "properties": {
                            "enabled": {
                                "description": "If true, logging is enabled for AWS IoT Analytics.",
                                "type": "boolean"
                            },
                            "level": {
                                "description": "The logging level. Currently, only \"ERROR\" is supported.",
                                "enum": [
                                    "ERROR"
                                ],
                                "type": "string"
                            },
                            "roleArn": {
                                "description": "The ARN of the role that grants permission to AWS IoT Analytics to perform logging.",
                                "maxLength": 2048,
                                "minLength": 20,
                                "type": "string"
                            }
                        },
                        "required": [
                            "roleArn",
                            "level",
                            "enabled"
                        ],
                        "type": "object"
                    }
                },
                "type": "object"
            },
            "DescribePipelineRequest": {
                "properties": {},
                "type": "object"
            },
            "DescribePipelineResponse": {
                "properties": {
                    "pipeline": {
                        "description": "A \"Pipeline\" object that contains information about the pipeline.",
                        "properties": {
                            "activities": {
                                "description": "The activities that perform transformations on the messages.",
                                "items": {
                                    "description": "An activity that performs a transformation on a message.",
                                    "properties": {
                                        "addAttributes": {
                                            "description": "Adds other attributes based on existing attributes in the message.",
                                            "properties": {
                                                "attributes": {
                                                    "description": "<p>A list of 1-50 \"AttributeNameMapping\" objects that map an existing attribute to a new attribute.</p> <note> <p>The existing attributes remain in the message, so if you want to remove the originals, use \"RemoveAttributeActivity\".</p> </note>",
                                                    "items": {
                                                        "properties": {
                                                            "key": {
                                                                "maxLength": 256,
                                                                "minLength": 1,
                                                                "type": "string"
                                                            },
                                                            "value": {
                                                                "maxLength": 256,
                                                                "minLength": 1,
                                                                "type": "string"
                                                            }
                                                        },
                                                        "type": "object"
                                                    },
                                                    "maxItems": 50,
                                                    "minItems": 1,
                                                    "type": "array"
                                                },
                                                "name": {
                                                    "description": "The name of the 'addAttributes' activity.",
                                                    "maxLength": 128,
                                                    "minLength": 1,
                                                    "type": "string"
                                                },
                                                "next": {
                                                    "description": "The next activity in the pipeline.",
                                                    "maxLength": 128,
                                                    "minLength": 1,
                                                    "type": "string"
                                                }
                                            },
                                            "required": [
                                                "name",
                                                "attributes"
                                            ],
                                            "type": "object"
                                        },
                                        "channel": {
                                            "description": "Determines the source of the messages to be processed.",
                                            "properties": {
                                                "channelName": {
                                                    "description": "The name of the channel from which the messages are processed.",
                                                    "maxLength": 128,
                                                    "minLength": 1,
                                                    "pattern": "^[a-zA-Z0-9_]+$",
                                                    "type": "string"
                                                },
                                                "name": {
                                                    "description": "The name of the 'channel' activity.",
                                                    "maxLength": 128,
                                                    "minLength": 1,
                                                    "type": "string"
                                                },
                                                "next": {
                                                    "description": "The next activity in the pipeline.",
                                                    "maxLength": 128,
                                                    "minLength": 1,
                                                    "type": "string"
                                                }
                                            },
                                            "required": [
                                                "name",
                                                "channelName"
                                            ],
                                            "type": "object"
                                        },
                                        "datastore": {
                                            "description": "Specifies where to store the processed message data.",
                                            "properties": {
                                                "datastoreName": {
                                                    "description": "The name of the data store where processed messages are stored.",
                                                    "maxLength": 128,
                                                    "minLength": 1,
                                                    "pattern": "^[a-zA-Z0-9_]+$",
                                                    "type": "string"
                                                },
                                                "name": {
                                                    "description": "The name of the 'datastore' activity.",
                                                    "maxLength": 128,
                                                    "minLength": 1,
                                                    "type": "string"
                                                }
                                            },
                                            "required": [
                                                "name",
                                                "datastoreName"
                                            ],
                                            "type": "object"
                                        },
                                        "deviceRegistryEnrich": {
                                            "description": "Adds data from the AWS IoT device registry to your message.",
                                            "properties": {
                                                "attribute": {
                                                    "description": "The name of the attribute that is added to the message.",
                                                    "maxLength": 256,
                                                    "minLength": 1,
                                                    "type": "string"
                                                },
                                                "name": {
                                                    "description": "The name of the 'deviceRegistryEnrich' activity.",
                                                    "maxLength": 128,
                                                    "minLength": 1,
                                                    "type": "string"
                                                },
                                                "next": {
                                                    "description": "The next activity in the pipeline.",
                                                    "maxLength": 128,
                                                    "minLength": 1,
                                                    "type": "string"
                                                },
                                                "roleArn": {
                                                    "description": "The ARN of the role that allows access to the device's registry information.",
                                                    "maxLength": 2048,
                                                    "minLength": 20,
                                                    "type": "string"
                                                },
                                                "thingName": {
                                                    "description": "The name of the IoT device whose registry information is added to the message.",
                                                    "maxLength": 256,
                                                    "minLength": 1,
                                                    "type": "string"
                                                }
                                            },
                                            "required": [
                                                "name",
                                                "attribute",
                                                "thingName",
                                                "roleArn"
                                            ],
                                            "type": "object"
                                        },
                                        "deviceShadowEnrich": {
                                            "description": "Adds information from the AWS IoT Device Shadows service to a message.",
                                            "properties": {
                                                "attribute": {
                                                    "description": "The name of the attribute that is added to the message.",
                                                    "maxLength": 256,
                                                    "minLength": 1,
                                                    "type": "string"
                                                },
                                                "name": {
                                                    "description": "The name of the 'deviceShadowEnrich' activity.",
                                                    "maxLength": 128,
                                                    "minLength": 1,
                                                    "type": "string"
                                                },
                                                "next": {
                                                    "description": "The next activity in the pipeline.",
                                                    "maxLength": 128,
                                                    "minLength": 1,
                                                    "type": "string"
                                                },
                                                "roleArn": {
                                                    "description": "The ARN of the role that allows access to the device's shadow.",
                                                    "maxLength": 2048,
                                                    "minLength": 20,
                                                    "type": "string"
                                                },
                                                "thingName": {
                                                    "description": "The name of the IoT device whose shadow information is added to the message.",
                                                    "maxLength": 256,
                                                    "minLength": 1,
                                                    "type": "string"
                                                }
                                            },
                                            "required": [
                                                "name",
                                                "attribute",
                                                "thingName",
                                                "roleArn"
                                            ],
                                            "type": "object"
                                        },
                                        "filter": {
                                            "description": "Filters a message based on its attributes.",
                                            "properties": {
                                                "filter": {
                                                    "description": "An expression that looks like a SQL WHERE clause that must return a Boolean value.",
                                                    "maxLength": 256,
                                                    "minLength": 1,
                                                    "type": "string"
                                                },
                                                "name": {
                                                    "description": "The name of the 'filter' activity.",
                                                    "maxLength": 128,
                                                    "minLength": 1,
                                                    "type": "string"
                                                },
                                                "next": {
                                                    "description": "The next activity in the pipeline.",
                                                    "maxLength": 128,
                                                    "minLength": 1,
                                                    "type": "string"
                                                }
                                            },
                                            "required": [
                                                "name",
                                                "filter"
                                            ],
                                            "type": "object"
                                        },
                                        "lambda": {
                                            "description": "Runs a Lambda function to modify the message.",
                                            "properties": {
                                                "batchSize": {
                                                    "description": "<p>The number of messages passed to the Lambda function for processing.</p> <p>The AWS Lambda function must be able to process all of these messages within five minutes, which is the maximum timeout duration for Lambda functions.</p>",
                                                    "maximum": 1000,
                                                    "minimum": 1,
                                                    "type": "integer"
                                                },
                                                "lambdaName": {
                                                    "description": "The name of the Lambda function that is run on the message.",
                                                    "maxLength": 64,
                                                    "minLength": 1,
                                                    "pattern": "^[a-zA-Z0-9_-]+$",
                                                    "type": "string"
                                                },
                                                "name": {
                                                    "description": "The name of the 'lambda' activity.",
                                                    "maxLength": 128,
                                                    "minLength": 1,
                                                    "type": "string"
                                                },
                                                "next": {
                                                    "description": "The next activity in the pipeline.",
                                                    "maxLength": 128,
                                                    "minLength": 1,
                                                    "type": "string"
                                                }
                                            },
                                            "required": [
                                                "name",
                                                "lambdaName",
                                                "batchSize"
                                            ],
                                            "type": "object"
                                        },
                                        "math": {
                                            "description": "Computes an arithmetic expression using the message's attributes and adds it to the message.",
                                            "properties": {
                                                "attribute": {
                                                    "description": "The name of the attribute that contains the result of the math operation.",
                                                    "maxLength": 256,
                                                    "minLength": 1,
                                                    "type": "string"
                                                },
                                                "math": {
                                                    "description": "An expression that uses one or more existing attributes and must return an integer value.",
                                                    "maxLength": 256,
                                                    "minLength": 1,
                                                    "type": "string"
                                                },
                                                "name": {
                                                    "description": "The name of the 'math' activity.",
                                                    "maxLength": 128,
                                                    "minLength": 1,
                                                    "type": "string"
                                                },
                                                "next": {
                                                    "description": "The next activity in the pipeline.",
                                                    "maxLength": 128,
                                                    "minLength": 1,
                                                    "type": "string"
                                                }
                                            },
                                            "required": [
                                                "name",
                                                "attribute",
                                                "math"
                                            ],
                                            "type": "object"
                                        },
                                        "removeAttributes": {
                                            "description": "Removes attributes from a message.",
                                            "properties": {
                                                "attributes": {
                                                    "description": "A list of 1-50 attributes to remove from the message.",
                                                    "items": {
                                                        "maxLength": 256,
                                                        "minLength": 1,
                                                        "type": "string"
                                                    },
                                                    "maxItems": 50,
                                                    "minItems": 1,
                                                    "type": "array"
                                                },
                                                "name": {
                                                    "description": "The name of the 'removeAttributes' activity.",
                                                    "maxLength": 128,
                                                    "minLength": 1,
                                                    "type": "string"
                                                },
                                                "next": {
                                                    "description": "The next activity in the pipeline.",
                                                    "maxLength": 128,
                                                    "minLength": 1,
                                                    "type": "string"
                                                }
                                            },
                                            "required": [
                                                "name",
                                                "attributes"
                                            ],
                                            "type": "object"
                                        },
                                        "selectAttributes": {
                                            "description": "Creates a new message using only the specified attributes from the original message. ",
                                            "properties": {
                                                "attributes": {
                                                    "description": "A list of the attributes to select from the message.",
                                                    "items": {
                                                        "maxLength": 256,
                                                        "minLength": 1,
                                                        "type": "string"
                                                    },
                                                    "maxItems": 50,
                                                    "minItems": 1,
                                                    "type": "array"
                                                },
                                                "name": {
                                                    "description": "The name of the 'selectAttributes' activity.",
                                                    "maxLength": 128,
                                                    "minLength": 1,
                                                    "type": "string"
                                                },
                                                "next": {
                                                    "description": "The next activity in the pipeline.",
                                                    "maxLength": 128,
                                                    "minLength": 1,
                                                    "type": "string"
                                                }
                                            },
                                            "required": [
                                                "name",
                                                "attributes"
                                            ],
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                },
                                "maxItems": 25,
                                "minItems": 1,
                                "type": "array"
                            },
                            "arn": {
                                "description": "The ARN of the pipeline.",
                                "type": "string"
                            },
                            "creationTime": {
                                "description": "When the pipeline was created.",
                                "format": "date-time",
                                "type": "string"
                            },
                            "lastUpdateTime": {
                                "description": "The last time the pipeline was updated.",
                                "format": "date-time",
                                "type": "string"
                            },
                            "name": {
                                "description": "The name of the pipeline.",
                                "maxLength": 128,
                                "minLength": 1,
                                "pattern": "^[a-zA-Z0-9_]+$",
                                "type": "string"
                            },
                            "reprocessingSummaries": {
                                "description": "A summary of information about the pipeline reprocessing.",
                                "items": {
                                    "description": "Information about pipeline reprocessing.",
                                    "properties": {
                                        "creationTime": {
                                            "description": "The time the pipeline reprocessing was created.",
                                            "format": "date-time",
                                            "type": "string"
                                        },
                                        "id": {
                                            "description": "The 'reprocessingId' returned by \"StartPipelineReprocessing\".",
                                            "type": "string"
                                        },
                                        "status": {
                                            "description": "The status of the pipeline reprocessing.",
                                            "enum": [
                                                "RUNNING",
                                                "SUCCEEDED",
                                                "CANCELLED",
                                                "FAILED"
                                            ],
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                },
                                "type": "array"
                            }
                        },
                        "type": "object"
                    }
                },
                "type": "object"
            },
            "DeviceRegistryEnrichActivity": {
                "description": "An activity that adds data from the AWS IoT device registry to your message.",
                "properties": {
                    "attribute": {
                        "description": "The name of the attribute that is added to the message.",
                        "maxLength": 256,
                        "minLength": 1,
                        "type": "string"
                    },
                    "name": {
                        "description": "The name of the 'deviceRegistryEnrich' activity.",
                        "maxLength": 128,
                        "minLength": 1,
                        "type": "string"
                    },
                    "next": {
                        "description": "The next activity in the pipeline.",
                        "maxLength": 128,
                        "minLength": 1,
                        "type": "string"
                    },
                    "roleArn": {
                        "description": "The ARN of the role that allows access to the device's registry information.",
                        "maxLength": 2048,
                        "minLength": 20,
                        "type": "string"
                    },
                    "thingName": {
                        "description": "The name of the IoT device whose registry information is added to the message.",
                        "maxLength": 256,
                        "minLength": 1,
                        "type": "string"
                    }
                },
                "required": [
                    "name",
                    "attribute",
                    "thingName",
                    "roleArn"
                ],
                "type": "object"
            },
            "DeviceShadowEnrichActivity": {
                "description": "An activity that adds information from the AWS IoT Device Shadows service to a message.",
                "properties": {
                    "attribute": {
                        "description": "The name of the attribute that is added to the message.",
                        "maxLength": 256,
                        "minLength": 1,
                        "type": "string"
                    },
                    "name": {
                        "description": "The name of the 'deviceShadowEnrich' activity.",
                        "maxLength": 128,
                        "minLength": 1,
                        "type": "string"
                    },
                    "next": {
                        "description": "The next activity in the pipeline.",
                        "maxLength": 128,
                        "minLength": 1,
                        "type": "string"
                    },
                    "roleArn": {
                        "description": "The ARN of the role that allows access to the device's shadow.",
                        "maxLength": 2048,
                        "minLength": 20,
                        "type": "string"
                    },
                    "thingName": {
                        "description": "The name of the IoT device whose shadow information is added to the message.",
                        "maxLength": 256,
                        "minLength": 1,
                        "type": "string"
                    }
                },
                "required": [
                    "name",
                    "attribute",
                    "thingName",
                    "roleArn"
                ],
                "type": "object"
            },
            "DoubleValue": {
                "format": "double",
                "type": "number"
            },
            "EndTime": {
                "format": "date-time",
                "type": "string"
            },
            "EntryName": {
                "type": "string"
            },
            "ErrorCode": {
                "type": "string"
            },
            "ErrorMessage": {
                "type": "string"
            },
            "EstimatedResourceSize": {
                "description": "The estimated size of the resource.",
                "properties": {
                    "estimatedOn": {
                        "description": "The time when the estimate of the size of the resource was made.",
                        "format": "date-time",
                        "type": "string"
                    },
                    "estimatedSizeInBytes": {
                        "description": "The estimated size of the resource in bytes.",
                        "format": "double",
                        "type": "number"
                    }
                },
                "type": "object"
            },
            "FilterActivity": {
                "description": "An activity that filters a message based on its attributes.",
                "properties": {
                    "filter": {
                        "description": "An expression that looks like a SQL WHERE clause that must return a Boolean value.",
                        "maxLength": 256,
                        "minLength": 1,
                        "type": "string"
                    },
                    "name": {
                        "description": "The name of the 'filter' activity.",
                        "maxLength": 128,
                        "minLength": 1,
                        "type": "string"
                    },
                    "next": {
                        "description": "The next activity in the pipeline.",
                        "maxLength": 128,
                        "minLength": 1,
                        "type": "string"
                    }
                },
                "required": [
                    "name",
                    "filter"
                ],
                "type": "object"
            },
            "FilterExpression": {
                "maxLength": 256,
                "minLength": 1,
                "type": "string"
            },
            "GetDatasetContentRequest": {
                "properties": {},
                "type": "object"
            },
            "GetDatasetContentResponse": {
                "properties": {
                    "entries": {
                        "description": "A list of \"DatasetEntry\" objects.",
                        "items": {
                            "description": "The reference to a data set entry.",
                            "properties": {
                                "dataURI": {
                                    "description": "The pre-signed URI of the data set item.",
                                    "type": "string"
                                },
                                "entryName": {
                                    "description": "The name of the data set item.",
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        },
                        "type": "array"
                    },
                    "status": {
                        "description": "The status of the data set content.",
                        "properties": {
                            "reason": {
                                "description": "The reason the data set contents are in this state.",
                                "type": "string"
                            },
                            "state": {
                                "description": "The state of the data set contents. Can be one of \"READY\", \"CREATING\", \"SUCCEEDED\" or \"FAILED\".",
                                "enum": [
                                    "CREATING",
                                    "SUCCEEDED",
                                    "FAILED"
                                ],
                                "type": "string"
                            }
                        },
                        "type": "object"
                    },
                    "timestamp": {
                        "description": "The time when the request was made.",
                        "format": "date-time",
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "Image": {
                "maxLength": 255,
                "type": "string"
            },
            "IncludeStatisticsFlag": {
                "type": "boolean"
            },
            "InternalFailureException": {},
            "InvalidRequestException": {},
            "IotEventsDestinationConfiguration": {
                "description": "Configuration information for delivery of data set contents to AWS IoT Events.",
                "properties": {
                    "inputName": {
                        "description": "The name of the AWS IoT Events input to which data set contents are delivered.",
                        "maxLength": 128,
                        "minLength": 1,
                        "pattern": "^[a-zA-Z][a-zA-Z0-9_]*$",
                        "type": "string"
                    },
                    "roleArn": {
                        "description": "The ARN of the role which grants AWS IoT Analytics permission to deliver data set contents to an AWS IoT Events input.",
                        "maxLength": 2048,
                        "minLength": 20,
                        "type": "string"
                    }
                },
                "required": [
                    "inputName",
                    "roleArn"
                ],
                "type": "object"
            },
            "IotEventsInputName": {
                "maxLength": 128,
                "minLength": 1,
                "pattern": "^[a-zA-Z][a-zA-Z0-9_]*$",
                "type": "string"
            },
            "LambdaActivity": {
                "description": "An activity that runs a Lambda function to modify the message.",
                "properties": {
                    "batchSize": {
                        "description": "<p>The number of messages passed to the Lambda function for processing.</p> <p>The AWS Lambda function must be able to process all of these messages within five minutes, which is the maximum timeout duration for Lambda functions.</p>",
                        "maximum": 1000,
                        "minimum": 1,
                        "type": "integer"
                    },
                    "lambdaName": {
                        "description": "The name of the Lambda function that is run on the message.",
                        "maxLength": 64,
                        "minLength": 1,
                        "pattern": "^[a-zA-Z0-9_-]+$",
                        "type": "string"
                    },
                    "name": {
                        "description": "The name of the 'lambda' activity.",
                        "maxLength": 128,
                        "minLength": 1,
                        "type": "string"
                    },
                    "next": {
                        "description": "The next activity in the pipeline.",
                        "maxLength": 128,
                        "minLength": 1,
                        "type": "string"
                    }
                },
                "required": [
                    "name",
                    "lambdaName",
                    "batchSize"
                ],
                "type": "object"
            },
            "LambdaName": {
                "maxLength": 64,
                "minLength": 1,
                "pattern": "^[a-zA-Z0-9_-]+$",
                "type": "string"
            },
            "LimitExceededException": {},
            "ListChannelsRequest": {
                "properties": {},
                "type": "object"
            },
            "ListChannelsResponse": {
                "properties": {
                    "channelSummaries": {
                        "description": "A list of \"ChannelSummary\" objects.",
                        "items": {
                            "description": "A summary of information about a channel.",
                            "properties": {
                                "channelName": {
                                    "description": "The name of the channel.",
                                    "maxLength": 128,
                                    "minLength": 1,
                                    "pattern": "^[a-zA-Z0-9_]+$",
                                    "type": "string"
                                },
                                "creationTime": {
                                    "description": "When the channel was created.",
                                    "format": "date-time",
                                    "type": "string"
                                },
                                "lastUpdateTime": {
                                    "description": "The last time the channel was updated.",
                                    "format": "date-time",
                                    "type": "string"
                                },
                                "status": {
                                    "description": "The status of the channel.",
                                    "enum": [
                                        "CREATING",
                                        "ACTIVE",
                                        "DELETING"
                                    ],
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        },
                        "type": "array"
                    },
                    "nextToken": {
                        "description": "The token to retrieve the next set of results, or <code>null</code> if there are no more results.",
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "ListDatasetContentsRequest": {
                "properties": {},
                "type": "object"
            },
            "ListDatasetContentsResponse": {
                "properties": {
                    "datasetContentSummaries": {
                        "description": "Summary information about data set contents that have been created.",
                        "items": {
                            "description": "Summary information about data set contents.",
                            "properties": {
                                "creationTime": {
                                    "description": "The actual time the creation of the data set contents was started.",
                                    "format": "date-time",
                                    "type": "string"
                                },
                                "scheduleTime": {
                                    "description": "The time the creation of the data set contents was scheduled to start.",
                                    "format": "date-time",
                                    "type": "string"
                                },
                                "status": {
                                    "description": "The status of the data set contents.",
                                    "properties": {
                                        "reason": {
                                            "description": "The reason the data set contents are in this state.",
                                            "type": "string"
                                        },
                                        "state": {
                                            "description": "The state of the data set contents. Can be one of \"READY\", \"CREATING\", \"SUCCEEDED\" or \"FAILED\".",
                                            "enum": [
                                                "CREATING",
                                                "SUCCEEDED",
                                                "FAILED"
                                            ],
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                },
                                "version": {
                                    "description": "The version of the data set contents.",
                                    "maxLength": 36,
                                    "minLength": 7,
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        },
                        "type": "array"
                    },
                    "nextToken": {
                        "description": "The token to retrieve the next set of results, or <code>null</code> if there are no more results.",
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "ListDatasetsRequest": {
                "properties": {},
                "type": "object"
            },
            "ListDatasetsResponse": {
                "properties": {
                    "datasetSummaries": {
                        "description": "A list of \"DatasetSummary\" objects.",
                        "items": {
                            "description": "A summary of information about a data set.",
                            "properties": {
                                "actions": {
                                    "description": "A list of \"DataActionSummary\" objects.",
                                    "items": {
                                        "description": "<p/>",
                                        "properties": {
                                            "actionName": {
                                                "description": "The name of the action which automatically creates the data set's contents.",
                                                "maxLength": 128,
                                                "minLength": 1,
                                                "pattern": "^[a-zA-Z0-9_]+$",
                                                "type": "string"
                                            },
                                            "actionType": {
                                                "description": "The type of action by which the data set's contents are automatically created.",
                                                "enum": [
                                                    "QUERY",
                                                    "CONTAINER"
                                                ],
                                                "type": "string"
                                            }
                                        },
                                        "type": "object"
                                    },
                                    "maxItems": 1,
                                    "minItems": 1,
                                    "type": "array"
                                },
                                "creationTime": {
                                    "description": "The time the data set was created.",
                                    "format": "date-time",
                                    "type": "string"
                                },
                                "datasetName": {
                                    "description": "The name of the data set.",
                                    "maxLength": 128,
                                    "minLength": 1,
                                    "pattern": "^[a-zA-Z0-9_]+$",
                                    "type": "string"
                                },
                                "lastUpdateTime": {
                                    "description": "The last time the data set was updated.",
                                    "format": "date-time",
                                    "type": "string"
                                },
                                "status": {
                                    "description": "The status of the data set.",
                                    "enum": [
                                        "CREATING",
                                        "ACTIVE",
                                        "DELETING"
                                    ],
                                    "type": "string"
                                },
                                "triggers": {
                                    "description": "A list of triggers. A trigger causes data set content to be populated at a specified time interval or when another data set is populated. The list of triggers can be empty or contain up to five DataSetTrigger objects",
                                    "items": {
                                        "description": "The \"DatasetTrigger\" that specifies when the data set is automatically updated.",
                                        "properties": {
                                            "dataset": {
                                                "description": "The data set whose content creation triggers the creation of this data set's contents.",
                                                "properties": {
                                                    "name": {
                                                        "description": "The name of the data set whose content generation triggers the new data set content generation.",
                                                        "maxLength": 128,
                                                        "minLength": 1,
                                                        "pattern": "^[a-zA-Z0-9_]+$",
                                                        "type": "string"
                                                    }
                                                },
                                                "required": [
                                                    "name"
                                                ],
                                                "type": "object"
                                            },
                                            "schedule": {
                                                "description": "The \"Schedule\" when the trigger is initiated.",
                                                "properties": {
                                                    "expression": {
                                                        "description": "The expression that defines when to trigger an update. For more information, see <a href=\"https://docs.aws.amazon.com/AmazonCloudWatch/latest/events/ScheduledEvents.html\"> Schedule Expressions for Rules</a> in the Amazon CloudWatch documentation.",
                                                        "type": "string"
                                                    }
                                                },
                                                "type": "object"
                                            }
                                        },
                                        "type": "object"
                                    },
                                    "maxItems": 5,
                                    "minItems": 0,
                                    "type": "array"
                                }
                            },
                            "type": "object"
                        },
                        "type": "array"
                    },
                    "nextToken": {
                        "description": "The token to retrieve the next set of results, or <code>null</code> if there are no more results.",
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "ListDatastoresRequest": {
                "properties": {},
                "type": "object"
            },
            "ListDatastoresResponse": {
                "properties": {
                    "datastoreSummaries": {
                        "description": "A list of \"DatastoreSummary\" objects.",
                        "items": {
                            "description": "A summary of information about a data store.",
                            "properties": {
                                "creationTime": {
                                    "description": "When the data store was created.",
                                    "format": "date-time",
                                    "type": "string"
                                },
                                "datastoreName": {
                                    "description": "The name of the data store.",
                                    "maxLength": 128,
                                    "minLength": 1,
                                    "pattern": "^[a-zA-Z0-9_]+$",
                                    "type": "string"
                                },
                                "lastUpdateTime": {
                                    "description": "The last time the data store was updated.",
                                    "format": "date-time",
                                    "type": "string"
                                },
                                "status": {
                                    "description": "The status of the data store.",
                                    "enum": [
                                        "CREATING",
                                        "ACTIVE",
                                        "DELETING"
                                    ],
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        },
                        "type": "array"
                    },
                    "nextToken": {
                        "description": "The token to retrieve the next set of results, or <code>null</code> if there are no more results.",
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "ListPipelinesRequest": {
                "properties": {},
                "type": "object"
            },
            "ListPipelinesResponse": {
                "properties": {
                    "nextToken": {
                        "description": "The token to retrieve the next set of results, or <code>null</code> if there are no more results.",
                        "type": "string"
                    },
                    "pipelineSummaries": {
                        "description": "A list of \"PipelineSummary\" objects.",
                        "items": {
                            "description": "A summary of information about a pipeline.",
                            "properties": {
                                "creationTime": {
                                    "description": "When the pipeline was created.",
                                    "format": "date-time",
                                    "type": "string"
                                },
                                "lastUpdateTime": {
                                    "description": "When the pipeline was last updated.",
                                    "format": "date-time",
                                    "type": "string"
                                },
                                "pipelineName": {
                                    "description": "The name of the pipeline.",
                                    "maxLength": 128,
                                    "minLength": 1,
                                    "pattern": "^[a-zA-Z0-9_]+$",
                                    "type": "string"
                                },
                                "reprocessingSummaries": {
                                    "description": "A summary of information about the pipeline reprocessing.",
                                    "items": {
                                        "description": "Information about pipeline reprocessing.",
                                        "properties": {
                                            "creationTime": {
                                                "description": "The time the pipeline reprocessing was created.",
                                                "format": "date-time",
                                                "type": "string"
                                            },
                                            "id": {
                                                "description": "The 'reprocessingId' returned by \"StartPipelineReprocessing\".",
                                                "type": "string"
                                            },
                                            "status": {
                                                "description": "The status of the pipeline reprocessing.",
                                                "enum": [
                                                    "RUNNING",
                                                    "SUCCEEDED",
                                                    "CANCELLED",
                                                    "FAILED"
                                                ],
                                                "type": "string"
                                            }
                                        },
                                        "type": "object"
                                    },
                                    "type": "array"
                                }
                            },
                            "type": "object"
                        },
                        "type": "array"
                    }
                },
                "type": "object"
            },
            "ListTagsForResourceRequest": {
                "properties": {},
                "type": "object"
            },
            "ListTagsForResourceResponse": {
                "properties": {
                    "tags": {
                        "description": "The tags (metadata) which you have assigned to the resource.",
                        "items": {
                            "description": "A set of key/value pairs which are used to manage the resource.",
                            "properties": {
                                "key": {
                                    "description": "The tag's key.",
                                    "maxLength": 256,
                                    "minLength": 1,
                                    "type": "string"
                                },
                                "value": {
                                    "description": "The tag's value.",
                                    "maxLength": 256,
                                    "minLength": 1,
                                    "type": "string"
                                }
                            },
                            "required": [
                                "key",
                                "value"
                            ],
                            "type": "object"
                        },
                        "maxItems": 50,
                        "minItems": 1,
                        "type": "array"
                    }
                },
                "type": "object"
            },
            "LogResult": {
                "type": "string"
            },
            "LoggingEnabled": {
                "type": "boolean"
            },
            "LoggingLevel": {
                "enum": [
                    "ERROR"
                ],
                "type": "string"
            },
            "LoggingOptions": {
                "description": "Information about logging options.",
                "properties": {
                    "enabled": {
                        "description": "If true, logging is enabled for AWS IoT Analytics.",
                        "type": "boolean"
                    },
                    "level": {
                        "description": "The logging level. Currently, only \"ERROR\" is supported.",
                        "enum": [
                            "ERROR"
                        ],
                        "type": "string"
                    },
                    "roleArn": {
                        "description": "The ARN of the role that grants permission to AWS IoT Analytics to perform logging.",
                        "maxLength": 2048,
                        "minLength": 20,
                        "type": "string"
                    }
                },
                "required": [
                    "roleArn",
                    "level",
                    "enabled"
                ],
                "type": "object"
            },
            "MathActivity": {
                "description": "An activity that computes an arithmetic expression using the message's attributes.",
                "properties": {
                    "attribute": {
                        "description": "The name of the attribute that contains the result of the math operation.",
                        "maxLength": 256,
                        "minLength": 1,
                        "type": "string"
                    },
                    "math": {
                        "description": "An expression that uses one or more existing attributes and must return an integer value.",
                        "maxLength": 256,
                        "minLength": 1,
                        "type": "string"
                    },
                    "name": {
                        "description": "The name of the 'math' activity.",
                        "maxLength": 128,
                        "minLength": 1,
                        "type": "string"
                    },
                    "next": {
                        "description": "The next activity in the pipeline.",
                        "maxLength": 128,
                        "minLength": 1,
                        "type": "string"
                    }
                },
                "required": [
                    "name",
                    "attribute",
                    "math"
                ],
                "type": "object"
            },
            "MathExpression": {
                "maxLength": 256,
                "minLength": 1,
                "type": "string"
            },
            "MaxMessages": {
                "maximum": 10,
                "minimum": 1,
                "type": "integer"
            },
            "MaxResults": {
                "maximum": 250,
                "minimum": 1,
                "type": "integer"
            },
            "Message": {
                "description": "Information about a message.",
                "properties": {
                    "messageId": {
                        "description": "The ID you wish to assign to the message. Each \"messageId\" must be unique within each batch sent.",
                        "maxLength": 128,
                        "minLength": 1,
                        "type": "string"
                    },
                    "payload": {
                        "description": "The payload of the message. This may be a JSON string or a Base64-encoded string representing binary data (in which case you must decode it by means of a pipeline activity).",
                        "type": "string"
                    }
                },
                "required": [
                    "messageId",
                    "payload"
                ],
                "type": "object"
            },
            "MessageId": {
                "maxLength": 128,
                "minLength": 1,
                "type": "string"
            },
            "MessagePayload": {
                "type": "string"
            },
            "MessagePayloads": {
                "items": {
                    "type": "string"
                },
                "maxItems": 10,
                "minItems": 1,
                "type": "array"
            },
            "Messages": {
                "items": {
                    "description": "Information about a message.",
                    "properties": {
                        "messageId": {
                            "description": "The ID you wish to assign to the message. Each \"messageId\" must be unique within each batch sent.",
                            "maxLength": 128,
                            "minLength": 1,
                            "type": "string"
                        },
                        "payload": {
                            "description": "The payload of the message. This may be a JSON string or a Base64-encoded string representing binary data (in which case you must decode it by means of a pipeline activity).",
                            "type": "string"
                        }
                    },
                    "required": [
                        "messageId",
                        "payload"
                    ],
                    "type": "object"
                },
                "type": "array"
            },
            "NextToken": {
                "type": "string"
            },
            "OffsetSeconds": {
                "type": "integer"
            },
            "OutputFileName": {
                "pattern": "[\\w\\.-]{1,255}",
                "type": "string"
            },
            "OutputFileUriValue": {
                "description": "The value of the variable as a structure that specifies an output file URI.",
                "properties": {
                    "fileName": {
                        "description": "The URI of the location where data set contents are stored, usually the URI of a file in an S3 bucket.",
                        "pattern": "[\\w\\.-]{1,255}",
                        "type": "string"
                    }
                },
                "required": [
                    "fileName"
                ],
                "type": "object"
            },
            "Pipeline": {
                "description": "Contains information about a pipeline.",
                "properties": {
                    "activities": {
                        "description": "The activities that perform transformations on the messages.",
                        "items": {
                            "description": "An activity that performs a transformation on a message.",
                            "properties": {
                                "addAttributes": {
                                    "description": "Adds other attributes based on existing attributes in the message.",
                                    "properties": {
                                        "attributes": {
                                            "description": "<p>A list of 1-50 \"AttributeNameMapping\" objects that map an existing attribute to a new attribute.</p> <note> <p>The existing attributes remain in the message, so if you want to remove the originals, use \"RemoveAttributeActivity\".</p> </note>",
                                            "items": {
                                                "properties": {
                                                    "key": {
                                                        "maxLength": 256,
                                                        "minLength": 1,
                                                        "type": "string"
                                                    },
                                                    "value": {
                                                        "maxLength": 256,
                                                        "minLength": 1,
                                                        "type": "string"
                                                    }
                                                },
                                                "type": "object"
                                            },
                                            "maxItems": 50,
                                            "minItems": 1,
                                            "type": "array"
                                        },
                                        "name": {
                                            "description": "The name of the 'addAttributes' activity.",
                                            "maxLength": 128,
                                            "minLength": 1,
                                            "type": "string"
                                        },
                                        "next": {
                                            "description": "The next activity in the pipeline.",
                                            "maxLength": 128,
                                            "minLength": 1,
                                            "type": "string"
                                        }
                                    },
                                    "required": [
                                        "name",
                                        "attributes"
                                    ],
                                    "type": "object"
                                },
                                "channel": {
                                    "description": "Determines the source of the messages to be processed.",
                                    "properties": {
                                        "channelName": {
                                            "description": "The name of the channel from which the messages are processed.",
                                            "maxLength": 128,
                                            "minLength": 1,
                                            "pattern": "^[a-zA-Z0-9_]+$",
                                            "type": "string"
                                        },
                                        "name": {
                                            "description": "The name of the 'channel' activity.",
                                            "maxLength": 128,
                                            "minLength": 1,
                                            "type": "string"
                                        },
                                        "next": {
                                            "description": "The next activity in the pipeline.",
                                            "maxLength": 128,
                                            "minLength": 1,
                                            "type": "string"
                                        }
                                    },
                                    "required": [
                                        "name",
                                        "channelName"
                                    ],
                                    "type": "object"
                                },
                                "datastore": {
                                    "description": "Specifies where to store the processed message data.",
                                    "properties": {
                                        "datastoreName": {
                                            "description": "The name of the data store where processed messages are stored.",
                                            "maxLength": 128,
                                            "minLength": 1,
                                            "pattern": "^[a-zA-Z0-9_]+$",
                                            "type": "string"
                                        },
                                        "name": {
                                            "description": "The name of the 'datastore' activity.",
                                            "maxLength": 128,
                                            "minLength": 1,
                                            "type": "string"
                                        }
                                    },
                                    "required": [
                                        "name",
                                        "datastoreName"
                                    ],
                                    "type": "object"
                                },
                                "deviceRegistryEnrich": {
                                    "description": "Adds data from the AWS IoT device registry to your message.",
                                    "properties": {
                                        "attribute": {
                                            "description": "The name of the attribute that is added to the message.",
                                            "maxLength": 256,
                                            "minLength": 1,
                                            "type": "string"
                                        },
                                        "name": {
                                            "description": "The name of the 'deviceRegistryEnrich' activity.",
                                            "maxLength": 128,
                                            "minLength": 1,
                                            "type": "string"
                                        },
                                        "next": {
                                            "description": "The next activity in the pipeline.",
                                            "maxLength": 128,
                                            "minLength": 1,
                                            "type": "string"
                                        },
                                        "roleArn": {
                                            "description": "The ARN of the role that allows access to the device's registry information.",
                                            "maxLength": 2048,
                                            "minLength": 20,
                                            "type": "string"
                                        },
                                        "thingName": {
                                            "description": "The name of the IoT device whose registry information is added to the message.",
                                            "maxLength": 256,
                                            "minLength": 1,
                                            "type": "string"
                                        }
                                    },
                                    "required": [
                                        "name",
                                        "attribute",
                                        "thingName",
                                        "roleArn"
                                    ],
                                    "type": "object"
                                },
                                "deviceShadowEnrich": {
                                    "description": "Adds information from the AWS IoT Device Shadows service to a message.",
                                    "properties": {
                                        "attribute": {
                                            "description": "The name of the attribute that is added to the message.",
                                            "maxLength": 256,
                                            "minLength": 1,
                                            "type": "string"
                                        },
                                        "name": {
                                            "description": "The name of the 'deviceShadowEnrich' activity.",
                                            "maxLength": 128,
                                            "minLength": 1,
                                            "type": "string"
                                        },
                                        "next": {
                                            "description": "The next activity in the pipeline.",
                                            "maxLength": 128,
                                            "minLength": 1,
                                            "type": "string"
                                        },
                                        "roleArn": {
                                            "description": "The ARN of the role that allows access to the device's shadow.",
                                            "maxLength": 2048,
                                            "minLength": 20,
                                            "type": "string"
                                        },
                                        "thingName": {
                                            "description": "The name of the IoT device whose shadow information is added to the message.",
                                            "maxLength": 256,
                                            "minLength": 1,
                                            "type": "string"
                                        }
                                    },
                                    "required": [
                                        "name",
                                        "attribute",
                                        "thingName",
                                        "roleArn"
                                    ],
                                    "type": "object"
                                },
                                "filter": {
                                    "description": "Filters a message based on its attributes.",
                                    "properties": {
                                        "filter": {
                                            "description": "An expression that looks like a SQL WHERE clause that must return a Boolean value.",
                                            "maxLength": 256,
                                            "minLength": 1,
                                            "type": "string"
                                        },
                                        "name": {
                                            "description": "The name of the 'filter' activity.",
                                            "maxLength": 128,
                                            "minLength": 1,
                                            "type": "string"
                                        },
                                        "next": {
                                            "description": "The next activity in the pipeline.",
                                            "maxLength": 128,
                                            "minLength": 1,
                                            "type": "string"
                                        }
                                    },
                                    "required": [
                                        "name",
                                        "filter"
                                    ],
                                    "type": "object"
                                },
                                "lambda": {
                                    "description": "Runs a Lambda function to modify the message.",
                                    "properties": {
                                        "batchSize": {
                                            "description": "<p>The number of messages passed to the Lambda function for processing.</p> <p>The AWS Lambda function must be able to process all of these messages within five minutes, which is the maximum timeout duration for Lambda functions.</p>",
                                            "maximum": 1000,
                                            "minimum": 1,
                                            "type": "integer"
                                        },
                                        "lambdaName": {
                                            "description": "The name of the Lambda function that is run on the message.",
                                            "maxLength": 64,
                                            "minLength": 1,
                                            "pattern": "^[a-zA-Z0-9_-]+$",
                                            "type": "string"
                                        },
                                        "name": {
                                            "description": "The name of the 'lambda' activity.",
                                            "maxLength": 128,
                                            "minLength": 1,
                                            "type": "string"
                                        },
                                        "next": {
                                            "description": "The next activity in the pipeline.",
                                            "maxLength": 128,
                                            "minLength": 1,
                                            "type": "string"
                                        }
                                    },
                                    "required": [
                                        "name",
                                        "lambdaName",
                                        "batchSize"
                                    ],
                                    "type": "object"
                                },
                                "math": {
                                    "description": "Computes an arithmetic expression using the message's attributes and adds it to the message.",
                                    "properties": {
                                        "attribute": {
                                            "description": "The name of the attribute that contains the result of the math operation.",
                                            "maxLength": 256,
                                            "minLength": 1,
                                            "type": "string"
                                        },
                                        "math": {
                                            "description": "An expression that uses one or more existing attributes and must return an integer value.",
                                            "maxLength": 256,
                                            "minLength": 1,
                                            "type": "string"
                                        },
                                        "name": {
                                            "description": "The name of the 'math' activity.",
                                            "maxLength": 128,
                                            "minLength": 1,
                                            "type": "string"
                                        },
                                        "next": {
                                            "description": "The next activity in the pipeline.",
                                            "maxLength": 128,
                                            "minLength": 1,
                                            "type": "string"
                                        }
                                    },
                                    "required": [
                                        "name",
                                        "attribute",
                                        "math"
                                    ],
                                    "type": "object"
                                },
                                "removeAttributes": {
                                    "description": "Removes attributes from a message.",
                                    "properties": {
                                        "attributes": {
                                            "description": "A list of 1-50 attributes to remove from the message.",
                                            "items": {
                                                "maxLength": 256,
                                                "minLength": 1,
                                                "type": "string"
                                            },
                                            "maxItems": 50,
                                            "minItems": 1,
                                            "type": "array"
                                        },
                                        "name": {
                                            "description": "The name of the 'removeAttributes' activity.",
                                            "maxLength": 128,
                                            "minLength": 1,
                                            "type": "string"
                                        },
                                        "next": {
                                            "description": "The next activity in the pipeline.",
                                            "maxLength": 128,
                                            "minLength": 1,
                                            "type": "string"
                                        }
                                    },
                                    "required": [
                                        "name",
                                        "attributes"
                                    ],
                                    "type": "object"
                                },
                                "selectAttributes": {
                                    "description": "Creates a new message using only the specified attributes from the original message. ",
                                    "properties": {
                                        "attributes": {
                                            "description": "A list of the attributes to select from the message.",
                                            "items": {
                                                "maxLength": 256,
                                                "minLength": 1,
                                                "type": "string"
                                            },
                                            "maxItems": 50,
                                            "minItems": 1,
                                            "type": "array"
                                        },
                                        "name": {
                                            "description": "The name of the 'selectAttributes' activity.",
                                            "maxLength": 128,
                                            "minLength": 1,
                                            "type": "string"
                                        },
                                        "next": {
                                            "description": "The next activity in the pipeline.",
                                            "maxLength": 128,
                                            "minLength": 1,
                                            "type": "string"
                                        }
                                    },
                                    "required": [
                                        "name",
                                        "attributes"
                                    ],
                                    "type": "object"
                                }
                            },
                            "type": "object"
                        },
                        "maxItems": 25,
                        "minItems": 1,
                        "type": "array"
                    },
                    "arn": {
                        "description": "The ARN of the pipeline.",
                        "type": "string"
                    },
                    "creationTime": {
                        "description": "When the pipeline was created.",
                        "format": "date-time",
                        "type": "string"
                    },
                    "lastUpdateTime": {
                        "description": "The last time the pipeline was updated.",
                        "format": "date-time",
                        "type": "string"
                    },
                    "name": {
                        "description": "The name of the pipeline.",
                        "maxLength": 128,
                        "minLength": 1,
                        "pattern": "^[a-zA-Z0-9_]+$",
                        "type": "string"
                    },
                    "reprocessingSummaries": {
                        "description": "A summary of information about the pipeline reprocessing.",
                        "items": {
                            "description": "Information about pipeline reprocessing.",
                            "properties": {
                                "creationTime": {
                                    "description": "The time the pipeline reprocessing was created.",
                                    "format": "date-time",
                                    "type": "string"
                                },
                                "id": {
                                    "description": "The 'reprocessingId' returned by \"StartPipelineReprocessing\".",
                                    "type": "string"
                                },
                                "status": {
                                    "description": "The status of the pipeline reprocessing.",
                                    "enum": [
                                        "RUNNING",
                                        "SUCCEEDED",
                                        "CANCELLED",
                                        "FAILED"
                                    ],
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        },
                        "type": "array"
                    }
                },
                "type": "object"
            },
            "PipelineActivities": {
                "items": {
                    "description": "An activity that performs a transformation on a message.",
                    "properties": {
                        "addAttributes": {
                            "description": "Adds other attributes based on existing attributes in the message.",
                            "properties": {
                                "attributes": {
                                    "description": "<p>A list of 1-50 \"AttributeNameMapping\" objects that map an existing attribute to a new attribute.</p> <note> <p>The existing attributes remain in the message, so if you want to remove the originals, use \"RemoveAttributeActivity\".</p> </note>",
                                    "items": {
                                        "properties": {
                                            "key": {
                                                "maxLength": 256,
                                                "minLength": 1,
                                                "type": "string"
                                            },
                                            "value": {
                                                "maxLength": 256,
                                                "minLength": 1,
                                                "type": "string"
                                            }
                                        },
                                        "type": "object"
                                    },
                                    "maxItems": 50,
                                    "minItems": 1,
                                    "type": "array"
                                },
                                "name": {
                                    "description": "The name of the 'addAttributes' activity.",
                                    "maxLength": 128,
                                    "minLength": 1,
                                    "type": "string"
                                },
                                "next": {
                                    "description": "The next activity in the pipeline.",
                                    "maxLength": 128,
                                    "minLength": 1,
                                    "type": "string"
                                }
                            },
                            "required": [
                                "name",
                                "attributes"
                            ],
                            "type": "object"
                        },
                        "channel": {
                            "description": "Determines the source of the messages to be processed.",
                            "properties": {
                                "channelName": {
                                    "description": "The name of the channel from which the messages are processed.",
                                    "maxLength": 128,
                                    "minLength": 1,
                                    "pattern": "^[a-zA-Z0-9_]+$",
                                    "type": "string"
                                },
                                "name": {
                                    "description": "The name of the 'channel' activity.",
                                    "maxLength": 128,
                                    "minLength": 1,
                                    "type": "string"
                                },
                                "next": {
                                    "description": "The next activity in the pipeline.",
                                    "maxLength": 128,
                                    "minLength": 1,
                                    "type": "string"
                                }
                            },
                            "required": [
                                "name",
                                "channelName"
                            ],
                            "type": "object"
                        },
                        "datastore": {
                            "description": "Specifies where to store the processed message data.",
                            "properties": {
                                "datastoreName": {
                                    "description": "The name of the data store where processed messages are stored.",
                                    "maxLength": 128,
                                    "minLength": 1,
                                    "pattern": "^[a-zA-Z0-9_]+$",
                                    "type": "string"
                                },
                                "name": {
                                    "description": "The name of the 'datastore' activity.",
                                    "maxLength": 128,
                                    "minLength": 1,
                                    "type": "string"
                                }
                            },
                            "required": [
                                "name",
                                "datastoreName"
                            ],
                            "type": "object"
                        },
                        "deviceRegistryEnrich": {
                            "description": "Adds data from the AWS IoT device registry to your message.",
                            "properties": {
                                "attribute": {
                                    "description": "The name of the attribute that is added to the message.",
                                    "maxLength": 256,
                                    "minLength": 1,
                                    "type": "string"
                                },
                                "name": {
                                    "description": "The name of the 'deviceRegistryEnrich' activity.",
                                    "maxLength": 128,
                                    "minLength": 1,
                                    "type": "string"
                                },
                                "next": {
                                    "description": "The next activity in the pipeline.",
                                    "maxLength": 128,
                                    "minLength": 1,
                                    "type": "string"
                                },
                                "roleArn": {
                                    "description": "The ARN of the role that allows access to the device's registry information.",
                                    "maxLength": 2048,
                                    "minLength": 20,
                                    "type": "string"
                                },
                                "thingName": {
                                    "description": "The name of the IoT device whose registry information is added to the message.",
                                    "maxLength": 256,
                                    "minLength": 1,
                                    "type": "string"
                                }
                            },
                            "required": [
                                "name",
                                "attribute",
                                "thingName",
                                "roleArn"
                            ],
                            "type": "object"
                        },
                        "deviceShadowEnrich": {
                            "description": "Adds information from the AWS IoT Device Shadows service to a message.",
                            "properties": {
                                "attribute": {
                                    "description": "The name of the attribute that is added to the message.",
                                    "maxLength": 256,
                                    "minLength": 1,
                                    "type": "string"
                                },
                                "name": {
                                    "description": "The name of the 'deviceShadowEnrich' activity.",
                                    "maxLength": 128,
                                    "minLength": 1,
                                    "type": "string"
                                },
                                "next": {
                                    "description": "The next activity in the pipeline.",
                                    "maxLength": 128,
                                    "minLength": 1,
                                    "type": "string"
                                },
                                "roleArn": {
                                    "description": "The ARN of the role that allows access to the device's shadow.",
                                    "maxLength": 2048,
                                    "minLength": 20,
                                    "type": "string"
                                },
                                "thingName": {
                                    "description": "The name of the IoT device whose shadow information is added to the message.",
                                    "maxLength": 256,
                                    "minLength": 1,
                                    "type": "string"
                                }
                            },
                            "required": [
                                "name",
                                "attribute",
                                "thingName",
                                "roleArn"
                            ],
                            "type": "object"
                        },
                        "filter": {
                            "description": "Filters a message based on its attributes.",
                            "properties": {
                                "filter": {
                                    "description": "An expression that looks like a SQL WHERE clause that must return a Boolean value.",
                                    "maxLength": 256,
                                    "minLength": 1,
                                    "type": "string"
                                },
                                "name": {
                                    "description": "The name of the 'filter' activity.",
                                    "maxLength": 128,
                                    "minLength": 1,
                                    "type": "string"
                                },
                                "next": {
                                    "description": "The next activity in the pipeline.",
                                    "maxLength": 128,
                                    "minLength": 1,
                                    "type": "string"
                                }
                            },
                            "required": [
                                "name",
                                "filter"
                            ],
                            "type": "object"
                        },
                        "lambda": {
                            "description": "Runs a Lambda function to modify the message.",
                            "properties": {
                                "batchSize": {
                                    "description": "<p>The number of messages passed to the Lambda function for processing.</p> <p>The AWS Lambda function must be able to process all of these messages within five minutes, which is the maximum timeout duration for Lambda functions.</p>",
                                    "maximum": 1000,
                                    "minimum": 1,
                                    "type": "integer"
                                },
                                "lambdaName": {
                                    "description": "The name of the Lambda function that is run on the message.",
                                    "maxLength": 64,
                                    "minLength": 1,
                                    "pattern": "^[a-zA-Z0-9_-]+$",
                                    "type": "string"
                                },
                                "name": {
                                    "description": "The name of the 'lambda' activity.",
                                    "maxLength": 128,
                                    "minLength": 1,
                                    "type": "string"
                                },
                                "next": {
                                    "description": "The next activity in the pipeline.",
                                    "maxLength": 128,
                                    "minLength": 1,
                                    "type": "string"
                                }
                            },
                            "required": [
                                "name",
                                "lambdaName",
                                "batchSize"
                            ],
                            "type": "object"
                        },
                        "math": {
                            "description": "Computes an arithmetic expression using the message's attributes and adds it to the message.",
                            "properties": {
                                "attribute": {
                                    "description": "The name of the attribute that contains the result of the math operation.",
                                    "maxLength": 256,
                                    "minLength": 1,
                                    "type": "string"
                                },
                                "math": {
                                    "description": "An expression that uses one or more existing attributes and must return an integer value.",
                                    "maxLength": 256,
                                    "minLength": 1,
                                    "type": "string"
                                },
                                "name": {
                                    "description": "The name of the 'math' activity.",
                                    "maxLength": 128,
                                    "minLength": 1,
                                    "type": "string"
                                },
                                "next": {
                                    "description": "The next activity in the pipeline.",
                                    "maxLength": 128,
                                    "minLength": 1,
                                    "type": "string"
                                }
                            },
                            "required": [
                                "name",
                                "attribute",
                                "math"
                            ],
                            "type": "object"
                        },
                        "removeAttributes": {
                            "description": "Removes attributes from a message.",
                            "properties": {
                                "attributes": {
                                    "description": "A list of 1-50 attributes to remove from the message.",
                                    "items": {
                                        "maxLength": 256,
                                        "minLength": 1,
                                        "type": "string"
                                    },
                                    "maxItems": 50,
                                    "minItems": 1,
                                    "type": "array"
                                },
                                "name": {
                                    "description": "The name of the 'removeAttributes' activity.",
                                    "maxLength": 128,
                                    "minLength": 1,
                                    "type": "string"
                                },
                                "next": {
                                    "description": "The next activity in the pipeline.",
                                    "maxLength": 128,
                                    "minLength": 1,
                                    "type": "string"
                                }
                            },
                            "required": [
                                "name",
                                "attributes"
                            ],
                            "type": "object"
                        },
                        "selectAttributes": {
                            "description": "Creates a new message using only the specified attributes from the original message. ",
                            "properties": {
                                "attributes": {
                                    "description": "A list of the attributes to select from the message.",
                                    "items": {
                                        "maxLength": 256,
                                        "minLength": 1,
                                        "type": "string"
                                    },
                                    "maxItems": 50,
                                    "minItems": 1,
                                    "type": "array"
                                },
                                "name": {
                                    "description": "The name of the 'selectAttributes' activity.",
                                    "maxLength": 128,
                                    "minLength": 1,
                                    "type": "string"
                                },
                                "next": {
                                    "description": "The next activity in the pipeline.",
                                    "maxLength": 128,
                                    "minLength": 1,
                                    "type": "string"
                                }
                            },
                            "required": [
                                "name",
                                "attributes"
                            ],
                            "type": "object"
                        }
                    },
                    "type": "object"
                },
                "maxItems": 25,
                "minItems": 1,
                "type": "array"
            },
            "PipelineActivity": {
                "description": "An activity that performs a transformation on a message.",
                "properties": {
                    "addAttributes": {
                        "description": "Adds other attributes based on existing attributes in the message.",
                        "properties": {
                            "attributes": {
                                "description": "<p>A list of 1-50 \"AttributeNameMapping\" objects that map an existing attribute to a new attribute.</p> <note> <p>The existing attributes remain in the message, so if you want to remove the originals, use \"RemoveAttributeActivity\".</p> </note>",
                                "items": {
                                    "properties": {
                                        "key": {
                                            "maxLength": 256,
                                            "minLength": 1,
                                            "type": "string"
                                        },
                                        "value": {
                                            "maxLength": 256,
                                            "minLength": 1,
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                },
                                "maxItems": 50,
                                "minItems": 1,
                                "type": "array"
                            },
                            "name": {
                                "description": "The name of the 'addAttributes' activity.",
                                "maxLength": 128,
                                "minLength": 1,
                                "type": "string"
                            },
                            "next": {
                                "description": "The next activity in the pipeline.",
                                "maxLength": 128,
                                "minLength": 1,
                                "type": "string"
                            }
                        },
                        "required": [
                            "name",
                            "attributes"
                        ],
                        "type": "object"
                    },
                    "channel": {
                        "description": "Determines the source of the messages to be processed.",
                        "properties": {
                            "channelName": {
                                "description": "The name of the channel from which the messages are processed.",
                                "maxLength": 128,
                                "minLength": 1,
                                "pattern": "^[a-zA-Z0-9_]+$",
                                "type": "string"
                            },
                            "name": {
                                "description": "The name of the 'channel' activity.",
                                "maxLength": 128,
                                "minLength": 1,
                                "type": "string"
                            },
                            "next": {
                                "description": "The next activity in the pipeline.",
                                "maxLength": 128,
                                "minLength": 1,
                                "type": "string"
                            }
                        },
                        "required": [
                            "name",
                            "channelName"
                        ],
                        "type": "object"
                    },
                    "datastore": {
                        "description": "Specifies where to store the processed message data.",
                        "properties": {
                            "datastoreName": {
                                "description": "The name of the data store where processed messages are stored.",
                                "maxLength": 128,
                                "minLength": 1,
                                "pattern": "^[a-zA-Z0-9_]+$",
                                "type": "string"
                            },
                            "name": {
                                "description": "The name of the 'datastore' activity.",
                                "maxLength": 128,
                                "minLength": 1,
                                "type": "string"
                            }
                        },
                        "required": [
                            "name",
                            "datastoreName"
                        ],
                        "type": "object"
                    },
                    "deviceRegistryEnrich": {
                        "description": "Adds data from the AWS IoT device registry to your message.",
                        "properties": {
                            "attribute": {
                                "description": "The name of the attribute that is added to the message.",
                                "maxLength": 256,
                                "minLength": 1,
                                "type": "string"
                            },
                            "name": {
                                "description": "The name of the 'deviceRegistryEnrich' activity.",
                                "maxLength": 128,
                                "minLength": 1,
                                "type": "string"
                            },
                            "next": {
                                "description": "The next activity in the pipeline.",
                                "maxLength": 128,
                                "minLength": 1,
                                "type": "string"
                            },
                            "roleArn": {
                                "description": "The ARN of the role that allows access to the device's registry information.",
                                "maxLength": 2048,
                                "minLength": 20,
                                "type": "string"
                            },
                            "thingName": {
                                "description": "The name of the IoT device whose registry information is added to the message.",
                                "maxLength": 256,
                                "minLength": 1,
                                "type": "string"
                            }
                        },
                        "required": [
                            "name",
                            "attribute",
                            "thingName",
                            "roleArn"
                        ],
                        "type": "object"
                    },
                    "deviceShadowEnrich": {
                        "description": "Adds information from the AWS IoT Device Shadows service to a message.",
                        "properties": {
                            "attribute": {
                                "description": "The name of the attribute that is added to the message.",
                                "maxLength": 256,
                                "minLength": 1,
                                "type": "string"
                            },
                            "name": {
                                "description": "The name of the 'deviceShadowEnrich' activity.",
                                "maxLength": 128,
                                "minLength": 1,
                                "type": "string"
                            },
                            "next": {
                                "description": "The next activity in the pipeline.",
                                "maxLength": 128,
                                "minLength": 1,
                                "type": "string"
                            },
                            "roleArn": {
                                "description": "The ARN of the role that allows access to the device's shadow.",
                                "maxLength": 2048,
                                "minLength": 20,
                                "type": "string"
                            },
                            "thingName": {
                                "description": "The name of the IoT device whose shadow information is added to the message.",
                                "maxLength": 256,
                                "minLength": 1,
                                "type": "string"
                            }
                        },
                        "required": [
                            "name",
                            "attribute",
                            "thingName",
                            "roleArn"
                        ],
                        "type": "object"
                    },
                    "filter": {
                        "description": "Filters a message based on its attributes.",
                        "properties": {
                            "filter": {
                                "description": "An expression that looks like a SQL WHERE clause that must return a Boolean value.",
                                "maxLength": 256,
                                "minLength": 1,
                                "type": "string"
                            },
                            "name": {
                                "description": "The name of the 'filter' activity.",
                                "maxLength": 128,
                                "minLength": 1,
                                "type": "string"
                            },
                            "next": {
                                "description": "The next activity in the pipeline.",
                                "maxLength": 128,
                                "minLength": 1,
                                "type": "string"
                            }
                        },
                        "required": [
                            "name",
                            "filter"
                        ],
                        "type": "object"
                    },
                    "lambda": {
                        "description": "Runs a Lambda function to modify the message.",
                        "properties": {
                            "batchSize": {
                                "description": "<p>The number of messages passed to the Lambda function for processing.</p> <p>The AWS Lambda function must be able to process all of these messages within five minutes, which is the maximum timeout duration for Lambda functions.</p>",
                                "maximum": 1000,
                                "minimum": 1,
                                "type": "integer"
                            },
                            "lambdaName": {
                                "description": "The name of the Lambda function that is run on the message.",
                                "maxLength": 64,
                                "minLength": 1,
                                "pattern": "^[a-zA-Z0-9_-]+$",
                                "type": "string"
                            },
                            "name": {
                                "description": "The name of the 'lambda' activity.",
                                "maxLength": 128,
                                "minLength": 1,
                                "type": "string"
                            },
                            "next": {
                                "description": "The next activity in the pipeline.",
                                "maxLength": 128,
                                "minLength": 1,
                                "type": "string"
                            }
                        },
                        "required": [
                            "name",
                            "lambdaName",
                            "batchSize"
                        ],
                        "type": "object"
                    },
                    "math": {
                        "description": "Computes an arithmetic expression using the message's attributes and adds it to the message.",
                        "properties": {
                            "attribute": {
                                "description": "The name of the attribute that contains the result of the math operation.",
                                "maxLength": 256,
                                "minLength": 1,
                                "type": "string"
                            },
                            "math": {
                                "description": "An expression that uses one or more existing attributes and must return an integer value.",
                                "maxLength": 256,
                                "minLength": 1,
                                "type": "string"
                            },
                            "name": {
                                "description": "The name of the 'math' activity.",
                                "maxLength": 128,
                                "minLength": 1,
                                "type": "string"
                            },
                            "next": {
                                "description": "The next activity in the pipeline.",
                                "maxLength": 128,
                                "minLength": 1,
                                "type": "string"
                            }
                        },
                        "required": [
                            "name",
                            "attribute",
                            "math"
                        ],
                        "type": "object"
                    },
                    "removeAttributes": {
                        "description": "Removes attributes from a message.",
                        "properties": {
                            "attributes": {
                                "description": "A list of 1-50 attributes to remove from the message.",
                                "items": {
                                    "maxLength": 256,
                                    "minLength": 1,
                                    "type": "string"
                                },
                                "maxItems": 50,
                                "minItems": 1,
                                "type": "array"
                            },
                            "name": {
                                "description": "The name of the 'removeAttributes' activity.",
                                "maxLength": 128,
                                "minLength": 1,
                                "type": "string"
                            },
                            "next": {
                                "description": "The next activity in the pipeline.",
                                "maxLength": 128,
                                "minLength": 1,
                                "type": "string"
                            }
                        },
                        "required": [
                            "name",
                            "attributes"
                        ],
                        "type": "object"
                    },
                    "selectAttributes": {
                        "description": "Creates a new message using only the specified attributes from the original message. ",
                        "properties": {
                            "attributes": {
                                "description": "A list of the attributes to select from the message.",
                                "items": {
                                    "maxLength": 256,
                                    "minLength": 1,
                                    "type": "string"
                                },
                                "maxItems": 50,
                                "minItems": 1,
                                "type": "array"
                            },
                            "name": {
                                "description": "The name of the 'selectAttributes' activity.",
                                "maxLength": 128,
                                "minLength": 1,
                                "type": "string"
                            },
                            "next": {
                                "description": "The next activity in the pipeline.",
                                "maxLength": 128,
                                "minLength": 1,
                                "type": "string"
                            }
                        },
                        "required": [
                            "name",
                            "attributes"
                        ],
                        "type": "object"
                    }
                },
                "type": "object"
            },
            "PipelineArn": {
                "type": "string"
            },
            "PipelineName": {
                "maxLength": 128,
                "minLength": 1,
                "pattern": "^[a-zA-Z0-9_]+$",
                "type": "string"
            },
            "PipelineSummaries": {
                "items": {
                    "description": "A summary of information about a pipeline.",
                    "properties": {
                        "creationTime": {
                            "description": "When the pipeline was created.",
                            "format": "date-time",
                            "type": "string"
                        },
                        "lastUpdateTime": {
                            "description": "When the pipeline was last updated.",
                            "format": "date-time",
                            "type": "string"
                        },
                        "pipelineName": {
                            "description": "The name of the pipeline.",
                            "maxLength": 128,
                            "minLength": 1,
                            "pattern": "^[a-zA-Z0-9_]+$",
                            "type": "string"
                        },
                        "reprocessingSummaries": {
                            "description": "A summary of information about the pipeline reprocessing.",
                            "items": {
                                "description": "Information about pipeline reprocessing.",
                                "properties": {
                                    "creationTime": {
                                        "description": "The time the pipeline reprocessing was created.",
                                        "format": "date-time",
                                        "type": "string"
                                    },
                                    "id": {
                                        "description": "The 'reprocessingId' returned by \"StartPipelineReprocessing\".",
                                        "type": "string"
                                    },
                                    "status": {
                                        "description": "The status of the pipeline reprocessing.",
                                        "enum": [
                                            "RUNNING",
                                            "SUCCEEDED",
                                            "CANCELLED",
                                            "FAILED"
                                        ],
                                        "type": "string"
                                    }
                                },
                                "type": "object"
                            },
                            "type": "array"
                        }
                    },
                    "type": "object"
                },
                "type": "array"
            },
            "PipelineSummary": {
                "description": "A summary of information about a pipeline.",
                "properties": {
                    "creationTime": {
                        "description": "When the pipeline was created.",
                        "format": "date-time",
                        "type": "string"
                    },
                    "lastUpdateTime": {
                        "description": "When the pipeline was last updated.",
                        "format": "date-time",
                        "type": "string"
                    },
                    "pipelineName": {
                        "description": "The name of the pipeline.",
                        "maxLength": 128,
                        "minLength": 1,
                        "pattern": "^[a-zA-Z0-9_]+$",
                        "type": "string"
                    },
                    "reprocessingSummaries": {
                        "description": "A summary of information about the pipeline reprocessing.",
                        "items": {
                            "description": "Information about pipeline reprocessing.",
                            "properties": {
                                "creationTime": {
                                    "description": "The time the pipeline reprocessing was created.",
                                    "format": "date-time",
                                    "type": "string"
                                },
                                "id": {
                                    "description": "The 'reprocessingId' returned by \"StartPipelineReprocessing\".",
                                    "type": "string"
                                },
                                "status": {
                                    "description": "The status of the pipeline reprocessing.",
                                    "enum": [
                                        "RUNNING",
                                        "SUCCEEDED",
                                        "CANCELLED",
                                        "FAILED"
                                    ],
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        },
                        "type": "array"
                    }
                },
                "type": "object"
            },
            "PresignedURI": {
                "type": "string"
            },
            "PutLoggingOptionsRequest": {
                "properties": {
                    "loggingOptions": {
                        "description": "The new values of the AWS IoT Analytics logging options.",
                        "properties": {
                            "enabled": {
                                "description": "If true, logging is enabled for AWS IoT Analytics.",
                                "type": "boolean"
                            },
                            "level": {
                                "description": "The logging level. Currently, only \"ERROR\" is supported.",
                                "enum": [
                                    "ERROR"
                                ],
                                "type": "string"
                            },
                            "roleArn": {
                                "description": "The ARN of the role that grants permission to AWS IoT Analytics to perform logging.",
                                "maxLength": 2048,
                                "minLength": 20,
                                "type": "string"
                            }
                        },
                        "required": [
                            "roleArn",
                            "level",
                            "enabled"
                        ],
                        "type": "object"
                    }
                },
                "required": [
                    "loggingOptions"
                ],
                "type": "object"
            },
            "QueryFilter": {
                "description": "Information which is used to filter message data, to segregate it according to the time frame in which it arrives.",
                "properties": {
                    "deltaTime": {
                        "description": "Used to limit data to that which has arrived since the last execution of the action.",
                        "properties": {
                            "offsetSeconds": {
                                "description": "The number of seconds of estimated \"in flight\" lag time of message data. When you create data set contents using message data from a specified time frame, some message data may still be \"in flight\" when processing begins, and so will not arrive in time to be processed. Use this field to make allowances for the \"in flight\" time of your message data, so that data not processed from a previous time frame will be included with the next time frame. Without this, missed message data would be excluded from processing during the next time frame as well, because its timestamp places it within the previous time frame.",
                                "type": "integer"
                            },
                            "timeExpression": {
                                "description": "An expression by which the time of the message data may be determined. This may be the name of a timestamp field, or a SQL expression which is used to derive the time the message data was generated.",
                                "type": "string"
                            }
                        },
                        "required": [
                            "offsetSeconds",
                            "timeExpression"
                        ],
                        "type": "object"
                    }
                },
                "type": "object"
            },
            "QueryFilters": {
                "items": {
                    "description": "Information which is used to filter message data, to segregate it according to the time frame in which it arrives.",
                    "properties": {
                        "deltaTime": {
                            "description": "Used to limit data to that which has arrived since the last execution of the action.",
                            "properties": {
                                "offsetSeconds": {
                                    "description": "The number of seconds of estimated \"in flight\" lag time of message data. When you create data set contents using message data from a specified time frame, some message data may still be \"in flight\" when processing begins, and so will not arrive in time to be processed. Use this field to make allowances for the \"in flight\" time of your message data, so that data not processed from a previous time frame will be included with the next time frame. Without this, missed message data would be excluded from processing during the next time frame as well, because its timestamp places it within the previous time frame.",
                                    "type": "integer"
                                },
                                "timeExpression": {
                                    "description": "An expression by which the time of the message data may be determined. This may be the name of a timestamp field, or a SQL expression which is used to derive the time the message data was generated.",
                                    "type": "string"
                                }
                            },
                            "required": [
                                "offsetSeconds",
                                "timeExpression"
                            ],
                            "type": "object"
                        }
                    },
                    "type": "object"
                },
                "maxItems": 1,
                "minItems": 0,
                "type": "array"
            },
            "Reason": {
                "type": "string"
            },
            "RemoveAttributesActivity": {
                "description": "An activity that removes attributes from a message.",
                "properties": {
                    "attributes": {
                        "description": "A list of 1-50 attributes to remove from the message.",
                        "items": {
                            "maxLength": 256,
                            "minLength": 1,
                            "type": "string"
                        },
                        "maxItems": 50,
                        "minItems": 1,
                        "type": "array"
                    },
                    "name": {
                        "description": "The name of the 'removeAttributes' activity.",
                        "maxLength": 128,
                        "minLength": 1,
                        "type": "string"
                    },
                    "next": {
                        "description": "The next activity in the pipeline.",
                        "maxLength": 128,
                        "minLength": 1,
                        "type": "string"
                    }
                },
                "required": [
                    "name",
                    "attributes"
                ],
                "type": "object"
            },
            "ReprocessingId": {
                "type": "string"
            },
            "ReprocessingStatus": {
                "enum": [
                    "RUNNING",
                    "SUCCEEDED",
                    "CANCELLED",
                    "FAILED"
                ],
                "type": "string"
            },
            "ReprocessingSummaries": {
                "items": {
                    "description": "Information about pipeline reprocessing.",
                    "properties": {
                        "creationTime": {
                            "description": "The time the pipeline reprocessing was created.",
                            "format": "date-time",
                            "type": "string"
                        },
                        "id": {
                            "description": "The 'reprocessingId' returned by \"StartPipelineReprocessing\".",
                            "type": "string"
                        },
                        "status": {
                            "description": "The status of the pipeline reprocessing.",
                            "enum": [
                                "RUNNING",
                                "SUCCEEDED",
                                "CANCELLED",
                                "FAILED"
                            ],
                            "type": "string"
                        }
                    },
                    "type": "object"
                },
                "type": "array"
            },
            "ReprocessingSummary": {
                "description": "Information about pipeline reprocessing.",
                "properties": {
                    "creationTime": {
                        "description": "The time the pipeline reprocessing was created.",
                        "format": "date-time",
                        "type": "string"
                    },
                    "id": {
                        "description": "The 'reprocessingId' returned by \"StartPipelineReprocessing\".",
                        "type": "string"
                    },
                    "status": {
                        "description": "The status of the pipeline reprocessing.",
                        "enum": [
                            "RUNNING",
                            "SUCCEEDED",
                            "CANCELLED",
                            "FAILED"
                        ],
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "ResourceAlreadyExistsException": {},
            "ResourceArn": {
                "maxLength": 2048,
                "minLength": 20,
                "type": "string"
            },
            "ResourceConfiguration": {
                "description": "The configuration of the resource used to execute the \"containerAction\".",
                "properties": {
                    "computeType": {
                        "description": "The type of the compute resource used to execute the \"containerAction\". Possible values are: ACU_1 (vCPU=4, memory=16GiB) or ACU_2 (vCPU=8, memory=32GiB).",
                        "enum": [
                            "ACU_1",
                            "ACU_2"
                        ],
                        "type": "string"
                    },
                    "volumeSizeInGB": {
                        "description": "The size (in GB) of the persistent storage available to the resource instance used to execute the \"containerAction\" (min: 1, max: 50).",
                        "maximum": 50,
                        "minimum": 1,
                        "type": "integer"
                    }
                },
                "required": [
                    "computeType",
                    "volumeSizeInGB"
                ],
                "type": "object"
            },
            "ResourceNotFoundException": {},
            "RetentionPeriod": {
                "description": "How long, in days, message data is kept.",
                "properties": {
                    "numberOfDays": {
                        "description": "The number of days that message data is kept. The \"unlimited\" parameter must be false.",
                        "minimum": 1,
                        "type": "integer"
                    },
                    "unlimited": {
                        "description": "If true, message data is kept indefinitely.",
                        "type": "boolean"
                    }
                },
                "type": "object"
            },
            "RetentionPeriodInDays": {
                "minimum": 1,
                "type": "integer"
            },
            "RoleArn": {
                "maxLength": 2048,
                "minLength": 20,
                "type": "string"
            },
            "RunPipelineActivityRequest": {
                "properties": {
                    "payloads": {
                        "description": "The sample message payloads on which the pipeline activity is run.",
                        "items": {
                            "type": "string"
                        },
                        "maxItems": 10,
                        "minItems": 1,
                        "type": "array"
                    },
                    "pipelineActivity": {
                        "description": "The pipeline activity that is run. This must not be a 'channel' activity or a 'datastore' activity because these activities are used in a pipeline only to load the original message and to store the (possibly) transformed message. If a 'lambda' activity is specified, only short-running Lambda functions (those with a timeout of less than 30 seconds or less) can be used.",
                        "properties": {
                            "addAttributes": {
                                "description": "Adds other attributes based on existing attributes in the message.",
                                "properties": {
                                    "attributes": {
                                        "description": "<p>A list of 1-50 \"AttributeNameMapping\" objects that map an existing attribute to a new attribute.</p> <note> <p>The existing attributes remain in the message, so if you want to remove the originals, use \"RemoveAttributeActivity\".</p> </note>",
                                        "items": {
                                            "properties": {
                                                "key": {
                                                    "maxLength": 256,
                                                    "minLength": 1,
                                                    "type": "string"
                                                },
                                                "value": {
                                                    "maxLength": 256,
                                                    "minLength": 1,
                                                    "type": "string"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "maxItems": 50,
                                        "minItems": 1,
                                        "type": "array"
                                    },
                                    "name": {
                                        "description": "The name of the 'addAttributes' activity.",
                                        "maxLength": 128,
                                        "minLength": 1,
                                        "type": "string"
                                    },
                                    "next": {
                                        "description": "The next activity in the pipeline.",
                                        "maxLength": 128,
                                        "minLength": 1,
                                        "type": "string"
                                    }
                                },
                                "required": [
                                    "name",
                                    "attributes"
                                ],
                                "type": "object"
                            },
                            "channel": {
                                "description": "Determines the source of the messages to be processed.",
                                "properties": {
                                    "channelName": {
                                        "description": "The name of the channel from which the messages are processed.",
                                        "maxLength": 128,
                                        "minLength": 1,
                                        "pattern": "^[a-zA-Z0-9_]+$",
                                        "type": "string"
                                    },
                                    "name": {
                                        "description": "The name of the 'channel' activity.",
                                        "maxLength": 128,
                                        "minLength": 1,
                                        "type": "string"
                                    },
                                    "next": {
                                        "description": "The next activity in the pipeline.",
                                        "maxLength": 128,
                                        "minLength": 1,
                                        "type": "string"
                                    }
                                },
                                "required": [
                                    "name",
                                    "channelName"
                                ],
                                "type": "object"
                            },
                            "datastore": {
                                "description": "Specifies where to store the processed message data.",
                                "properties": {
                                    "datastoreName": {
                                        "description": "The name of the data store where processed messages are stored.",
                                        "maxLength": 128,
                                        "minLength": 1,
                                        "pattern": "^[a-zA-Z0-9_]+$",
                                        "type": "string"
                                    },
                                    "name": {
                                        "description": "The name of the 'datastore' activity.",
                                        "maxLength": 128,
                                        "minLength": 1,
                                        "type": "string"
                                    }
                                },
                                "required": [
                                    "name",
                                    "datastoreName"
                                ],
                                "type": "object"
                            },
                            "deviceRegistryEnrich": {
                                "description": "Adds data from the AWS IoT device registry to your message.",
                                "properties": {
                                    "attribute": {
                                        "description": "The name of the attribute that is added to the message.",
                                        "maxLength": 256,
                                        "minLength": 1,
                                        "type": "string"
                                    },
                                    "name": {
                                        "description": "The name of the 'deviceRegistryEnrich' activity.",
                                        "maxLength": 128,
                                        "minLength": 1,
                                        "type": "string"
                                    },
                                    "next": {
                                        "description": "The next activity in the pipeline.",
                                        "maxLength": 128,
                                        "minLength": 1,
                                        "type": "string"
                                    },
                                    "roleArn": {
                                        "description": "The ARN of the role that allows access to the device's registry information.",
                                        "maxLength": 2048,
                                        "minLength": 20,
                                        "type": "string"
                                    },
                                    "thingName": {
                                        "description": "The name of the IoT device whose registry information is added to the message.",
                                        "maxLength": 256,
                                        "minLength": 1,
                                        "type": "string"
                                    }
                                },
                                "required": [
                                    "name",
                                    "attribute",
                                    "thingName",
                                    "roleArn"
                                ],
                                "type": "object"
                            },
                            "deviceShadowEnrich": {
                                "description": "Adds information from the AWS IoT Device Shadows service to a message.",
                                "properties": {
                                    "attribute": {
                                        "description": "The name of the attribute that is added to the message.",
                                        "maxLength": 256,
                                        "minLength": 1,
                                        "type": "string"
                                    },
                                    "name": {
                                        "description": "The name of the 'deviceShadowEnrich' activity.",
                                        "maxLength": 128,
                                        "minLength": 1,
                                        "type": "string"
                                    },
                                    "next": {
                                        "description": "The next activity in the pipeline.",
                                        "maxLength": 128,
                                        "minLength": 1,
                                        "type": "string"
                                    },
                                    "roleArn": {
                                        "description": "The ARN of the role that allows access to the device's shadow.",
                                        "maxLength": 2048,
                                        "minLength": 20,
                                        "type": "string"
                                    },
                                    "thingName": {
                                        "description": "The name of the IoT device whose shadow information is added to the message.",
                                        "maxLength": 256,
                                        "minLength": 1,
                                        "type": "string"
                                    }
                                },
                                "required": [
                                    "name",
                                    "attribute",
                                    "thingName",
                                    "roleArn"
                                ],
                                "type": "object"
                            },
                            "filter": {
                                "description": "Filters a message based on its attributes.",
                                "properties": {
                                    "filter": {
                                        "description": "An expression that looks like a SQL WHERE clause that must return a Boolean value.",
                                        "maxLength": 256,
                                        "minLength": 1,
                                        "type": "string"
                                    },
                                    "name": {
                                        "description": "The name of the 'filter' activity.",
                                        "maxLength": 128,
                                        "minLength": 1,
                                        "type": "string"
                                    },
                                    "next": {
                                        "description": "The next activity in the pipeline.",
                                        "maxLength": 128,
                                        "minLength": 1,
                                        "type": "string"
                                    }
                                },
                                "required": [
                                    "name",
                                    "filter"
                                ],
                                "type": "object"
                            },
                            "lambda": {
                                "description": "Runs a Lambda function to modify the message.",
                                "properties": {
                                    "batchSize": {
                                        "description": "<p>The number of messages passed to the Lambda function for processing.</p> <p>The AWS Lambda function must be able to process all of these messages within five minutes, which is the maximum timeout duration for Lambda functions.</p>",
                                        "maximum": 1000,
                                        "minimum": 1,
                                        "type": "integer"
                                    },
                                    "lambdaName": {
                                        "description": "The name of the Lambda function that is run on the message.",
                                        "maxLength": 64,
                                        "minLength": 1,
                                        "pattern": "^[a-zA-Z0-9_-]+$",
                                        "type": "string"
                                    },
                                    "name": {
                                        "description": "The name of the 'lambda' activity.",
                                        "maxLength": 128,
                                        "minLength": 1,
                                        "type": "string"
                                    },
                                    "next": {
                                        "description": "The next activity in the pipeline.",
                                        "maxLength": 128,
                                        "minLength": 1,
                                        "type": "string"
                                    }
                                },
                                "required": [
                                    "name",
                                    "lambdaName",
                                    "batchSize"
                                ],
                                "type": "object"
                            },
                            "math": {
                                "description": "Computes an arithmetic expression using the message's attributes and adds it to the message.",
                                "properties": {
                                    "attribute": {
                                        "description": "The name of the attribute that contains the result of the math operation.",
                                        "maxLength": 256,
                                        "minLength": 1,
                                        "type": "string"
                                    },
                                    "math": {
                                        "description": "An expression that uses one or more existing attributes and must return an integer value.",
                                        "maxLength": 256,
                                        "minLength": 1,
                                        "type": "string"
                                    },
                                    "name": {
                                        "description": "The name of the 'math' activity.",
                                        "maxLength": 128,
                                        "minLength": 1,
                                        "type": "string"
                                    },
                                    "next": {
                                        "description": "The next activity in the pipeline.",
                                        "maxLength": 128,
                                        "minLength": 1,
                                        "type": "string"
                                    }
                                },
                                "required": [
                                    "name",
                                    "attribute",
                                    "math"
                                ],
                                "type": "object"
                            },
                            "removeAttributes": {
                                "description": "Removes attributes from a message.",
                                "properties": {
                                    "attributes": {
                                        "description": "A list of 1-50 attributes to remove from the message.",
                                        "items": {
                                            "maxLength": 256,
                                            "minLength": 1,
                                            "type": "string"
                                        },
                                        "maxItems": 50,
                                        "minItems": 1,
                                        "type": "array"
                                    },
                                    "name": {
                                        "description": "The name of the 'removeAttributes' activity.",
                                        "maxLength": 128,
                                        "minLength": 1,
                                        "type": "string"
                                    },
                                    "next": {
                                        "description": "The next activity in the pipeline.",
                                        "maxLength": 128,
                                        "minLength": 1,
                                        "type": "string"
                                    }
                                },
                                "required": [
                                    "name",
                                    "attributes"
                                ],
                                "type": "object"
                            },
                            "selectAttributes": {
                                "description": "Creates a new message using only the specified attributes from the original message. ",
                                "properties": {
                                    "attributes": {
                                        "description": "A list of the attributes to select from the message.",
                                        "items": {
                                            "maxLength": 256,
                                            "minLength": 1,
                                            "type": "string"
                                        },
                                        "maxItems": 50,
                                        "minItems": 1,
                                        "type": "array"
                                    },
                                    "name": {
                                        "description": "The name of the 'selectAttributes' activity.",
                                        "maxLength": 128,
                                        "minLength": 1,
                                        "type": "string"
                                    },
                                    "next": {
                                        "description": "The next activity in the pipeline.",
                                        "maxLength": 128,
                                        "minLength": 1,
                                        "type": "string"
                                    }
                                },
                                "required": [
                                    "name",
                                    "attributes"
                                ],
                                "type": "object"
                            }
                        },
                        "type": "object"
                    }
                },
                "required": [
                    "pipelineActivity",
                    "payloads"
                ],
                "type": "object"
            },
            "RunPipelineActivityResponse": {
                "properties": {
                    "logResult": {
                        "description": "In case the pipeline activity fails, the log message that is generated.",
                        "type": "string"
                    },
                    "payloads": {
                        "description": "The enriched or transformed sample message payloads as base64-encoded strings. (The results of running the pipeline activity on each input sample message payload, encoded in base64.)",
                        "items": {
                            "type": "string"
                        },
                        "maxItems": 10,
                        "minItems": 1,
                        "type": "array"
                    }
                },
                "type": "object"
            },
            "SampleChannelDataRequest": {
                "properties": {},
                "type": "object"
            },
            "SampleChannelDataResponse": {
                "properties": {
                    "payloads": {
                        "description": "The list of message samples. Each sample message is returned as a base64-encoded string.",
                        "items": {
                            "type": "string"
                        },
                        "maxItems": 10,
                        "minItems": 1,
                        "type": "array"
                    }
                },
                "type": "object"
            },
            "Schedule": {
                "description": "The schedule for when to trigger an update.",
                "properties": {
                    "expression": {
                        "description": "The expression that defines when to trigger an update. For more information, see <a href=\"https://docs.aws.amazon.com/AmazonCloudWatch/latest/events/ScheduledEvents.html\"> Schedule Expressions for Rules</a> in the Amazon CloudWatch documentation.",
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "ScheduleExpression": {
                "type": "string"
            },
            "SelectAttributesActivity": {
                "description": "Creates a new message using only the specified attributes from the original message.",
                "properties": {
                    "attributes": {
                        "description": "A list of the attributes to select from the message.",
                        "items": {
                            "maxLength": 256,
                            "minLength": 1,
                            "type": "string"
                        },
                        "maxItems": 50,
                        "minItems": 1,
                        "type": "array"
                    },
                    "name": {
                        "description": "The name of the 'selectAttributes' activity.",
                        "maxLength": 128,
                        "minLength": 1,
                        "type": "string"
                    },
                    "next": {
                        "description": "The next activity in the pipeline.",
                        "maxLength": 128,
                        "minLength": 1,
                        "type": "string"
                    }
                },
                "required": [
                    "name",
                    "attributes"
                ],
                "type": "object"
            },
            "ServiceUnavailableException": {},
            "SizeInBytes": {
                "format": "double",
                "type": "number"
            },
            "SqlQuery": {
                "type": "string"
            },
            "SqlQueryDatasetAction": {
                "description": "The SQL query to modify the message.",
                "properties": {
                    "filters": {
                        "description": "Pre-filters applied to message data.",
                        "items": {
                            "description": "Information which is used to filter message data, to segregate it according to the time frame in which it arrives.",
                            "properties": {
                                "deltaTime": {
                                    "description": "Used to limit data to that which has arrived since the last execution of the action.",
                                    "properties": {
                                        "offsetSeconds": {
                                            "description": "The number of seconds of estimated \"in flight\" lag time of message data. When you create data set contents using message data from a specified time frame, some message data may still be \"in flight\" when processing begins, and so will not arrive in time to be processed. Use this field to make allowances for the \"in flight\" time of your message data, so that data not processed from a previous time frame will be included with the next time frame. Without this, missed message data would be excluded from processing during the next time frame as well, because its timestamp places it within the previous time frame.",
                                            "type": "integer"
                                        },
                                        "timeExpression": {
                                            "description": "An expression by which the time of the message data may be determined. This may be the name of a timestamp field, or a SQL expression which is used to derive the time the message data was generated.",
                                            "type": "string"
                                        }
                                    },
                                    "required": [
                                        "offsetSeconds",
                                        "timeExpression"
                                    ],
                                    "type": "object"
                                }
                            },
                            "type": "object"
                        },
                        "maxItems": 1,
                        "minItems": 0,
                        "type": "array"
                    },
                    "sqlQuery": {
                        "description": "A SQL query string.",
                        "type": "string"
                    }
                },
                "required": [
                    "sqlQuery"
                ],
                "type": "object"
            },
            "StartPipelineReprocessingRequest": {
                "properties": {
                    "endTime": {
                        "description": "The end time (exclusive) of raw message data that is reprocessed.",
                        "format": "date-time",
                        "type": "string"
                    },
                    "startTime": {
                        "description": "The start time (inclusive) of raw message data that is reprocessed.",
                        "format": "date-time",
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "StartPipelineReprocessingResponse": {
                "properties": {
                    "reprocessingId": {
                        "description": "The ID of the pipeline reprocessing activity that was started.",
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "StartTime": {
                "format": "date-time",
                "type": "string"
            },
            "StringValue": {
                "maxLength": 1024,
                "minLength": 0,
                "type": "string"
            },
            "Tag": {
                "description": "A set of key/value pairs which are used to manage the resource.",
                "properties": {
                    "key": {
                        "description": "The tag's key.",
                        "maxLength": 256,
                        "minLength": 1,
                        "type": "string"
                    },
                    "value": {
                        "description": "The tag's value.",
                        "maxLength": 256,
                        "minLength": 1,
                        "type": "string"
                    }
                },
                "required": [
                    "key",
                    "value"
                ],
                "type": "object"
            },
            "TagKey": {
                "maxLength": 256,
                "minLength": 1,
                "type": "string"
            },
            "TagKeyList": {
                "items": {
                    "maxLength": 256,
                    "minLength": 1,
                    "type": "string"
                },
                "maxItems": 50,
                "minItems": 1,
                "type": "array"
            },
            "TagList": {
                "items": {
                    "description": "A set of key/value pairs which are used to manage the resource.",
                    "properties": {
                        "key": {
                            "description": "The tag's key.",
                            "maxLength": 256,
                            "minLength": 1,
                            "type": "string"
                        },
                        "value": {
                            "description": "The tag's value.",
                            "maxLength": 256,
                            "minLength": 1,
                            "type": "string"
                        }
                    },
                    "required": [
                        "key",
                        "value"
                    ],
                    "type": "object"
                },
                "maxItems": 50,
                "minItems": 1,
                "type": "array"
            },
            "TagResourceRequest": {
                "properties": {
                    "tags": {
                        "description": "The new or modified tags for the resource.",
                        "items": {
                            "description": "A set of key/value pairs which are used to manage the resource.",
                            "properties": {
                                "key": {
                                    "description": "The tag's key.",
                                    "maxLength": 256,
                                    "minLength": 1,
                                    "type": "string"
                                },
                                "value": {
                                    "description": "The tag's value.",
                                    "maxLength": 256,
                                    "minLength": 1,
                                    "type": "string"
                                }
                            },
                            "required": [
                                "key",
                                "value"
                            ],
                            "type": "object"
                        },
                        "maxItems": 50,
                        "minItems": 1,
                        "type": "array"
                    }
                },
                "required": [
                    "tags"
                ],
                "type": "object"
            },
            "TagResourceResponse": {
                "properties": {},
                "type": "object"
            },
            "TagValue": {
                "maxLength": 256,
                "minLength": 1,
                "type": "string"
            },
            "ThrottlingException": {},
            "TimeExpression": {
                "type": "string"
            },
            "Timestamp": {
                "format": "date-time",
                "type": "string"
            },
            "TriggeringDataset": {
                "description": "Information about the data set whose content generation triggers the new data set content generation.",
                "properties": {
                    "name": {
                        "description": "The name of the data set whose content generation triggers the new data set content generation.",
                        "maxLength": 128,
                        "minLength": 1,
                        "pattern": "^[a-zA-Z0-9_]+$",
                        "type": "string"
                    }
                },
                "required": [
                    "name"
                ],
                "type": "object"
            },
            "UnlimitedRetentionPeriod": {
                "type": "boolean"
            },
            "UntagResourceRequest": {
                "properties": {},
                "type": "object"
            },
            "UntagResourceResponse": {
                "properties": {},
                "type": "object"
            },
            "UpdateChannelRequest": {
                "properties": {
                    "retentionPeriod": {
                        "description": "How long, in days, message data is kept for the channel.",
                        "properties": {
                            "numberOfDays": {
                                "description": "The number of days that message data is kept. The \"unlimited\" parameter must be false.",
                                "minimum": 1,
                                "type": "integer"
                            },
                            "unlimited": {
                                "description": "If true, message data is kept indefinitely.",
                                "type": "boolean"
                            }
                        },
                        "type": "object"
                    }
                },
                "type": "object"
            },
            "UpdateDatasetRequest": {
                "properties": {
                    "actions": {
                        "description": "A list of \"DatasetAction\" objects.",
                        "items": {
                            "description": "A \"DatasetAction\" object that specifies how data set contents are automatically created.",
                            "properties": {
                                "actionName": {
                                    "description": "The name of the data set action by which data set contents are automatically created.",
                                    "maxLength": 128,
                                    "minLength": 1,
                                    "pattern": "^[a-zA-Z0-9_]+$",
                                    "type": "string"
                                },
                                "containerAction": {
                                    "description": "Information which allows the system to run a containerized application in order to create the data set contents. The application must be in a Docker container along with any needed support libraries.",
                                    "properties": {
                                        "executionRoleArn": {
                                            "description": "The ARN of the role which gives permission to the system to access needed resources in order to run the \"containerAction\". This includes, at minimum, permission to retrieve the data set contents which are the input to the containerized application.",
                                            "maxLength": 2048,
                                            "minLength": 20,
                                            "type": "string"
                                        },
                                        "image": {
                                            "description": "The ARN of the Docker container stored in your account. The Docker container contains an application and needed support libraries and is used to generate data set contents.",
                                            "maxLength": 255,
                                            "type": "string"
                                        },
                                        "resourceConfiguration": {
                                            "description": "Configuration of the resource which executes the \"containerAction\".",
                                            "properties": {
                                                "computeType": {
                                                    "description": "The type of the compute resource used to execute the \"containerAction\". Possible values are: ACU_1 (vCPU=4, memory=16GiB) or ACU_2 (vCPU=8, memory=32GiB).",
                                                    "enum": [
                                                        "ACU_1",
                                                        "ACU_2"
                                                    ],
                                                    "type": "string"
                                                },
                                                "volumeSizeInGB": {
                                                    "description": "The size (in GB) of the persistent storage available to the resource instance used to execute the \"containerAction\" (min: 1, max: 50).",
                                                    "maximum": 50,
                                                    "minimum": 1,
                                                    "type": "integer"
                                                }
                                            },
                                            "required": [
                                                "computeType",
                                                "volumeSizeInGB"
                                            ],
                                            "type": "object"
                                        },
                                        "variables": {
                                            "description": "The values of variables used within the context of the execution of the containerized application (basically, parameters passed to the application). Each variable must have a name and a value given by one of \"stringValue\", \"datasetContentVersionValue\", or \"outputFileUriValue\".",
                                            "items": {
                                                "description": "An instance of a variable to be passed to the \"containerAction\" execution. Each variable must have a name and a value given by one of \"stringValue\", \"datasetContentVersionValue\", or \"outputFileUriValue\".",
                                                "properties": {
                                                    "datasetContentVersionValue": {
                                                        "description": "The value of the variable as a structure that specifies a data set content version.",
                                                        "properties": {
                                                            "datasetName": {
                                                                "description": "The name of the data set whose latest contents are used as input to the notebook or application.",
                                                                "maxLength": 128,
                                                                "minLength": 1,
                                                                "pattern": "^[a-zA-Z0-9_]+$",
                                                                "type": "string"
                                                            }
                                                        },
                                                        "required": [
                                                            "datasetName"
                                                        ],
                                                        "type": "object"
                                                    },
                                                    "doubleValue": {
                                                        "description": "The value of the variable as a double (numeric).",
                                                        "format": "double",
                                                        "type": "number"
                                                    },
                                                    "name": {
                                                        "description": "The name of the variable.",
                                                        "maxLength": 256,
                                                        "minLength": 1,
                                                        "type": "string"
                                                    },
                                                    "outputFileUriValue": {
                                                        "description": "The value of the variable as a structure that specifies an output file URI.",
                                                        "properties": {
                                                            "fileName": {
                                                                "description": "The URI of the location where data set contents are stored, usually the URI of a file in an S3 bucket.",
                                                                "pattern": "[\\w\\.-]{1,255}",
                                                                "type": "string"
                                                            }
                                                        },
                                                        "required": [
                                                            "fileName"
                                                        ],
                                                        "type": "object"
                                                    },
                                                    "stringValue": {
                                                        "description": "The value of the variable as a string.",
                                                        "maxLength": 1024,
                                                        "minLength": 0,
                                                        "type": "string"
                                                    }
                                                },
                                                "required": [
                                                    "name"
                                                ],
                                                "type": "object"
                                            },
                                            "maxItems": 50,
                                            "minItems": 0,
                                            "type": "array"
                                        }
                                    },
                                    "required": [
                                        "image",
                                        "executionRoleArn",
                                        "resourceConfiguration"
                                    ],
                                    "type": "object"
                                },
                                "queryAction": {
                                    "description": "An \"SqlQueryDatasetAction\" object that uses an SQL query to automatically create data set contents.",
                                    "properties": {
                                        "filters": {
                                            "description": "Pre-filters applied to message data.",
                                            "items": {
                                                "description": "Information which is used to filter message data, to segregate it according to the time frame in which it arrives.",
                                                "properties": {
                                                    "deltaTime": {
                                                        "description": "Used to limit data to that which has arrived since the last execution of the action.",
                                                        "properties": {
                                                            "offsetSeconds": {
                                                                "description": "The number of seconds of estimated \"in flight\" lag time of message data. When you create data set contents using message data from a specified time frame, some message data may still be \"in flight\" when processing begins, and so will not arrive in time to be processed. Use this field to make allowances for the \"in flight\" time of your message data, so that data not processed from a previous time frame will be included with the next time frame. Without this, missed message data would be excluded from processing during the next time frame as well, because its timestamp places it within the previous time frame.",
                                                                "type": "integer"
                                                            },
                                                            "timeExpression": {
                                                                "description": "An expression by which the time of the message data may be determined. This may be the name of a timestamp field, or a SQL expression which is used to derive the time the message data was generated.",
                                                                "type": "string"
                                                            }
                                                        },
                                                        "required": [
                                                            "offsetSeconds",
                                                            "timeExpression"
                                                        ],
                                                        "type": "object"
                                                    }
                                                },
                                                "type": "object"
                                            },
                                            "maxItems": 1,
                                            "minItems": 0,
                                            "type": "array"
                                        },
                                        "sqlQuery": {
                                            "description": "A SQL query string.",
                                            "type": "string"
                                        }
                                    },
                                    "required": [
                                        "sqlQuery"
                                    ],
                                    "type": "object"
                                }
                            },
                            "type": "object"
                        },
                        "maxItems": 1,
                        "minItems": 1,
                        "type": "array"
                    },
                    "contentDeliveryRules": {
                        "description": "When data set contents are created they are delivered to destinations specified here.",
                        "items": {
                            "description": "When data set contents are created they are delivered to destination specified here.",
                            "properties": {
                                "destination": {
                                    "description": "The destination to which data set contents are delivered.",
                                    "properties": {
                                        "iotEventsDestinationConfiguration": {
                                            "description": "Configuration information for delivery of data set contents to AWS IoT Events.",
                                            "properties": {
                                                "inputName": {
                                                    "description": "The name of the AWS IoT Events input to which data set contents are delivered.",
                                                    "maxLength": 128,
                                                    "minLength": 1,
                                                    "pattern": "^[a-zA-Z][a-zA-Z0-9_]*$",
                                                    "type": "string"
                                                },
                                                "roleArn": {
                                                    "description": "The ARN of the role which grants AWS IoT Analytics permission to deliver data set contents to an AWS IoT Events input.",
                                                    "maxLength": 2048,
                                                    "minLength": 20,
                                                    "type": "string"
                                                }
                                            },
                                            "required": [
                                                "inputName",
                                                "roleArn"
                                            ],
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                },
                                "entryName": {
                                    "description": "The name of the data set content delivery rules entry.",
                                    "type": "string"
                                }
                            },
                            "required": [
                                "destination"
                            ],
                            "type": "object"
                        },
                        "maxItems": 20,
                        "minItems": 0,
                        "type": "array"
                    },
                    "retentionPeriod": {
                        "description": "How long, in days, message data is kept for the data set.",
                        "properties": {
                            "numberOfDays": {
                                "description": "The number of days that message data is kept. The \"unlimited\" parameter must be false.",
                                "minimum": 1,
                                "type": "integer"
                            },
                            "unlimited": {
                                "description": "If true, message data is kept indefinitely.",
                                "type": "boolean"
                            }
                        },
                        "type": "object"
                    },
                    "triggers": {
                        "description": "A list of \"DatasetTrigger\" objects. The list can be empty or can contain up to five <b>DataSetTrigger</b> objects.",
                        "items": {
                            "description": "The \"DatasetTrigger\" that specifies when the data set is automatically updated.",
                            "properties": {
                                "dataset": {
                                    "description": "The data set whose content creation triggers the creation of this data set's contents.",
                                    "properties": {
                                        "name": {
                                            "description": "The name of the data set whose content generation triggers the new data set content generation.",
                                            "maxLength": 128,
                                            "minLength": 1,
                                            "pattern": "^[a-zA-Z0-9_]+$",
                                            "type": "string"
                                        }
                                    },
                                    "required": [
                                        "name"
                                    ],
                                    "type": "object"
                                },
                                "schedule": {
                                    "description": "The \"Schedule\" when the trigger is initiated.",
                                    "properties": {
                                        "expression": {
                                            "description": "The expression that defines when to trigger an update. For more information, see <a href=\"https://docs.aws.amazon.com/AmazonCloudWatch/latest/events/ScheduledEvents.html\"> Schedule Expressions for Rules</a> in the Amazon CloudWatch documentation.",
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            },
                            "type": "object"
                        },
                        "maxItems": 5,
                        "minItems": 0,
                        "type": "array"
                    }
                },
                "required": [
                    "actions"
                ],
                "type": "object"
            },
            "UpdateDatastoreRequest": {
                "properties": {
                    "retentionPeriod": {
                        "description": "How long, in days, message data is kept for the data store.",
                        "properties": {
                            "numberOfDays": {
                                "description": "The number of days that message data is kept. The \"unlimited\" parameter must be false.",
                                "minimum": 1,
                                "type": "integer"
                            },
                            "unlimited": {
                                "description": "If true, message data is kept indefinitely.",
                                "type": "boolean"
                            }
                        },
                        "type": "object"
                    }
                },
                "type": "object"
            },
            "UpdatePipelineRequest": {
                "properties": {
                    "pipelineActivities": {
                        "description": "<p>A list of \"PipelineActivity\" objects.</p> <p>The list can be 1-25 <b>PipelineActivity</b> objects. Activities perform transformations on your messages, such as removing, renaming or adding message attributes; filtering messages based on attribute values; invoking your Lambda functions on messages for advanced processing; or performing mathematical transformations to normalize device data.</p>",
                        "items": {
                            "description": "An activity that performs a transformation on a message.",
                            "properties": {
                                "addAttributes": {
                                    "description": "Adds other attributes based on existing attributes in the message.",
                                    "properties": {
                                        "attributes": {
                                            "description": "<p>A list of 1-50 \"AttributeNameMapping\" objects that map an existing attribute to a new attribute.</p> <note> <p>The existing attributes remain in the message, so if you want to remove the originals, use \"RemoveAttributeActivity\".</p> </note>",
                                            "items": {
                                                "properties": {
                                                    "key": {
                                                        "maxLength": 256,
                                                        "minLength": 1,
                                                        "type": "string"
                                                    },
                                                    "value": {
                                                        "maxLength": 256,
                                                        "minLength": 1,
                                                        "type": "string"
                                                    }
                                                },
                                                "type": "object"
                                            },
                                            "maxItems": 50,
                                            "minItems": 1,
                                            "type": "array"
                                        },
                                        "name": {
                                            "description": "The name of the 'addAttributes' activity.",
                                            "maxLength": 128,
                                            "minLength": 1,
                                            "type": "string"
                                        },
                                        "next": {
                                            "description": "The next activity in the pipeline.",
                                            "maxLength": 128,
                                            "minLength": 1,
                                            "type": "string"
                                        }
                                    },
                                    "required": [
                                        "name",
                                        "attributes"
                                    ],
                                    "type": "object"
                                },
                                "channel": {
                                    "description": "Determines the source of the messages to be processed.",
                                    "properties": {
                                        "channelName": {
                                            "description": "The name of the channel from which the messages are processed.",
                                            "maxLength": 128,
                                            "minLength": 1,
                                            "pattern": "^[a-zA-Z0-9_]+$",
                                            "type": "string"
                                        },
                                        "name": {
                                            "description": "The name of the 'channel' activity.",
                                            "maxLength": 128,
                                            "minLength": 1,
                                            "type": "string"
                                        },
                                        "next": {
                                            "description": "The next activity in the pipeline.",
                                            "maxLength": 128,
                                            "minLength": 1,
                                            "type": "string"
                                        }
                                    },
                                    "required": [
                                        "name",
                                        "channelName"
                                    ],
                                    "type": "object"
                                },
                                "datastore": {
                                    "description": "Specifies where to store the processed message data.",
                                    "properties": {
                                        "datastoreName": {
                                            "description": "The name of the data store where processed messages are stored.",
                                            "maxLength": 128,
                                            "minLength": 1,
                                            "pattern": "^[a-zA-Z0-9_]+$",
                                            "type": "string"
                                        },
                                        "name": {
                                            "description": "The name of the 'datastore' activity.",
                                            "maxLength": 128,
                                            "minLength": 1,
                                            "type": "string"
                                        }
                                    },
                                    "required": [
                                        "name",
                                        "datastoreName"
                                    ],
                                    "type": "object"
                                },
                                "deviceRegistryEnrich": {
                                    "description": "Adds data from the AWS IoT device registry to your message.",
                                    "properties": {
                                        "attribute": {
                                            "description": "The name of the attribute that is added to the message.",
                                            "maxLength": 256,
                                            "minLength": 1,
                                            "type": "string"
                                        },
                                        "name": {
                                            "description": "The name of the 'deviceRegistryEnrich' activity.",
                                            "maxLength": 128,
                                            "minLength": 1,
                                            "type": "string"
                                        },
                                        "next": {
                                            "description": "The next activity in the pipeline.",
                                            "maxLength": 128,
                                            "minLength": 1,
                                            "type": "string"
                                        },
                                        "roleArn": {
                                            "description": "The ARN of the role that allows access to the device's registry information.",
                                            "maxLength": 2048,
                                            "minLength": 20,
                                            "type": "string"
                                        },
                                        "thingName": {
                                            "description": "The name of the IoT device whose registry information is added to the message.",
                                            "maxLength": 256,
                                            "minLength": 1,
                                            "type": "string"
                                        }
                                    },
                                    "required": [
                                        "name",
                                        "attribute",
                                        "thingName",
                                        "roleArn"
                                    ],
                                    "type": "object"
                                },
                                "deviceShadowEnrich": {
                                    "description": "Adds information from the AWS IoT Device Shadows service to a message.",
                                    "properties": {
                                        "attribute": {
                                            "description": "The name of the attribute that is added to the message.",
                                            "maxLength": 256,
                                            "minLength": 1,
                                            "type": "string"
                                        },
                                        "name": {
                                            "description": "The name of the 'deviceShadowEnrich' activity.",
                                            "maxLength": 128,
                                            "minLength": 1,
                                            "type": "string"
                                        },
                                        "next": {
                                            "description": "The next activity in the pipeline.",
                                            "maxLength": 128,
                                            "minLength": 1,
                                            "type": "string"
                                        },
                                        "roleArn": {
                                            "description": "The ARN of the role that allows access to the device's shadow.",
                                            "maxLength": 2048,
                                            "minLength": 20,
                                            "type": "string"
                                        },
                                        "thingName": {
                                            "description": "The name of the IoT device whose shadow information is added to the message.",
                                            "maxLength": 256,
                                            "minLength": 1,
                                            "type": "string"
                                        }
                                    },
                                    "required": [
                                        "name",
                                        "attribute",
                                        "thingName",
                                        "roleArn"
                                    ],
                                    "type": "object"
                                },
                                "filter": {
                                    "description": "Filters a message based on its attributes.",
                                    "properties": {
                                        "filter": {
                                            "description": "An expression that looks like a SQL WHERE clause that must return a Boolean value.",
                                            "maxLength": 256,
                                            "minLength": 1,
                                            "type": "string"
                                        },
                                        "name": {
                                            "description": "The name of the 'filter' activity.",
                                            "maxLength": 128,
                                            "minLength": 1,
                                            "type": "string"
                                        },
                                        "next": {
                                            "description": "The next activity in the pipeline.",
                                            "maxLength": 128,
                                            "minLength": 1,
                                            "type": "string"
                                        }
                                    },
                                    "required": [
                                        "name",
                                        "filter"
                                    ],
                                    "type": "object"
                                },
                                "lambda": {
                                    "description": "Runs a Lambda function to modify the message.",
                                    "properties": {
                                        "batchSize": {
                                            "description": "<p>The number of messages passed to the Lambda function for processing.</p> <p>The AWS Lambda function must be able to process all of these messages within five minutes, which is the maximum timeout duration for Lambda functions.</p>",
                                            "maximum": 1000,
                                            "minimum": 1,
                                            "type": "integer"
                                        },
                                        "lambdaName": {
                                            "description": "The name of the Lambda function that is run on the message.",
                                            "maxLength": 64,
                                            "minLength": 1,
                                            "pattern": "^[a-zA-Z0-9_-]+$",
                                            "type": "string"
                                        },
                                        "name": {
                                            "description": "The name of the 'lambda' activity.",
                                            "maxLength": 128,
                                            "minLength": 1,
                                            "type": "string"
                                        },
                                        "next": {
                                            "description": "The next activity in the pipeline.",
                                            "maxLength": 128,
                                            "minLength": 1,
                                            "type": "string"
                                        }
                                    },
                                    "required": [
                                        "name",
                                        "lambdaName",
                                        "batchSize"
                                    ],
                                    "type": "object"
                                },
                                "math": {
                                    "description": "Computes an arithmetic expression using the message's attributes and adds it to the message.",
                                    "properties": {
                                        "attribute": {
                                            "description": "The name of the attribute that contains the result of the math operation.",
                                            "maxLength": 256,
                                            "minLength": 1,
                                            "type": "string"
                                        },
                                        "math": {
                                            "description": "An expression that uses one or more existing attributes and must return an integer value.",
                                            "maxLength": 256,
                                            "minLength": 1,
                                            "type": "string"
                                        },
                                        "name": {
                                            "description": "The name of the 'math' activity.",
                                            "maxLength": 128,
                                            "minLength": 1,
                                            "type": "string"
                                        },
                                        "next": {
                                            "description": "The next activity in the pipeline.",
                                            "maxLength": 128,
                                            "minLength": 1,
                                            "type": "string"
                                        }
                                    },
                                    "required": [
                                        "name",
                                        "attribute",
                                        "math"
                                    ],
                                    "type": "object"
                                },
                                "removeAttributes": {
                                    "description": "Removes attributes from a message.",
                                    "properties": {
                                        "attributes": {
                                            "description": "A list of 1-50 attributes to remove from the message.",
                                            "items": {
                                                "maxLength": 256,
                                                "minLength": 1,
                                                "type": "string"
                                            },
                                            "maxItems": 50,
                                            "minItems": 1,
                                            "type": "array"
                                        },
                                        "name": {
                                            "description": "The name of the 'removeAttributes' activity.",
                                            "maxLength": 128,
                                            "minLength": 1,
                                            "type": "string"
                                        },
                                        "next": {
                                            "description": "The next activity in the pipeline.",
                                            "maxLength": 128,
                                            "minLength": 1,
                                            "type": "string"
                                        }
                                    },
                                    "required": [
                                        "name",
                                        "attributes"
                                    ],
                                    "type": "object"
                                },
                                "selectAttributes": {
                                    "description": "Creates a new message using only the specified attributes from the original message. ",
                                    "properties": {
                                        "attributes": {
                                            "description": "A list of the attributes to select from the message.",
                                            "items": {
                                                "maxLength": 256,
                                                "minLength": 1,
                                                "type": "string"
                                            },
                                            "maxItems": 50,
                                            "minItems": 1,
                                            "type": "array"
                                        },
                                        "name": {
                                            "description": "The name of the 'selectAttributes' activity.",
                                            "maxLength": 128,
                                            "minLength": 1,
                                            "type": "string"
                                        },
                                        "next": {
                                            "description": "The next activity in the pipeline.",
                                            "maxLength": 128,
                                            "minLength": 1,
                                            "type": "string"
                                        }
                                    },
                                    "required": [
                                        "name",
                                        "attributes"
                                    ],
                                    "type": "object"
                                }
                            },
                            "type": "object"
                        },
                        "maxItems": 25,
                        "minItems": 1,
                        "type": "array"
                    }
                },
                "required": [
                    "pipelineActivities"
                ],
                "type": "object"
            },
            "Variable": {
                "description": "An instance of a variable to be passed to the \"containerAction\" execution. Each variable must have a name and a value given by one of \"stringValue\", \"datasetContentVersionValue\", or \"outputFileUriValue\".",
                "properties": {
                    "datasetContentVersionValue": {
                        "description": "The value of the variable as a structure that specifies a data set content version.",
                        "properties": {
                            "datasetName": {
                                "description": "The name of the data set whose latest contents are used as input to the notebook or application.",
                                "maxLength": 128,
                                "minLength": 1,
                                "pattern": "^[a-zA-Z0-9_]+$",
                                "type": "string"
                            }
                        },
                        "required": [
                            "datasetName"
                        ],
                        "type": "object"
                    },
                    "doubleValue": {
                        "description": "The value of the variable as a double (numeric).",
                        "format": "double",
                        "type": "number"
                    },
                    "name": {
                        "description": "The name of the variable.",
                        "maxLength": 256,
                        "minLength": 1,
                        "type": "string"
                    },
                    "outputFileUriValue": {
                        "description": "The value of the variable as a structure that specifies an output file URI.",
                        "properties": {
                            "fileName": {
                                "description": "The URI of the location where data set contents are stored, usually the URI of a file in an S3 bucket.",
                                "pattern": "[\\w\\.-]{1,255}",
                                "type": "string"
                            }
                        },
                        "required": [
                            "fileName"
                        ],
                        "type": "object"
                    },
                    "stringValue": {
                        "description": "The value of the variable as a string.",
                        "maxLength": 1024,
                        "minLength": 0,
                        "type": "string"
                    }
                },
                "required": [
                    "name"
                ],
                "type": "object"
            },
            "VariableName": {
                "maxLength": 256,
                "minLength": 1,
                "type": "string"
            },
            "Variables": {
                "items": {
                    "description": "An instance of a variable to be passed to the \"containerAction\" execution. Each variable must have a name and a value given by one of \"stringValue\", \"datasetContentVersionValue\", or \"outputFileUriValue\".",
                    "properties": {
                        "datasetContentVersionValue": {
                            "description": "The value of the variable as a structure that specifies a data set content version.",
                            "properties": {
                                "datasetName": {
                                    "description": "The name of the data set whose latest contents are used as input to the notebook or application.",
                                    "maxLength": 128,
                                    "minLength": 1,
                                    "pattern": "^[a-zA-Z0-9_]+$",
                                    "type": "string"
                                }
                            },
                            "required": [
                                "datasetName"
                            ],
                            "type": "object"
                        },
                        "doubleValue": {
                            "description": "The value of the variable as a double (numeric).",
                            "format": "double",
                            "type": "number"
                        },
                        "name": {
                            "description": "The name of the variable.",
                            "maxLength": 256,
                            "minLength": 1,
                            "type": "string"
                        },
                        "outputFileUriValue": {
                            "description": "The value of the variable as a structure that specifies an output file URI.",
                            "properties": {
                                "fileName": {
                                    "description": "The URI of the location where data set contents are stored, usually the URI of a file in an S3 bucket.",
                                    "pattern": "[\\w\\.-]{1,255}",
                                    "type": "string"
                                }
                            },
                            "required": [
                                "fileName"
                            ],
                            "type": "object"
                        },
                        "stringValue": {
                            "description": "The value of the variable as a string.",
                            "maxLength": 1024,
                            "minLength": 0,
                            "type": "string"
                        }
                    },
                    "required": [
                        "name"
                    ],
                    "type": "object"
                },
                "maxItems": 50,
                "minItems": 0,
                "type": "array"
            },
            "VolumeSizeInGB": {
                "maximum": 50,
                "minimum": 1,
                "type": "integer"
            }
        },
        "parameters": {
            "Action": {
                "in": "query",
                "name": "Action",
                "required": true,
                "schema": {
                    "type": "string"
                }
            },
            "Version": {
                "in": "query",
                "name": "Version",
                "required": true,
                "schema": {
                    "type": "string"
                }
            },
            "X-Amz-Algorithm": {
                "in": "header",
                "name": "X-Amz-Algorithm",
                "required": false,
                "schema": {
                    "type": "string"
                }
            },
            "X-Amz-Content-Sha256": {
                "in": "header",
                "name": "X-Amz-Content-Sha256",
                "required": false,
                "schema": {
                    "type": "string"
                }
            },
            "X-Amz-Credential": {
                "in": "header",
                "name": "X-Amz-Credential",
                "required": false,
                "schema": {
                    "type": "string"
                }
            },
            "X-Amz-Date": {
                "in": "header",
                "name": "X-Amz-Date",
                "required": false,
                "schema": {
                    "type": "string"
                }
            },
            "X-Amz-Security-Token": {
                "in": "header",
                "name": "X-Amz-Security-Token",
                "required": false,
                "schema": {
                    "type": "string"
                }
            },
            "X-Amz-Signature": {
                "in": "header",
                "name": "X-Amz-Signature",
                "required": false,
                "schema": {
                    "type": "string"
                }
            },
            "X-Amz-SignedHeaders": {
                "in": "header",
                "name": "X-Amz-SignedHeaders",
                "required": false,
                "schema": {
                    "type": "string"
                }
            }
        },
        "requestBodies": {
            "ListChannelsBody": {
                "content": {
                    "application/json": {
                        "schema": {
                            "properties": {},
                            "type": "object"
                        }
                    }
                },
                "required": true
            }
        },
        "securitySchemes": {
            "hmac": {
                "description": "Amazon Signature authorization v4",
                "in": "header",
                "name": "Authorization",
                "type": "apiKey",
                "x-amazon-apigateway-authtype": "awsSigv4"
            }
        }
    }
}